// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: binlogdata.proto

package binlogdata;

public final class Binlogdata {
  private Binlogdata() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * OnDDLAction lists the possible actions for DDLs.
   * </pre>
   *
   * Protobuf enum {@code binlogdata.OnDDLAction}
   */
  public enum OnDDLAction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>IGNORE = 0;</code>
     */
    IGNORE(0),
    /**
     * <code>STOP = 1;</code>
     */
    STOP(1),
    /**
     * <code>EXEC = 2;</code>
     */
    EXEC(2),
    /**
     * <code>EXEC_IGNORE = 3;</code>
     */
    EXEC_IGNORE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>IGNORE = 0;</code>
     */
    public static final int IGNORE_VALUE = 0;
    /**
     * <code>STOP = 1;</code>
     */
    public static final int STOP_VALUE = 1;
    /**
     * <code>EXEC = 2;</code>
     */
    public static final int EXEC_VALUE = 2;
    /**
     * <code>EXEC_IGNORE = 3;</code>
     */
    public static final int EXEC_IGNORE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static OnDDLAction valueOf(int value) {
      return forNumber(value);
    }

    public static OnDDLAction forNumber(int value) {
      switch (value) {
        case 0: return IGNORE;
        case 1: return STOP;
        case 2: return EXEC;
        case 3: return EXEC_IGNORE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OnDDLAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OnDDLAction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OnDDLAction>() {
            public OnDDLAction findValueByNumber(int number) {
              return OnDDLAction.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Binlogdata.getDescriptor().getEnumTypes().get(0);
    }

    private static final OnDDLAction[] VALUES = values();

    public static OnDDLAction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OnDDLAction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:binlogdata.OnDDLAction)
  }

  /**
   * <pre>
   * VEventType enumerates the event types. Many of these types
   * will not be encountered in RBR mode.
   * </pre>
   *
   * Protobuf enum {@code binlogdata.VEventType}
   */
  public enum VEventType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>GTID = 1;</code>
     */
    GTID(1),
    /**
     * <code>BEGIN = 2;</code>
     */
    BEGIN(2),
    /**
     * <code>COMMIT = 3;</code>
     */
    COMMIT(3),
    /**
     * <code>ROLLBACK = 4;</code>
     */
    ROLLBACK(4),
    /**
     * <code>DDL = 5;</code>
     */
    DDL(5),
    /**
     * <pre>
     * INSERT, REPLACE, UPDATE, DELETE and SET will not be seen in RBR mode.
     * </pre>
     *
     * <code>INSERT = 6;</code>
     */
    INSERT(6),
    /**
     * <code>REPLACE = 7;</code>
     */
    REPLACE(7),
    /**
     * <code>UPDATE = 8;</code>
     */
    UPDATE(8),
    /**
     * <code>DELETE = 9;</code>
     */
    DELETE(9),
    /**
     * <code>SET = 10;</code>
     */
    SET(10),
    /**
     * <pre>
     * OTHER is a dummy event. If encountered, the current GTID must be
     * recorded by the client to be able to resume.
     * </pre>
     *
     * <code>OTHER = 11;</code>
     */
    OTHER(11),
    /**
     * <code>ROW = 12;</code>
     */
    ROW(12),
    /**
     * <code>FIELD = 13;</code>
     */
    FIELD(13),
    /**
     * <pre>
     * HEARTBEAT is sent if there is inactivity. If a client does not
     * receive events beyond the hearbeat interval, it can assume that it's
     * lost connection to the vstreamer.
     * </pre>
     *
     * <code>HEARTBEAT = 14;</code>
     */
    HEARTBEAT(14),
    /**
     * <pre>
     * VGTID is generated by VTGate's VStream that combines multiple
     * GTIDs.
     * </pre>
     *
     * <code>VGTID = 15;</code>
     */
    VGTID(15),
    /**
     * <code>JOURNAL = 16;</code>
     */
    JOURNAL(16),
    /**
     * <code>VERSION = 17;</code>
     */
    VERSION(17),
    /**
     * <code>LASTPK = 18;</code>
     */
    LASTPK(18),
    /**
     * <code>SAVEPOINT = 19;</code>
     */
    SAVEPOINT(19),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>GTID = 1;</code>
     */
    public static final int GTID_VALUE = 1;
    /**
     * <code>BEGIN = 2;</code>
     */
    public static final int BEGIN_VALUE = 2;
    /**
     * <code>COMMIT = 3;</code>
     */
    public static final int COMMIT_VALUE = 3;
    /**
     * <code>ROLLBACK = 4;</code>
     */
    public static final int ROLLBACK_VALUE = 4;
    /**
     * <code>DDL = 5;</code>
     */
    public static final int DDL_VALUE = 5;
    /**
     * <pre>
     * INSERT, REPLACE, UPDATE, DELETE and SET will not be seen in RBR mode.
     * </pre>
     *
     * <code>INSERT = 6;</code>
     */
    public static final int INSERT_VALUE = 6;
    /**
     * <code>REPLACE = 7;</code>
     */
    public static final int REPLACE_VALUE = 7;
    /**
     * <code>UPDATE = 8;</code>
     */
    public static final int UPDATE_VALUE = 8;
    /**
     * <code>DELETE = 9;</code>
     */
    public static final int DELETE_VALUE = 9;
    /**
     * <code>SET = 10;</code>
     */
    public static final int SET_VALUE = 10;
    /**
     * <pre>
     * OTHER is a dummy event. If encountered, the current GTID must be
     * recorded by the client to be able to resume.
     * </pre>
     *
     * <code>OTHER = 11;</code>
     */
    public static final int OTHER_VALUE = 11;
    /**
     * <code>ROW = 12;</code>
     */
    public static final int ROW_VALUE = 12;
    /**
     * <code>FIELD = 13;</code>
     */
    public static final int FIELD_VALUE = 13;
    /**
     * <pre>
     * HEARTBEAT is sent if there is inactivity. If a client does not
     * receive events beyond the hearbeat interval, it can assume that it's
     * lost connection to the vstreamer.
     * </pre>
     *
     * <code>HEARTBEAT = 14;</code>
     */
    public static final int HEARTBEAT_VALUE = 14;
    /**
     * <pre>
     * VGTID is generated by VTGate's VStream that combines multiple
     * GTIDs.
     * </pre>
     *
     * <code>VGTID = 15;</code>
     */
    public static final int VGTID_VALUE = 15;
    /**
     * <code>JOURNAL = 16;</code>
     */
    public static final int JOURNAL_VALUE = 16;
    /**
     * <code>VERSION = 17;</code>
     */
    public static final int VERSION_VALUE = 17;
    /**
     * <code>LASTPK = 18;</code>
     */
    public static final int LASTPK_VALUE = 18;
    /**
     * <code>SAVEPOINT = 19;</code>
     */
    public static final int SAVEPOINT_VALUE = 19;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static VEventType valueOf(int value) {
      return forNumber(value);
    }

    public static VEventType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return GTID;
        case 2: return BEGIN;
        case 3: return COMMIT;
        case 4: return ROLLBACK;
        case 5: return DDL;
        case 6: return INSERT;
        case 7: return REPLACE;
        case 8: return UPDATE;
        case 9: return DELETE;
        case 10: return SET;
        case 11: return OTHER;
        case 12: return ROW;
        case 13: return FIELD;
        case 14: return HEARTBEAT;
        case 15: return VGTID;
        case 16: return JOURNAL;
        case 17: return VERSION;
        case 18: return LASTPK;
        case 19: return SAVEPOINT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VEventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VEventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VEventType>() {
            public VEventType findValueByNumber(int number) {
              return VEventType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Binlogdata.getDescriptor().getEnumTypes().get(1);
    }

    private static final VEventType[] VALUES = values();

    public static VEventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VEventType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:binlogdata.VEventType)
  }

  /**
   * <pre>
   * MigrationType specifies the type of migration for the Journal.
   * </pre>
   *
   * Protobuf enum {@code binlogdata.MigrationType}
   */
  public enum MigrationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TABLES = 0;</code>
     */
    TABLES(0),
    /**
     * <code>SHARDS = 1;</code>
     */
    SHARDS(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TABLES = 0;</code>
     */
    public static final int TABLES_VALUE = 0;
    /**
     * <code>SHARDS = 1;</code>
     */
    public static final int SHARDS_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MigrationType valueOf(int value) {
      return forNumber(value);
    }

    public static MigrationType forNumber(int value) {
      switch (value) {
        case 0: return TABLES;
        case 1: return SHARDS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MigrationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MigrationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MigrationType>() {
            public MigrationType findValueByNumber(int number) {
              return MigrationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Binlogdata.getDescriptor().getEnumTypes().get(2);
    }

    private static final MigrationType[] VALUES = values();

    public static MigrationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MigrationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:binlogdata.MigrationType)
  }

  public interface CharsetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.Charset)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * &#64;&#64;session.character_set_client
     * </pre>
     *
     * <code>int32 client = 1;</code>
     */
    int getClient();

    /**
     * <pre>
     * &#64;&#64;session.collation_connection
     * </pre>
     *
     * <code>int32 conn = 2;</code>
     */
    int getConn();

    /**
     * <pre>
     * &#64;&#64;session.collation_server
     * </pre>
     *
     * <code>int32 server = 3;</code>
     */
    int getServer();
  }
  /**
   * <pre>
   * Charset is the per-statement charset info from a QUERY_EVENT binlog entry.
   * </pre>
   *
   * Protobuf type {@code binlogdata.Charset}
   */
  public  static final class Charset extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.Charset)
      CharsetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Charset.newBuilder() to construct.
    private Charset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Charset() {
      client_ = 0;
      conn_ = 0;
      server_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Charset(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              client_ = input.readInt32();
              break;
            }
            case 16: {

              conn_ = input.readInt32();
              break;
            }
            case 24: {

              server_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_Charset_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_Charset_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Charset.class, Builder.class);
    }

    public static final int CLIENT_FIELD_NUMBER = 1;
    private int client_;
    /**
     * <pre>
     * &#64;&#64;session.character_set_client
     * </pre>
     *
     * <code>int32 client = 1;</code>
     */
    public int getClient() {
      return client_;
    }

    public static final int CONN_FIELD_NUMBER = 2;
    private int conn_;
    /**
     * <pre>
     * &#64;&#64;session.collation_connection
     * </pre>
     *
     * <code>int32 conn = 2;</code>
     */
    public int getConn() {
      return conn_;
    }

    public static final int SERVER_FIELD_NUMBER = 3;
    private int server_;
    /**
     * <pre>
     * &#64;&#64;session.collation_server
     * </pre>
     *
     * <code>int32 server = 3;</code>
     */
    public int getServer() {
      return server_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (client_ != 0) {
        output.writeInt32(1, client_);
      }
      if (conn_ != 0) {
        output.writeInt32(2, conn_);
      }
      if (server_ != 0) {
        output.writeInt32(3, server_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (client_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, client_);
      }
      if (conn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, conn_);
      }
      if (server_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, server_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Charset)) {
        return super.equals(obj);
      }
      Charset other = (Charset) obj;

      boolean result = true;
      result = result && (getClient()
          == other.getClient());
      result = result && (getConn()
          == other.getConn());
      result = result && (getServer()
          == other.getServer());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CLIENT_FIELD_NUMBER;
      hash = (53 * hash) + getClient();
      hash = (37 * hash) + CONN_FIELD_NUMBER;
      hash = (53 * hash) + getConn();
      hash = (37 * hash) + SERVER_FIELD_NUMBER;
      hash = (53 * hash) + getServer();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Charset parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Charset parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Charset parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Charset parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Charset parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Charset parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Charset parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Charset parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Charset parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Charset parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Charset parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Charset parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Charset prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Charset is the per-statement charset info from a QUERY_EVENT binlog entry.
     * </pre>
     *
     * Protobuf type {@code binlogdata.Charset}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.Charset)
        CharsetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_Charset_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_Charset_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Charset.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.Charset.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        client_ = 0;

        conn_ = 0;

        server_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_Charset_descriptor;
      }

      public Charset getDefaultInstanceForType() {
        return Charset.getDefaultInstance();
      }

      public Charset build() {
        Charset result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Charset buildPartial() {
        Charset result = new Charset(this);
        result.client_ = client_;
        result.conn_ = conn_;
        result.server_ = server_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Charset) {
          return mergeFrom((Charset)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Charset other) {
        if (other == Charset.getDefaultInstance()) return this;
        if (other.getClient() != 0) {
          setClient(other.getClient());
        }
        if (other.getConn() != 0) {
          setConn(other.getConn());
        }
        if (other.getServer() != 0) {
          setServer(other.getServer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Charset parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Charset) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int client_ ;
      /**
       * <pre>
       * &#64;&#64;session.character_set_client
       * </pre>
       *
       * <code>int32 client = 1;</code>
       */
      public int getClient() {
        return client_;
      }
      /**
       * <pre>
       * &#64;&#64;session.character_set_client
       * </pre>
       *
       * <code>int32 client = 1;</code>
       */
      public Builder setClient(int value) {
        
        client_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;&#64;session.character_set_client
       * </pre>
       *
       * <code>int32 client = 1;</code>
       */
      public Builder clearClient() {
        
        client_ = 0;
        onChanged();
        return this;
      }

      private int conn_ ;
      /**
       * <pre>
       * &#64;&#64;session.collation_connection
       * </pre>
       *
       * <code>int32 conn = 2;</code>
       */
      public int getConn() {
        return conn_;
      }
      /**
       * <pre>
       * &#64;&#64;session.collation_connection
       * </pre>
       *
       * <code>int32 conn = 2;</code>
       */
      public Builder setConn(int value) {
        
        conn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;&#64;session.collation_connection
       * </pre>
       *
       * <code>int32 conn = 2;</code>
       */
      public Builder clearConn() {
        
        conn_ = 0;
        onChanged();
        return this;
      }

      private int server_ ;
      /**
       * <pre>
       * &#64;&#64;session.collation_server
       * </pre>
       *
       * <code>int32 server = 3;</code>
       */
      public int getServer() {
        return server_;
      }
      /**
       * <pre>
       * &#64;&#64;session.collation_server
       * </pre>
       *
       * <code>int32 server = 3;</code>
       */
      public Builder setServer(int value) {
        
        server_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;&#64;session.collation_server
       * </pre>
       *
       * <code>int32 server = 3;</code>
       */
      public Builder clearServer() {
        
        server_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.Charset)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.Charset)
    private static final Charset DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Charset();
    }

    public static Charset getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Charset>
        PARSER = new com.google.protobuf.AbstractParser<Charset>() {
      public Charset parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Charset(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Charset> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Charset> getParserForType() {
      return PARSER;
    }

    public Charset getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BinlogTransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.BinlogTransaction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    java.util.List<BinlogTransaction.Statement>
        getStatementsList();
    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    BinlogTransaction.Statement getStatements(int index);
    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    int getStatementsCount();
    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    java.util.List<? extends BinlogTransaction.StatementOrBuilder>
        getStatementsOrBuilderList();
    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    BinlogTransaction.StatementOrBuilder getStatementsOrBuilder(
        int index);

    /**
     * <pre>
     * The Event Token for this event.
     * </pre>
     *
     * <code>.query.EventToken event_token = 4;</code>
     */
    boolean hasEventToken();
    /**
     * <pre>
     * The Event Token for this event.
     * </pre>
     *
     * <code>.query.EventToken event_token = 4;</code>
     */
    io.vitess.proto.Query.EventToken getEventToken();
    /**
     * <pre>
     * The Event Token for this event.
     * </pre>
     *
     * <code>.query.EventToken event_token = 4;</code>
     */
    io.vitess.proto.Query.EventTokenOrBuilder getEventTokenOrBuilder();
  }
  /**
   * <pre>
   * BinlogTransaction describes a transaction inside the binlogs.
   * It is streamed by vttablet for filtered replication, used during resharding.
   * </pre>
   *
   * Protobuf type {@code binlogdata.BinlogTransaction}
   */
  public  static final class BinlogTransaction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.BinlogTransaction)
      BinlogTransactionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BinlogTransaction.newBuilder() to construct.
    private BinlogTransaction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BinlogTransaction() {
      statements_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BinlogTransaction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                statements_ = new java.util.ArrayList<Statement>();
                mutable_bitField0_ |= 0x00000001;
              }
              statements_.add(
                  input.readMessage(Statement.parser(), extensionRegistry));
              break;
            }
            case 34: {
              io.vitess.proto.Query.EventToken.Builder subBuilder = null;
              if (eventToken_ != null) {
                subBuilder = eventToken_.toBuilder();
              }
              eventToken_ = input.readMessage(io.vitess.proto.Query.EventToken.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(eventToken_);
                eventToken_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          statements_ = java.util.Collections.unmodifiableList(statements_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_BinlogTransaction_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_BinlogTransaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BinlogTransaction.class, Builder.class);
    }

    public interface StatementOrBuilder extends
        // @@protoc_insertion_point(interface_extends:binlogdata.BinlogTransaction.Statement)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * what type of statement is this?
       * </pre>
       *
       * <code>.binlogdata.BinlogTransaction.Statement.Category category = 1;</code>
       */
      int getCategoryValue();
      /**
       * <pre>
       * what type of statement is this?
       * </pre>
       *
       * <code>.binlogdata.BinlogTransaction.Statement.Category category = 1;</code>
       */
      Statement.Category getCategory();

      /**
       * <pre>
       * charset of this statement, if different from pre-negotiated default.
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 2;</code>
       */
      boolean hasCharset();
      /**
       * <pre>
       * charset of this statement, if different from pre-negotiated default.
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 2;</code>
       */
      Charset getCharset();
      /**
       * <pre>
       * charset of this statement, if different from pre-negotiated default.
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 2;</code>
       */
      CharsetOrBuilder getCharsetOrBuilder();

      /**
       * <pre>
       * the sql
       * </pre>
       *
       * <code>bytes sql = 3;</code>
       */
      com.google.protobuf.ByteString getSql();
    }
    /**
     * Protobuf type {@code binlogdata.BinlogTransaction.Statement}
     */
    public  static final class Statement extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:binlogdata.BinlogTransaction.Statement)
        StatementOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Statement.newBuilder() to construct.
      private Statement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Statement() {
        category_ = 0;
        sql_ = com.google.protobuf.ByteString.EMPTY;
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Statement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();

                category_ = rawValue;
                break;
              }
              case 18: {
                Charset.Builder subBuilder = null;
                if (charset_ != null) {
                  subBuilder = charset_.toBuilder();
                }
                charset_ = input.readMessage(Charset.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(charset_);
                  charset_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {

                sql_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_BinlogTransaction_Statement_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_BinlogTransaction_Statement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Statement.class, Builder.class);
      }

      /**
       * Protobuf enum {@code binlogdata.BinlogTransaction.Statement.Category}
       */
      public enum Category
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>BL_UNRECOGNIZED = 0;</code>
         */
        BL_UNRECOGNIZED(0),
        /**
         * <code>BL_BEGIN = 1;</code>
         */
        BL_BEGIN(1),
        /**
         * <code>BL_COMMIT = 2;</code>
         */
        BL_COMMIT(2),
        /**
         * <code>BL_ROLLBACK = 3;</code>
         */
        BL_ROLLBACK(3),
        /**
         * <pre>
         * BL_DML is deprecated.
         * </pre>
         *
         * <code>BL_DML_DEPRECATED = 4;</code>
         */
        BL_DML_DEPRECATED(4),
        /**
         * <code>BL_DDL = 5;</code>
         */
        BL_DDL(5),
        /**
         * <code>BL_SET = 6;</code>
         */
        BL_SET(6),
        /**
         * <code>BL_INSERT = 7;</code>
         */
        BL_INSERT(7),
        /**
         * <code>BL_UPDATE = 8;</code>
         */
        BL_UPDATE(8),
        /**
         * <code>BL_DELETE = 9;</code>
         */
        BL_DELETE(9),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>BL_UNRECOGNIZED = 0;</code>
         */
        public static final int BL_UNRECOGNIZED_VALUE = 0;
        /**
         * <code>BL_BEGIN = 1;</code>
         */
        public static final int BL_BEGIN_VALUE = 1;
        /**
         * <code>BL_COMMIT = 2;</code>
         */
        public static final int BL_COMMIT_VALUE = 2;
        /**
         * <code>BL_ROLLBACK = 3;</code>
         */
        public static final int BL_ROLLBACK_VALUE = 3;
        /**
         * <pre>
         * BL_DML is deprecated.
         * </pre>
         *
         * <code>BL_DML_DEPRECATED = 4;</code>
         */
        public static final int BL_DML_DEPRECATED_VALUE = 4;
        /**
         * <code>BL_DDL = 5;</code>
         */
        public static final int BL_DDL_VALUE = 5;
        /**
         * <code>BL_SET = 6;</code>
         */
        public static final int BL_SET_VALUE = 6;
        /**
         * <code>BL_INSERT = 7;</code>
         */
        public static final int BL_INSERT_VALUE = 7;
        /**
         * <code>BL_UPDATE = 8;</code>
         */
        public static final int BL_UPDATE_VALUE = 8;
        /**
         * <code>BL_DELETE = 9;</code>
         */
        public static final int BL_DELETE_VALUE = 9;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static Category valueOf(int value) {
          return forNumber(value);
        }

        public static Category forNumber(int value) {
          switch (value) {
            case 0: return BL_UNRECOGNIZED;
            case 1: return BL_BEGIN;
            case 2: return BL_COMMIT;
            case 3: return BL_ROLLBACK;
            case 4: return BL_DML_DEPRECATED;
            case 5: return BL_DDL;
            case 6: return BL_SET;
            case 7: return BL_INSERT;
            case 8: return BL_UPDATE;
            case 9: return BL_DELETE;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Category>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Category> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Category>() {
                public Category findValueByNumber(int number) {
                  return Category.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return Statement.getDescriptor().getEnumTypes().get(0);
        }

        private static final Category[] VALUES = values();

        public static Category valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Category(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:binlogdata.BinlogTransaction.Statement.Category)
      }

      public static final int CATEGORY_FIELD_NUMBER = 1;
      private int category_;
      /**
       * <pre>
       * what type of statement is this?
       * </pre>
       *
       * <code>.binlogdata.BinlogTransaction.Statement.Category category = 1;</code>
       */
      public int getCategoryValue() {
        return category_;
      }
      /**
       * <pre>
       * what type of statement is this?
       * </pre>
       *
       * <code>.binlogdata.BinlogTransaction.Statement.Category category = 1;</code>
       */
      public Category getCategory() {
        Category result = Category.valueOf(category_);
        return result == null ? Category.UNRECOGNIZED : result;
      }

      public static final int CHARSET_FIELD_NUMBER = 2;
      private Charset charset_;
      /**
       * <pre>
       * charset of this statement, if different from pre-negotiated default.
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 2;</code>
       */
      public boolean hasCharset() {
        return charset_ != null;
      }
      /**
       * <pre>
       * charset of this statement, if different from pre-negotiated default.
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 2;</code>
       */
      public Charset getCharset() {
        return charset_ == null ? Charset.getDefaultInstance() : charset_;
      }
      /**
       * <pre>
       * charset of this statement, if different from pre-negotiated default.
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 2;</code>
       */
      public CharsetOrBuilder getCharsetOrBuilder() {
        return getCharset();
      }

      public static final int SQL_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString sql_;
      /**
       * <pre>
       * the sql
       * </pre>
       *
       * <code>bytes sql = 3;</code>
       */
      public com.google.protobuf.ByteString getSql() {
        return sql_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (category_ != Category.BL_UNRECOGNIZED.getNumber()) {
          output.writeEnum(1, category_);
        }
        if (charset_ != null) {
          output.writeMessage(2, getCharset());
        }
        if (!sql_.isEmpty()) {
          output.writeBytes(3, sql_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (category_ != Category.BL_UNRECOGNIZED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, category_);
        }
        if (charset_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getCharset());
        }
        if (!sql_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, sql_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Statement)) {
          return super.equals(obj);
        }
        Statement other = (Statement) obj;

        boolean result = true;
        result = result && category_ == other.category_;
        result = result && (hasCharset() == other.hasCharset());
        if (hasCharset()) {
          result = result && getCharset()
              .equals(other.getCharset());
        }
        result = result && getSql()
            .equals(other.getSql());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + category_;
        if (hasCharset()) {
          hash = (37 * hash) + CHARSET_FIELD_NUMBER;
          hash = (53 * hash) + getCharset().hashCode();
        }
        hash = (37 * hash) + SQL_FIELD_NUMBER;
        hash = (53 * hash) + getSql().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Statement parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Statement parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Statement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Statement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Statement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Statement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Statement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Statement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Statement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Statement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Statement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Statement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Statement prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code binlogdata.BinlogTransaction.Statement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:binlogdata.BinlogTransaction.Statement)
          StatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Binlogdata.internal_static_binlogdata_BinlogTransaction_Statement_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Binlogdata.internal_static_binlogdata_BinlogTransaction_Statement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Statement.class, Builder.class);
        }

        // Construct using binlogdata.Binlogdata.BinlogTransaction.Statement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          category_ = 0;

          if (charsetBuilder_ == null) {
            charset_ = null;
          } else {
            charset_ = null;
            charsetBuilder_ = null;
          }
          sql_ = com.google.protobuf.ByteString.EMPTY;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Binlogdata.internal_static_binlogdata_BinlogTransaction_Statement_descriptor;
        }

        public Statement getDefaultInstanceForType() {
          return Statement.getDefaultInstance();
        }

        public Statement build() {
          Statement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public Statement buildPartial() {
          Statement result = new Statement(this);
          result.category_ = category_;
          if (charsetBuilder_ == null) {
            result.charset_ = charset_;
          } else {
            result.charset_ = charsetBuilder_.build();
          }
          result.sql_ = sql_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Statement) {
            return mergeFrom((Statement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Statement other) {
          if (other == Statement.getDefaultInstance()) return this;
          if (other.category_ != 0) {
            setCategoryValue(other.getCategoryValue());
          }
          if (other.hasCharset()) {
            mergeCharset(other.getCharset());
          }
          if (other.getSql() != com.google.protobuf.ByteString.EMPTY) {
            setSql(other.getSql());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Statement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Statement) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int category_ = 0;
        /**
         * <pre>
         * what type of statement is this?
         * </pre>
         *
         * <code>.binlogdata.BinlogTransaction.Statement.Category category = 1;</code>
         */
        public int getCategoryValue() {
          return category_;
        }
        /**
         * <pre>
         * what type of statement is this?
         * </pre>
         *
         * <code>.binlogdata.BinlogTransaction.Statement.Category category = 1;</code>
         */
        public Builder setCategoryValue(int value) {
          category_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * what type of statement is this?
         * </pre>
         *
         * <code>.binlogdata.BinlogTransaction.Statement.Category category = 1;</code>
         */
        public Category getCategory() {
          Category result = Category.valueOf(category_);
          return result == null ? Category.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * what type of statement is this?
         * </pre>
         *
         * <code>.binlogdata.BinlogTransaction.Statement.Category category = 1;</code>
         */
        public Builder setCategory(Category value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          category_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * what type of statement is this?
         * </pre>
         *
         * <code>.binlogdata.BinlogTransaction.Statement.Category category = 1;</code>
         */
        public Builder clearCategory() {
          
          category_ = 0;
          onChanged();
          return this;
        }

        private Charset charset_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            Charset, Charset.Builder, CharsetOrBuilder> charsetBuilder_;
        /**
         * <pre>
         * charset of this statement, if different from pre-negotiated default.
         * </pre>
         *
         * <code>.binlogdata.Charset charset = 2;</code>
         */
        public boolean hasCharset() {
          return charsetBuilder_ != null || charset_ != null;
        }
        /**
         * <pre>
         * charset of this statement, if different from pre-negotiated default.
         * </pre>
         *
         * <code>.binlogdata.Charset charset = 2;</code>
         */
        public Charset getCharset() {
          if (charsetBuilder_ == null) {
            return charset_ == null ? Charset.getDefaultInstance() : charset_;
          } else {
            return charsetBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * charset of this statement, if different from pre-negotiated default.
         * </pre>
         *
         * <code>.binlogdata.Charset charset = 2;</code>
         */
        public Builder setCharset(Charset value) {
          if (charsetBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            charset_ = value;
            onChanged();
          } else {
            charsetBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * charset of this statement, if different from pre-negotiated default.
         * </pre>
         *
         * <code>.binlogdata.Charset charset = 2;</code>
         */
        public Builder setCharset(
            Charset.Builder builderForValue) {
          if (charsetBuilder_ == null) {
            charset_ = builderForValue.build();
            onChanged();
          } else {
            charsetBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * charset of this statement, if different from pre-negotiated default.
         * </pre>
         *
         * <code>.binlogdata.Charset charset = 2;</code>
         */
        public Builder mergeCharset(Charset value) {
          if (charsetBuilder_ == null) {
            if (charset_ != null) {
              charset_ =
                Charset.newBuilder(charset_).mergeFrom(value).buildPartial();
            } else {
              charset_ = value;
            }
            onChanged();
          } else {
            charsetBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * charset of this statement, if different from pre-negotiated default.
         * </pre>
         *
         * <code>.binlogdata.Charset charset = 2;</code>
         */
        public Builder clearCharset() {
          if (charsetBuilder_ == null) {
            charset_ = null;
            onChanged();
          } else {
            charset_ = null;
            charsetBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * charset of this statement, if different from pre-negotiated default.
         * </pre>
         *
         * <code>.binlogdata.Charset charset = 2;</code>
         */
        public Charset.Builder getCharsetBuilder() {
          
          onChanged();
          return getCharsetFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * charset of this statement, if different from pre-negotiated default.
         * </pre>
         *
         * <code>.binlogdata.Charset charset = 2;</code>
         */
        public CharsetOrBuilder getCharsetOrBuilder() {
          if (charsetBuilder_ != null) {
            return charsetBuilder_.getMessageOrBuilder();
          } else {
            return charset_ == null ?
                Charset.getDefaultInstance() : charset_;
          }
        }
        /**
         * <pre>
         * charset of this statement, if different from pre-negotiated default.
         * </pre>
         *
         * <code>.binlogdata.Charset charset = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            Charset, Charset.Builder, CharsetOrBuilder>
            getCharsetFieldBuilder() {
          if (charsetBuilder_ == null) {
            charsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                Charset, Charset.Builder, CharsetOrBuilder>(
                    getCharset(),
                    getParentForChildren(),
                    isClean());
            charset_ = null;
          }
          return charsetBuilder_;
        }

        private com.google.protobuf.ByteString sql_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * the sql
         * </pre>
         *
         * <code>bytes sql = 3;</code>
         */
        public com.google.protobuf.ByteString getSql() {
          return sql_;
        }
        /**
         * <pre>
         * the sql
         * </pre>
         *
         * <code>bytes sql = 3;</code>
         */
        public Builder setSql(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          sql_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * the sql
         * </pre>
         *
         * <code>bytes sql = 3;</code>
         */
        public Builder clearSql() {
          
          sql_ = getDefaultInstance().getSql();
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:binlogdata.BinlogTransaction.Statement)
      }

      // @@protoc_insertion_point(class_scope:binlogdata.BinlogTransaction.Statement)
      private static final Statement DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Statement();
      }

      public static Statement getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Statement>
          PARSER = new com.google.protobuf.AbstractParser<Statement>() {
        public Statement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Statement(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Statement> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<Statement> getParserForType() {
        return PARSER;
      }

      public Statement getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int STATEMENTS_FIELD_NUMBER = 1;
    private java.util.List<Statement> statements_;
    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    public java.util.List<Statement> getStatementsList() {
      return statements_;
    }
    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    public java.util.List<? extends StatementOrBuilder>
        getStatementsOrBuilderList() {
      return statements_;
    }
    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    public int getStatementsCount() {
      return statements_.size();
    }
    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    public Statement getStatements(int index) {
      return statements_.get(index);
    }
    /**
     * <pre>
     * the statements in this transaction
     * </pre>
     *
     * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
     */
    public StatementOrBuilder getStatementsOrBuilder(
        int index) {
      return statements_.get(index);
    }

    public static final int EVENT_TOKEN_FIELD_NUMBER = 4;
    private io.vitess.proto.Query.EventToken eventToken_;
    /**
     * <pre>
     * The Event Token for this event.
     * </pre>
     *
     * <code>.query.EventToken event_token = 4;</code>
     */
    public boolean hasEventToken() {
      return eventToken_ != null;
    }
    /**
     * <pre>
     * The Event Token for this event.
     * </pre>
     *
     * <code>.query.EventToken event_token = 4;</code>
     */
    public io.vitess.proto.Query.EventToken getEventToken() {
      return eventToken_ == null ? io.vitess.proto.Query.EventToken.getDefaultInstance() : eventToken_;
    }
    /**
     * <pre>
     * The Event Token for this event.
     * </pre>
     *
     * <code>.query.EventToken event_token = 4;</code>
     */
    public io.vitess.proto.Query.EventTokenOrBuilder getEventTokenOrBuilder() {
      return getEventToken();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < statements_.size(); i++) {
        output.writeMessage(1, statements_.get(i));
      }
      if (eventToken_ != null) {
        output.writeMessage(4, getEventToken());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < statements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, statements_.get(i));
      }
      if (eventToken_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getEventToken());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BinlogTransaction)) {
        return super.equals(obj);
      }
      BinlogTransaction other = (BinlogTransaction) obj;

      boolean result = true;
      result = result && getStatementsList()
          .equals(other.getStatementsList());
      result = result && (hasEventToken() == other.hasEventToken());
      if (hasEventToken()) {
        result = result && getEventToken()
            .equals(other.getEventToken());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getStatementsCount() > 0) {
        hash = (37 * hash) + STATEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getStatementsList().hashCode();
      }
      if (hasEventToken()) {
        hash = (37 * hash) + EVENT_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getEventToken().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BinlogTransaction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BinlogTransaction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BinlogTransaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BinlogTransaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BinlogTransaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BinlogTransaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BinlogTransaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BinlogTransaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BinlogTransaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BinlogTransaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BinlogTransaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BinlogTransaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BinlogTransaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BinlogTransaction describes a transaction inside the binlogs.
     * It is streamed by vttablet for filtered replication, used during resharding.
     * </pre>
     *
     * Protobuf type {@code binlogdata.BinlogTransaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.BinlogTransaction)
        BinlogTransactionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_BinlogTransaction_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_BinlogTransaction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BinlogTransaction.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.BinlogTransaction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStatementsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (statementsBuilder_ == null) {
          statements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          statementsBuilder_.clear();
        }
        if (eventTokenBuilder_ == null) {
          eventToken_ = null;
        } else {
          eventToken_ = null;
          eventTokenBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_BinlogTransaction_descriptor;
      }

      public BinlogTransaction getDefaultInstanceForType() {
        return BinlogTransaction.getDefaultInstance();
      }

      public BinlogTransaction build() {
        BinlogTransaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public BinlogTransaction buildPartial() {
        BinlogTransaction result = new BinlogTransaction(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (statementsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            statements_ = java.util.Collections.unmodifiableList(statements_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.statements_ = statements_;
        } else {
          result.statements_ = statementsBuilder_.build();
        }
        if (eventTokenBuilder_ == null) {
          result.eventToken_ = eventToken_;
        } else {
          result.eventToken_ = eventTokenBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BinlogTransaction) {
          return mergeFrom((BinlogTransaction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BinlogTransaction other) {
        if (other == BinlogTransaction.getDefaultInstance()) return this;
        if (statementsBuilder_ == null) {
          if (!other.statements_.isEmpty()) {
            if (statements_.isEmpty()) {
              statements_ = other.statements_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureStatementsIsMutable();
              statements_.addAll(other.statements_);
            }
            onChanged();
          }
        } else {
          if (!other.statements_.isEmpty()) {
            if (statementsBuilder_.isEmpty()) {
              statementsBuilder_.dispose();
              statementsBuilder_ = null;
              statements_ = other.statements_;
              bitField0_ = (bitField0_ & ~0x00000001);
              statementsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStatementsFieldBuilder() : null;
            } else {
              statementsBuilder_.addAllMessages(other.statements_);
            }
          }
        }
        if (other.hasEventToken()) {
          mergeEventToken(other.getEventToken());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BinlogTransaction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BinlogTransaction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Statement> statements_ =
        java.util.Collections.emptyList();
      private void ensureStatementsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          statements_ = new java.util.ArrayList<Statement>(statements_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Statement, Statement.Builder, StatementOrBuilder> statementsBuilder_;

      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public java.util.List<Statement> getStatementsList() {
        if (statementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(statements_);
        } else {
          return statementsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public int getStatementsCount() {
        if (statementsBuilder_ == null) {
          return statements_.size();
        } else {
          return statementsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Statement getStatements(int index) {
        if (statementsBuilder_ == null) {
          return statements_.get(index);
        } else {
          return statementsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Builder setStatements(
          int index, Statement value) {
        if (statementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatementsIsMutable();
          statements_.set(index, value);
          onChanged();
        } else {
          statementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Builder setStatements(
          int index, Statement.Builder builderForValue) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.set(index, builderForValue.build());
          onChanged();
        } else {
          statementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Builder addStatements(Statement value) {
        if (statementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatementsIsMutable();
          statements_.add(value);
          onChanged();
        } else {
          statementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Builder addStatements(
          int index, Statement value) {
        if (statementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatementsIsMutable();
          statements_.add(index, value);
          onChanged();
        } else {
          statementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Builder addStatements(
          Statement.Builder builderForValue) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.add(builderForValue.build());
          onChanged();
        } else {
          statementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Builder addStatements(
          int index, Statement.Builder builderForValue) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.add(index, builderForValue.build());
          onChanged();
        } else {
          statementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Builder addAllStatements(
          Iterable<? extends Statement> values) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, statements_);
          onChanged();
        } else {
          statementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Builder clearStatements() {
        if (statementsBuilder_ == null) {
          statements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          statementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Builder removeStatements(int index) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.remove(index);
          onChanged();
        } else {
          statementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Statement.Builder getStatementsBuilder(
          int index) {
        return getStatementsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public StatementOrBuilder getStatementsOrBuilder(
          int index) {
        if (statementsBuilder_ == null) {
          return statements_.get(index);  } else {
          return statementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public java.util.List<? extends StatementOrBuilder>
           getStatementsOrBuilderList() {
        if (statementsBuilder_ != null) {
          return statementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(statements_);
        }
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Statement.Builder addStatementsBuilder() {
        return getStatementsFieldBuilder().addBuilder(
            Statement.getDefaultInstance());
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public Statement.Builder addStatementsBuilder(
          int index) {
        return getStatementsFieldBuilder().addBuilder(
            index, Statement.getDefaultInstance());
      }
      /**
       * <pre>
       * the statements in this transaction
       * </pre>
       *
       * <code>repeated .binlogdata.BinlogTransaction.Statement statements = 1;</code>
       */
      public java.util.List<Statement.Builder>
           getStatementsBuilderList() {
        return getStatementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Statement, Statement.Builder, StatementOrBuilder>
          getStatementsFieldBuilder() {
        if (statementsBuilder_ == null) {
          statementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Statement, Statement.Builder, StatementOrBuilder>(
                  statements_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          statements_ = null;
        }
        return statementsBuilder_;
      }

      private io.vitess.proto.Query.EventToken eventToken_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.EventToken, io.vitess.proto.Query.EventToken.Builder, io.vitess.proto.Query.EventTokenOrBuilder> eventTokenBuilder_;
      /**
       * <pre>
       * The Event Token for this event.
       * </pre>
       *
       * <code>.query.EventToken event_token = 4;</code>
       */
      public boolean hasEventToken() {
        return eventTokenBuilder_ != null || eventToken_ != null;
      }
      /**
       * <pre>
       * The Event Token for this event.
       * </pre>
       *
       * <code>.query.EventToken event_token = 4;</code>
       */
      public io.vitess.proto.Query.EventToken getEventToken() {
        if (eventTokenBuilder_ == null) {
          return eventToken_ == null ? io.vitess.proto.Query.EventToken.getDefaultInstance() : eventToken_;
        } else {
          return eventTokenBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The Event Token for this event.
       * </pre>
       *
       * <code>.query.EventToken event_token = 4;</code>
       */
      public Builder setEventToken(io.vitess.proto.Query.EventToken value) {
        if (eventTokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventToken_ = value;
          onChanged();
        } else {
          eventTokenBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The Event Token for this event.
       * </pre>
       *
       * <code>.query.EventToken event_token = 4;</code>
       */
      public Builder setEventToken(
          io.vitess.proto.Query.EventToken.Builder builderForValue) {
        if (eventTokenBuilder_ == null) {
          eventToken_ = builderForValue.build();
          onChanged();
        } else {
          eventTokenBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The Event Token for this event.
       * </pre>
       *
       * <code>.query.EventToken event_token = 4;</code>
       */
      public Builder mergeEventToken(io.vitess.proto.Query.EventToken value) {
        if (eventTokenBuilder_ == null) {
          if (eventToken_ != null) {
            eventToken_ =
              io.vitess.proto.Query.EventToken.newBuilder(eventToken_).mergeFrom(value).buildPartial();
          } else {
            eventToken_ = value;
          }
          onChanged();
        } else {
          eventTokenBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The Event Token for this event.
       * </pre>
       *
       * <code>.query.EventToken event_token = 4;</code>
       */
      public Builder clearEventToken() {
        if (eventTokenBuilder_ == null) {
          eventToken_ = null;
          onChanged();
        } else {
          eventToken_ = null;
          eventTokenBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The Event Token for this event.
       * </pre>
       *
       * <code>.query.EventToken event_token = 4;</code>
       */
      public io.vitess.proto.Query.EventToken.Builder getEventTokenBuilder() {
        
        onChanged();
        return getEventTokenFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The Event Token for this event.
       * </pre>
       *
       * <code>.query.EventToken event_token = 4;</code>
       */
      public io.vitess.proto.Query.EventTokenOrBuilder getEventTokenOrBuilder() {
        if (eventTokenBuilder_ != null) {
          return eventTokenBuilder_.getMessageOrBuilder();
        } else {
          return eventToken_ == null ?
              io.vitess.proto.Query.EventToken.getDefaultInstance() : eventToken_;
        }
      }
      /**
       * <pre>
       * The Event Token for this event.
       * </pre>
       *
       * <code>.query.EventToken event_token = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.EventToken, io.vitess.proto.Query.EventToken.Builder, io.vitess.proto.Query.EventTokenOrBuilder> 
          getEventTokenFieldBuilder() {
        if (eventTokenBuilder_ == null) {
          eventTokenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.EventToken, io.vitess.proto.Query.EventToken.Builder, io.vitess.proto.Query.EventTokenOrBuilder>(
                  getEventToken(),
                  getParentForChildren(),
                  isClean());
          eventToken_ = null;
        }
        return eventTokenBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.BinlogTransaction)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.BinlogTransaction)
    private static final BinlogTransaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinlogTransaction();
    }

    public static BinlogTransaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BinlogTransaction>
        PARSER = new com.google.protobuf.AbstractParser<BinlogTransaction>() {
      public BinlogTransaction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BinlogTransaction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BinlogTransaction> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BinlogTransaction> getParserForType() {
      return PARSER;
    }

    public BinlogTransaction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamKeyRangeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.StreamKeyRangeRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * where to start
     * </pre>
     *
     * <code>string position = 1;</code>
     */
    String getPosition();
    /**
     * <pre>
     * where to start
     * </pre>
     *
     * <code>string position = 1;</code>
     */
    com.google.protobuf.ByteString
        getPositionBytes();

    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 2;</code>
     */
    boolean hasKeyRange();
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 2;</code>
     */
    io.vitess.proto.Topodata.KeyRange getKeyRange();
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 2;</code>
     */
    io.vitess.proto.Topodata.KeyRangeOrBuilder getKeyRangeOrBuilder();

    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    boolean hasCharset();
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    Charset getCharset();
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    CharsetOrBuilder getCharsetOrBuilder();
  }
  /**
   * <pre>
   * StreamKeyRangeRequest is the payload to StreamKeyRange
   * </pre>
   *
   * Protobuf type {@code binlogdata.StreamKeyRangeRequest}
   */
  public  static final class StreamKeyRangeRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.StreamKeyRangeRequest)
      StreamKeyRangeRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StreamKeyRangeRequest.newBuilder() to construct.
    private StreamKeyRangeRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamKeyRangeRequest() {
      position_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StreamKeyRangeRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              position_ = s;
              break;
            }
            case 18: {
              io.vitess.proto.Topodata.KeyRange.Builder subBuilder = null;
              if (keyRange_ != null) {
                subBuilder = keyRange_.toBuilder();
              }
              keyRange_ = input.readMessage(io.vitess.proto.Topodata.KeyRange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keyRange_);
                keyRange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              Charset.Builder subBuilder = null;
              if (charset_ != null) {
                subBuilder = charset_.toBuilder();
              }
              charset_ = input.readMessage(Charset.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(charset_);
                charset_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_StreamKeyRangeRequest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_StreamKeyRangeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StreamKeyRangeRequest.class, Builder.class);
    }

    public static final int POSITION_FIELD_NUMBER = 1;
    private volatile Object position_;
    /**
     * <pre>
     * where to start
     * </pre>
     *
     * <code>string position = 1;</code>
     */
    public String getPosition() {
      Object ref = position_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        position_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * where to start
     * </pre>
     *
     * <code>string position = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPositionBytes() {
      Object ref = position_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        position_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_RANGE_FIELD_NUMBER = 2;
    private io.vitess.proto.Topodata.KeyRange keyRange_;
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 2;</code>
     */
    public boolean hasKeyRange() {
      return keyRange_ != null;
    }
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 2;</code>
     */
    public io.vitess.proto.Topodata.KeyRange getKeyRange() {
      return keyRange_ == null ? io.vitess.proto.Topodata.KeyRange.getDefaultInstance() : keyRange_;
    }
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 2;</code>
     */
    public io.vitess.proto.Topodata.KeyRangeOrBuilder getKeyRangeOrBuilder() {
      return getKeyRange();
    }

    public static final int CHARSET_FIELD_NUMBER = 3;
    private Charset charset_;
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    public boolean hasCharset() {
      return charset_ != null;
    }
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    public Charset getCharset() {
      return charset_ == null ? Charset.getDefaultInstance() : charset_;
    }
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    public CharsetOrBuilder getCharsetOrBuilder() {
      return getCharset();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, position_);
      }
      if (keyRange_ != null) {
        output.writeMessage(2, getKeyRange());
      }
      if (charset_ != null) {
        output.writeMessage(3, getCharset());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, position_);
      }
      if (keyRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getKeyRange());
      }
      if (charset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCharset());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof StreamKeyRangeRequest)) {
        return super.equals(obj);
      }
      StreamKeyRangeRequest other = (StreamKeyRangeRequest) obj;

      boolean result = true;
      result = result && getPosition()
          .equals(other.getPosition());
      result = result && (hasKeyRange() == other.hasKeyRange());
      if (hasKeyRange()) {
        result = result && getKeyRange()
            .equals(other.getKeyRange());
      }
      result = result && (hasCharset() == other.hasCharset());
      if (hasCharset()) {
        result = result && getCharset()
            .equals(other.getCharset());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition().hashCode();
      if (hasKeyRange()) {
        hash = (37 * hash) + KEY_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getKeyRange().hashCode();
      }
      if (hasCharset()) {
        hash = (37 * hash) + CHARSET_FIELD_NUMBER;
        hash = (53 * hash) + getCharset().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static StreamKeyRangeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamKeyRangeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamKeyRangeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamKeyRangeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamKeyRangeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamKeyRangeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamKeyRangeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StreamKeyRangeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static StreamKeyRangeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static StreamKeyRangeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static StreamKeyRangeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StreamKeyRangeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(StreamKeyRangeRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * StreamKeyRangeRequest is the payload to StreamKeyRange
     * </pre>
     *
     * Protobuf type {@code binlogdata.StreamKeyRangeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.StreamKeyRangeRequest)
        StreamKeyRangeRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_StreamKeyRangeRequest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_StreamKeyRangeRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StreamKeyRangeRequest.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.StreamKeyRangeRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        position_ = "";

        if (keyRangeBuilder_ == null) {
          keyRange_ = null;
        } else {
          keyRange_ = null;
          keyRangeBuilder_ = null;
        }
        if (charsetBuilder_ == null) {
          charset_ = null;
        } else {
          charset_ = null;
          charsetBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_StreamKeyRangeRequest_descriptor;
      }

      public StreamKeyRangeRequest getDefaultInstanceForType() {
        return StreamKeyRangeRequest.getDefaultInstance();
      }

      public StreamKeyRangeRequest build() {
        StreamKeyRangeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StreamKeyRangeRequest buildPartial() {
        StreamKeyRangeRequest result = new StreamKeyRangeRequest(this);
        result.position_ = position_;
        if (keyRangeBuilder_ == null) {
          result.keyRange_ = keyRange_;
        } else {
          result.keyRange_ = keyRangeBuilder_.build();
        }
        if (charsetBuilder_ == null) {
          result.charset_ = charset_;
        } else {
          result.charset_ = charsetBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StreamKeyRangeRequest) {
          return mergeFrom((StreamKeyRangeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StreamKeyRangeRequest other) {
        if (other == StreamKeyRangeRequest.getDefaultInstance()) return this;
        if (!other.getPosition().isEmpty()) {
          position_ = other.position_;
          onChanged();
        }
        if (other.hasKeyRange()) {
          mergeKeyRange(other.getKeyRange());
        }
        if (other.hasCharset()) {
          mergeCharset(other.getCharset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StreamKeyRangeRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StreamKeyRangeRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object position_ = "";
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public String getPosition() {
        Object ref = position_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          position_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPositionBytes() {
        Object ref = position_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          position_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public Builder setPosition(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public Builder clearPosition() {
        
        position_ = getDefaultInstance().getPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public Builder setPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        position_ = value;
        onChanged();
        return this;
      }

      private io.vitess.proto.Topodata.KeyRange keyRange_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Topodata.KeyRange, io.vitess.proto.Topodata.KeyRange.Builder, io.vitess.proto.Topodata.KeyRangeOrBuilder> keyRangeBuilder_;
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 2;</code>
       */
      public boolean hasKeyRange() {
        return keyRangeBuilder_ != null || keyRange_ != null;
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 2;</code>
       */
      public io.vitess.proto.Topodata.KeyRange getKeyRange() {
        if (keyRangeBuilder_ == null) {
          return keyRange_ == null ? io.vitess.proto.Topodata.KeyRange.getDefaultInstance() : keyRange_;
        } else {
          return keyRangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 2;</code>
       */
      public Builder setKeyRange(io.vitess.proto.Topodata.KeyRange value) {
        if (keyRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyRange_ = value;
          onChanged();
        } else {
          keyRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 2;</code>
       */
      public Builder setKeyRange(
          io.vitess.proto.Topodata.KeyRange.Builder builderForValue) {
        if (keyRangeBuilder_ == null) {
          keyRange_ = builderForValue.build();
          onChanged();
        } else {
          keyRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 2;</code>
       */
      public Builder mergeKeyRange(io.vitess.proto.Topodata.KeyRange value) {
        if (keyRangeBuilder_ == null) {
          if (keyRange_ != null) {
            keyRange_ =
              io.vitess.proto.Topodata.KeyRange.newBuilder(keyRange_).mergeFrom(value).buildPartial();
          } else {
            keyRange_ = value;
          }
          onChanged();
        } else {
          keyRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 2;</code>
       */
      public Builder clearKeyRange() {
        if (keyRangeBuilder_ == null) {
          keyRange_ = null;
          onChanged();
        } else {
          keyRange_ = null;
          keyRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 2;</code>
       */
      public io.vitess.proto.Topodata.KeyRange.Builder getKeyRangeBuilder() {
        
        onChanged();
        return getKeyRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 2;</code>
       */
      public io.vitess.proto.Topodata.KeyRangeOrBuilder getKeyRangeOrBuilder() {
        if (keyRangeBuilder_ != null) {
          return keyRangeBuilder_.getMessageOrBuilder();
        } else {
          return keyRange_ == null ?
              io.vitess.proto.Topodata.KeyRange.getDefaultInstance() : keyRange_;
        }
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Topodata.KeyRange, io.vitess.proto.Topodata.KeyRange.Builder, io.vitess.proto.Topodata.KeyRangeOrBuilder> 
          getKeyRangeFieldBuilder() {
        if (keyRangeBuilder_ == null) {
          keyRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Topodata.KeyRange, io.vitess.proto.Topodata.KeyRange.Builder, io.vitess.proto.Topodata.KeyRangeOrBuilder>(
                  getKeyRange(),
                  getParentForChildren(),
                  isClean());
          keyRange_ = null;
        }
        return keyRangeBuilder_;
      }

      private Charset charset_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          Charset, Charset.Builder, CharsetOrBuilder> charsetBuilder_;
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public boolean hasCharset() {
        return charsetBuilder_ != null || charset_ != null;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Charset getCharset() {
        if (charsetBuilder_ == null) {
          return charset_ == null ? Charset.getDefaultInstance() : charset_;
        } else {
          return charsetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Builder setCharset(Charset value) {
        if (charsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          charset_ = value;
          onChanged();
        } else {
          charsetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Builder setCharset(
          Charset.Builder builderForValue) {
        if (charsetBuilder_ == null) {
          charset_ = builderForValue.build();
          onChanged();
        } else {
          charsetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Builder mergeCharset(Charset value) {
        if (charsetBuilder_ == null) {
          if (charset_ != null) {
            charset_ =
              Charset.newBuilder(charset_).mergeFrom(value).buildPartial();
          } else {
            charset_ = value;
          }
          onChanged();
        } else {
          charsetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Builder clearCharset() {
        if (charsetBuilder_ == null) {
          charset_ = null;
          onChanged();
        } else {
          charset_ = null;
          charsetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Charset.Builder getCharsetBuilder() {
        
        onChanged();
        return getCharsetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public CharsetOrBuilder getCharsetOrBuilder() {
        if (charsetBuilder_ != null) {
          return charsetBuilder_.getMessageOrBuilder();
        } else {
          return charset_ == null ?
              Charset.getDefaultInstance() : charset_;
        }
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Charset, Charset.Builder, CharsetOrBuilder>
          getCharsetFieldBuilder() {
        if (charsetBuilder_ == null) {
          charsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Charset, Charset.Builder, CharsetOrBuilder>(
                  getCharset(),
                  getParentForChildren(),
                  isClean());
          charset_ = null;
        }
        return charsetBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.StreamKeyRangeRequest)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.StreamKeyRangeRequest)
    private static final StreamKeyRangeRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamKeyRangeRequest();
    }

    public static StreamKeyRangeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StreamKeyRangeRequest>
        PARSER = new com.google.protobuf.AbstractParser<StreamKeyRangeRequest>() {
      public StreamKeyRangeRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StreamKeyRangeRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StreamKeyRangeRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StreamKeyRangeRequest> getParserForType() {
      return PARSER;
    }

    public StreamKeyRangeRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamKeyRangeResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.StreamKeyRangeResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    boolean hasBinlogTransaction();
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    BinlogTransaction getBinlogTransaction();
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    BinlogTransactionOrBuilder getBinlogTransactionOrBuilder();
  }
  /**
   * <pre>
   * StreamKeyRangeResponse is the response from StreamKeyRange
   * </pre>
   *
   * Protobuf type {@code binlogdata.StreamKeyRangeResponse}
   */
  public  static final class StreamKeyRangeResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.StreamKeyRangeResponse)
      StreamKeyRangeResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StreamKeyRangeResponse.newBuilder() to construct.
    private StreamKeyRangeResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamKeyRangeResponse() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StreamKeyRangeResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              BinlogTransaction.Builder subBuilder = null;
              if (binlogTransaction_ != null) {
                subBuilder = binlogTransaction_.toBuilder();
              }
              binlogTransaction_ = input.readMessage(BinlogTransaction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(binlogTransaction_);
                binlogTransaction_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_StreamKeyRangeResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_StreamKeyRangeResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StreamKeyRangeResponse.class, Builder.class);
    }

    public static final int BINLOG_TRANSACTION_FIELD_NUMBER = 1;
    private BinlogTransaction binlogTransaction_;
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    public boolean hasBinlogTransaction() {
      return binlogTransaction_ != null;
    }
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    public BinlogTransaction getBinlogTransaction() {
      return binlogTransaction_ == null ? BinlogTransaction.getDefaultInstance() : binlogTransaction_;
    }
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    public BinlogTransactionOrBuilder getBinlogTransactionOrBuilder() {
      return getBinlogTransaction();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (binlogTransaction_ != null) {
        output.writeMessage(1, getBinlogTransaction());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (binlogTransaction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBinlogTransaction());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof StreamKeyRangeResponse)) {
        return super.equals(obj);
      }
      StreamKeyRangeResponse other = (StreamKeyRangeResponse) obj;

      boolean result = true;
      result = result && (hasBinlogTransaction() == other.hasBinlogTransaction());
      if (hasBinlogTransaction()) {
        result = result && getBinlogTransaction()
            .equals(other.getBinlogTransaction());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBinlogTransaction()) {
        hash = (37 * hash) + BINLOG_TRANSACTION_FIELD_NUMBER;
        hash = (53 * hash) + getBinlogTransaction().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static StreamKeyRangeResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamKeyRangeResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamKeyRangeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamKeyRangeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamKeyRangeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamKeyRangeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamKeyRangeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StreamKeyRangeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static StreamKeyRangeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static StreamKeyRangeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static StreamKeyRangeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StreamKeyRangeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(StreamKeyRangeResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * StreamKeyRangeResponse is the response from StreamKeyRange
     * </pre>
     *
     * Protobuf type {@code binlogdata.StreamKeyRangeResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.StreamKeyRangeResponse)
        StreamKeyRangeResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_StreamKeyRangeResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_StreamKeyRangeResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StreamKeyRangeResponse.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.StreamKeyRangeResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (binlogTransactionBuilder_ == null) {
          binlogTransaction_ = null;
        } else {
          binlogTransaction_ = null;
          binlogTransactionBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_StreamKeyRangeResponse_descriptor;
      }

      public StreamKeyRangeResponse getDefaultInstanceForType() {
        return StreamKeyRangeResponse.getDefaultInstance();
      }

      public StreamKeyRangeResponse build() {
        StreamKeyRangeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StreamKeyRangeResponse buildPartial() {
        StreamKeyRangeResponse result = new StreamKeyRangeResponse(this);
        if (binlogTransactionBuilder_ == null) {
          result.binlogTransaction_ = binlogTransaction_;
        } else {
          result.binlogTransaction_ = binlogTransactionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StreamKeyRangeResponse) {
          return mergeFrom((StreamKeyRangeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StreamKeyRangeResponse other) {
        if (other == StreamKeyRangeResponse.getDefaultInstance()) return this;
        if (other.hasBinlogTransaction()) {
          mergeBinlogTransaction(other.getBinlogTransaction());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StreamKeyRangeResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StreamKeyRangeResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private BinlogTransaction binlogTransaction_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          BinlogTransaction, BinlogTransaction.Builder, BinlogTransactionOrBuilder> binlogTransactionBuilder_;
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public boolean hasBinlogTransaction() {
        return binlogTransactionBuilder_ != null || binlogTransaction_ != null;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public BinlogTransaction getBinlogTransaction() {
        if (binlogTransactionBuilder_ == null) {
          return binlogTransaction_ == null ? BinlogTransaction.getDefaultInstance() : binlogTransaction_;
        } else {
          return binlogTransactionBuilder_.getMessage();
        }
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public Builder setBinlogTransaction(BinlogTransaction value) {
        if (binlogTransactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          binlogTransaction_ = value;
          onChanged();
        } else {
          binlogTransactionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public Builder setBinlogTransaction(
          BinlogTransaction.Builder builderForValue) {
        if (binlogTransactionBuilder_ == null) {
          binlogTransaction_ = builderForValue.build();
          onChanged();
        } else {
          binlogTransactionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public Builder mergeBinlogTransaction(BinlogTransaction value) {
        if (binlogTransactionBuilder_ == null) {
          if (binlogTransaction_ != null) {
            binlogTransaction_ =
              BinlogTransaction.newBuilder(binlogTransaction_).mergeFrom(value).buildPartial();
          } else {
            binlogTransaction_ = value;
          }
          onChanged();
        } else {
          binlogTransactionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public Builder clearBinlogTransaction() {
        if (binlogTransactionBuilder_ == null) {
          binlogTransaction_ = null;
          onChanged();
        } else {
          binlogTransaction_ = null;
          binlogTransactionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public BinlogTransaction.Builder getBinlogTransactionBuilder() {
        
        onChanged();
        return getBinlogTransactionFieldBuilder().getBuilder();
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public BinlogTransactionOrBuilder getBinlogTransactionOrBuilder() {
        if (binlogTransactionBuilder_ != null) {
          return binlogTransactionBuilder_.getMessageOrBuilder();
        } else {
          return binlogTransaction_ == null ?
              BinlogTransaction.getDefaultInstance() : binlogTransaction_;
        }
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          BinlogTransaction, BinlogTransaction.Builder, BinlogTransactionOrBuilder>
          getBinlogTransactionFieldBuilder() {
        if (binlogTransactionBuilder_ == null) {
          binlogTransactionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              BinlogTransaction, BinlogTransaction.Builder, BinlogTransactionOrBuilder>(
                  getBinlogTransaction(),
                  getParentForChildren(),
                  isClean());
          binlogTransaction_ = null;
        }
        return binlogTransactionBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.StreamKeyRangeResponse)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.StreamKeyRangeResponse)
    private static final StreamKeyRangeResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamKeyRangeResponse();
    }

    public static StreamKeyRangeResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StreamKeyRangeResponse>
        PARSER = new com.google.protobuf.AbstractParser<StreamKeyRangeResponse>() {
      public StreamKeyRangeResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StreamKeyRangeResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StreamKeyRangeResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StreamKeyRangeResponse> getParserForType() {
      return PARSER;
    }

    public StreamKeyRangeResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamTablesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.StreamTablesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * where to start
     * </pre>
     *
     * <code>string position = 1;</code>
     */
    String getPosition();
    /**
     * <pre>
     * where to start
     * </pre>
     *
     * <code>string position = 1;</code>
     */
    com.google.protobuf.ByteString
        getPositionBytes();

    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>repeated string tables = 2;</code>
     */
    java.util.List<String>
        getTablesList();
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>repeated string tables = 2;</code>
     */
    int getTablesCount();
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>repeated string tables = 2;</code>
     */
    String getTables(int index);
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>repeated string tables = 2;</code>
     */
    com.google.protobuf.ByteString
        getTablesBytes(int index);

    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    boolean hasCharset();
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    Charset getCharset();
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    CharsetOrBuilder getCharsetOrBuilder();
  }
  /**
   * <pre>
   * StreamTablesRequest is the payload to StreamTables
   * </pre>
   *
   * Protobuf type {@code binlogdata.StreamTablesRequest}
   */
  public  static final class StreamTablesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.StreamTablesRequest)
      StreamTablesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StreamTablesRequest.newBuilder() to construct.
    private StreamTablesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamTablesRequest() {
      position_ = "";
      tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StreamTablesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              position_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tables_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              tables_.add(s);
              break;
            }
            case 26: {
              Charset.Builder subBuilder = null;
              if (charset_ != null) {
                subBuilder = charset_.toBuilder();
              }
              charset_ = input.readMessage(Charset.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(charset_);
                charset_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tables_ = tables_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_StreamTablesRequest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_StreamTablesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StreamTablesRequest.class, Builder.class);
    }

    private int bitField0_;
    public static final int POSITION_FIELD_NUMBER = 1;
    private volatile Object position_;
    /**
     * <pre>
     * where to start
     * </pre>
     *
     * <code>string position = 1;</code>
     */
    public String getPosition() {
      Object ref = position_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        position_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * where to start
     * </pre>
     *
     * <code>string position = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPositionBytes() {
      Object ref = position_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        position_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLES_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList tables_;
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>repeated string tables = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTablesList() {
      return tables_;
    }
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>repeated string tables = 2;</code>
     */
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>repeated string tables = 2;</code>
     */
    public String getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <pre>
     * what to get
     * </pre>
     *
     * <code>repeated string tables = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTablesBytes(int index) {
      return tables_.getByteString(index);
    }

    public static final int CHARSET_FIELD_NUMBER = 3;
    private Charset charset_;
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    public boolean hasCharset() {
      return charset_ != null;
    }
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    public Charset getCharset() {
      return charset_ == null ? Charset.getDefaultInstance() : charset_;
    }
    /**
     * <pre>
     * default charset on the player side
     * </pre>
     *
     * <code>.binlogdata.Charset charset = 3;</code>
     */
    public CharsetOrBuilder getCharsetOrBuilder() {
      return getCharset();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, position_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, tables_.getRaw(i));
      }
      if (charset_ != null) {
        output.writeMessage(3, getCharset());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, position_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tables_.size(); i++) {
          dataSize += computeStringSizeNoTag(tables_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTablesList().size();
      }
      if (charset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCharset());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof StreamTablesRequest)) {
        return super.equals(obj);
      }
      StreamTablesRequest other = (StreamTablesRequest) obj;

      boolean result = true;
      result = result && getPosition()
          .equals(other.getPosition());
      result = result && getTablesList()
          .equals(other.getTablesList());
      result = result && (hasCharset() == other.hasCharset());
      if (hasCharset()) {
        result = result && getCharset()
            .equals(other.getCharset());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition().hashCode();
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      if (hasCharset()) {
        hash = (37 * hash) + CHARSET_FIELD_NUMBER;
        hash = (53 * hash) + getCharset().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static StreamTablesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamTablesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamTablesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamTablesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamTablesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamTablesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamTablesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StreamTablesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static StreamTablesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static StreamTablesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static StreamTablesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StreamTablesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(StreamTablesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * StreamTablesRequest is the payload to StreamTables
     * </pre>
     *
     * Protobuf type {@code binlogdata.StreamTablesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.StreamTablesRequest)
        StreamTablesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_StreamTablesRequest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_StreamTablesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StreamTablesRequest.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.StreamTablesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        position_ = "";

        tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (charsetBuilder_ == null) {
          charset_ = null;
        } else {
          charset_ = null;
          charsetBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_StreamTablesRequest_descriptor;
      }

      public StreamTablesRequest getDefaultInstanceForType() {
        return StreamTablesRequest.getDefaultInstance();
      }

      public StreamTablesRequest build() {
        StreamTablesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StreamTablesRequest buildPartial() {
        StreamTablesRequest result = new StreamTablesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.position_ = position_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          tables_ = tables_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.tables_ = tables_;
        if (charsetBuilder_ == null) {
          result.charset_ = charset_;
        } else {
          result.charset_ = charsetBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StreamTablesRequest) {
          return mergeFrom((StreamTablesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StreamTablesRequest other) {
        if (other == StreamTablesRequest.getDefaultInstance()) return this;
        if (!other.getPosition().isEmpty()) {
          position_ = other.position_;
          onChanged();
        }
        if (!other.tables_.isEmpty()) {
          if (tables_.isEmpty()) {
            tables_ = other.tables_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTablesIsMutable();
            tables_.addAll(other.tables_);
          }
          onChanged();
        }
        if (other.hasCharset()) {
          mergeCharset(other.getCharset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StreamTablesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StreamTablesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object position_ = "";
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public String getPosition() {
        Object ref = position_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          position_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPositionBytes() {
        Object ref = position_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          position_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public Builder setPosition(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public Builder clearPosition() {
        
        position_ = getDefaultInstance().getPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * where to start
       * </pre>
       *
       * <code>string position = 1;</code>
       */
      public Builder setPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        position_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tables_ = new com.google.protobuf.LazyStringArrayList(tables_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>repeated string tables = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTablesList() {
        return tables_.getUnmodifiableView();
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>repeated string tables = 2;</code>
       */
      public int getTablesCount() {
        return tables_.size();
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>repeated string tables = 2;</code>
       */
      public String getTables(int index) {
        return tables_.get(index);
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>repeated string tables = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTablesBytes(int index) {
        return tables_.getByteString(index);
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>repeated string tables = 2;</code>
       */
      public Builder setTables(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTablesIsMutable();
        tables_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>repeated string tables = 2;</code>
       */
      public Builder addTables(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTablesIsMutable();
        tables_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>repeated string tables = 2;</code>
       */
      public Builder addAllTables(
          Iterable<String> values) {
        ensureTablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tables_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>repeated string tables = 2;</code>
       */
      public Builder clearTables() {
        tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * what to get
       * </pre>
       *
       * <code>repeated string tables = 2;</code>
       */
      public Builder addTablesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTablesIsMutable();
        tables_.add(value);
        onChanged();
        return this;
      }

      private Charset charset_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          Charset, Charset.Builder, CharsetOrBuilder> charsetBuilder_;
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public boolean hasCharset() {
        return charsetBuilder_ != null || charset_ != null;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Charset getCharset() {
        if (charsetBuilder_ == null) {
          return charset_ == null ? Charset.getDefaultInstance() : charset_;
        } else {
          return charsetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Builder setCharset(Charset value) {
        if (charsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          charset_ = value;
          onChanged();
        } else {
          charsetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Builder setCharset(
          Charset.Builder builderForValue) {
        if (charsetBuilder_ == null) {
          charset_ = builderForValue.build();
          onChanged();
        } else {
          charsetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Builder mergeCharset(Charset value) {
        if (charsetBuilder_ == null) {
          if (charset_ != null) {
            charset_ =
              Charset.newBuilder(charset_).mergeFrom(value).buildPartial();
          } else {
            charset_ = value;
          }
          onChanged();
        } else {
          charsetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Builder clearCharset() {
        if (charsetBuilder_ == null) {
          charset_ = null;
          onChanged();
        } else {
          charset_ = null;
          charsetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public Charset.Builder getCharsetBuilder() {
        
        onChanged();
        return getCharsetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      public CharsetOrBuilder getCharsetOrBuilder() {
        if (charsetBuilder_ != null) {
          return charsetBuilder_.getMessageOrBuilder();
        } else {
          return charset_ == null ?
              Charset.getDefaultInstance() : charset_;
        }
      }
      /**
       * <pre>
       * default charset on the player side
       * </pre>
       *
       * <code>.binlogdata.Charset charset = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Charset, Charset.Builder, CharsetOrBuilder>
          getCharsetFieldBuilder() {
        if (charsetBuilder_ == null) {
          charsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Charset, Charset.Builder, CharsetOrBuilder>(
                  getCharset(),
                  getParentForChildren(),
                  isClean());
          charset_ = null;
        }
        return charsetBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.StreamTablesRequest)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.StreamTablesRequest)
    private static final StreamTablesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamTablesRequest();
    }

    public static StreamTablesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StreamTablesRequest>
        PARSER = new com.google.protobuf.AbstractParser<StreamTablesRequest>() {
      public StreamTablesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StreamTablesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StreamTablesRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StreamTablesRequest> getParserForType() {
      return PARSER;
    }

    public StreamTablesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamTablesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.StreamTablesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    boolean hasBinlogTransaction();
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    BinlogTransaction getBinlogTransaction();
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    BinlogTransactionOrBuilder getBinlogTransactionOrBuilder();
  }
  /**
   * <pre>
   * StreamTablesResponse is the response from StreamTables
   * </pre>
   *
   * Protobuf type {@code binlogdata.StreamTablesResponse}
   */
  public  static final class StreamTablesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.StreamTablesResponse)
      StreamTablesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StreamTablesResponse.newBuilder() to construct.
    private StreamTablesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamTablesResponse() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StreamTablesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              BinlogTransaction.Builder subBuilder = null;
              if (binlogTransaction_ != null) {
                subBuilder = binlogTransaction_.toBuilder();
              }
              binlogTransaction_ = input.readMessage(BinlogTransaction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(binlogTransaction_);
                binlogTransaction_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_StreamTablesResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_StreamTablesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StreamTablesResponse.class, Builder.class);
    }

    public static final int BINLOG_TRANSACTION_FIELD_NUMBER = 1;
    private BinlogTransaction binlogTransaction_;
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    public boolean hasBinlogTransaction() {
      return binlogTransaction_ != null;
    }
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    public BinlogTransaction getBinlogTransaction() {
      return binlogTransaction_ == null ? BinlogTransaction.getDefaultInstance() : binlogTransaction_;
    }
    /**
     * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
     */
    public BinlogTransactionOrBuilder getBinlogTransactionOrBuilder() {
      return getBinlogTransaction();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (binlogTransaction_ != null) {
        output.writeMessage(1, getBinlogTransaction());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (binlogTransaction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBinlogTransaction());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof StreamTablesResponse)) {
        return super.equals(obj);
      }
      StreamTablesResponse other = (StreamTablesResponse) obj;

      boolean result = true;
      result = result && (hasBinlogTransaction() == other.hasBinlogTransaction());
      if (hasBinlogTransaction()) {
        result = result && getBinlogTransaction()
            .equals(other.getBinlogTransaction());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBinlogTransaction()) {
        hash = (37 * hash) + BINLOG_TRANSACTION_FIELD_NUMBER;
        hash = (53 * hash) + getBinlogTransaction().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static StreamTablesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamTablesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamTablesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamTablesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamTablesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StreamTablesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StreamTablesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StreamTablesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static StreamTablesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static StreamTablesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static StreamTablesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StreamTablesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(StreamTablesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * StreamTablesResponse is the response from StreamTables
     * </pre>
     *
     * Protobuf type {@code binlogdata.StreamTablesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.StreamTablesResponse)
        StreamTablesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_StreamTablesResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_StreamTablesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StreamTablesResponse.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.StreamTablesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (binlogTransactionBuilder_ == null) {
          binlogTransaction_ = null;
        } else {
          binlogTransaction_ = null;
          binlogTransactionBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_StreamTablesResponse_descriptor;
      }

      public StreamTablesResponse getDefaultInstanceForType() {
        return StreamTablesResponse.getDefaultInstance();
      }

      public StreamTablesResponse build() {
        StreamTablesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StreamTablesResponse buildPartial() {
        StreamTablesResponse result = new StreamTablesResponse(this);
        if (binlogTransactionBuilder_ == null) {
          result.binlogTransaction_ = binlogTransaction_;
        } else {
          result.binlogTransaction_ = binlogTransactionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StreamTablesResponse) {
          return mergeFrom((StreamTablesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StreamTablesResponse other) {
        if (other == StreamTablesResponse.getDefaultInstance()) return this;
        if (other.hasBinlogTransaction()) {
          mergeBinlogTransaction(other.getBinlogTransaction());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StreamTablesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StreamTablesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private BinlogTransaction binlogTransaction_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          BinlogTransaction, BinlogTransaction.Builder, BinlogTransactionOrBuilder> binlogTransactionBuilder_;
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public boolean hasBinlogTransaction() {
        return binlogTransactionBuilder_ != null || binlogTransaction_ != null;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public BinlogTransaction getBinlogTransaction() {
        if (binlogTransactionBuilder_ == null) {
          return binlogTransaction_ == null ? BinlogTransaction.getDefaultInstance() : binlogTransaction_;
        } else {
          return binlogTransactionBuilder_.getMessage();
        }
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public Builder setBinlogTransaction(BinlogTransaction value) {
        if (binlogTransactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          binlogTransaction_ = value;
          onChanged();
        } else {
          binlogTransactionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public Builder setBinlogTransaction(
          BinlogTransaction.Builder builderForValue) {
        if (binlogTransactionBuilder_ == null) {
          binlogTransaction_ = builderForValue.build();
          onChanged();
        } else {
          binlogTransactionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public Builder mergeBinlogTransaction(BinlogTransaction value) {
        if (binlogTransactionBuilder_ == null) {
          if (binlogTransaction_ != null) {
            binlogTransaction_ =
              BinlogTransaction.newBuilder(binlogTransaction_).mergeFrom(value).buildPartial();
          } else {
            binlogTransaction_ = value;
          }
          onChanged();
        } else {
          binlogTransactionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public Builder clearBinlogTransaction() {
        if (binlogTransactionBuilder_ == null) {
          binlogTransaction_ = null;
          onChanged();
        } else {
          binlogTransaction_ = null;
          binlogTransactionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public BinlogTransaction.Builder getBinlogTransactionBuilder() {
        
        onChanged();
        return getBinlogTransactionFieldBuilder().getBuilder();
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      public BinlogTransactionOrBuilder getBinlogTransactionOrBuilder() {
        if (binlogTransactionBuilder_ != null) {
          return binlogTransactionBuilder_.getMessageOrBuilder();
        } else {
          return binlogTransaction_ == null ?
              BinlogTransaction.getDefaultInstance() : binlogTransaction_;
        }
      }
      /**
       * <code>.binlogdata.BinlogTransaction binlog_transaction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          BinlogTransaction, BinlogTransaction.Builder, BinlogTransactionOrBuilder>
          getBinlogTransactionFieldBuilder() {
        if (binlogTransactionBuilder_ == null) {
          binlogTransactionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              BinlogTransaction, BinlogTransaction.Builder, BinlogTransactionOrBuilder>(
                  getBinlogTransaction(),
                  getParentForChildren(),
                  isClean());
          binlogTransaction_ = null;
        }
        return binlogTransactionBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.StreamTablesResponse)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.StreamTablesResponse)
    private static final StreamTablesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamTablesResponse();
    }

    public static StreamTablesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StreamTablesResponse>
        PARSER = new com.google.protobuf.AbstractParser<StreamTablesResponse>() {
      public StreamTablesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StreamTablesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StreamTablesResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StreamTablesResponse> getParserForType() {
      return PARSER;
    }

    public StreamTablesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RuleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.Rule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Match can be a table name or a regular expression.
     * If it starts with a '/', it's a regular expression.
     * For example, "t" matches a table named "t", whereas
     * "/t.*" matches all tables that begin with 't'.
     * </pre>
     *
     * <code>string match = 1;</code>
     */
    String getMatch();
    /**
     * <pre>
     * Match can be a table name or a regular expression.
     * If it starts with a '/', it's a regular expression.
     * For example, "t" matches a table named "t", whereas
     * "/t.*" matches all tables that begin with 't'.
     * </pre>
     *
     * <code>string match = 1;</code>
     */
    com.google.protobuf.ByteString
        getMatchBytes();

    /**
     * <pre>
     * Filter: If empty, all columns and rows of the matching tables
     * are sent. If it's a keyrange like "-80", only rows that
     * match the keyrange are sent.
     * If Match is a table name instead of a regular expression,
     * the Filter can also be a select expression like this:
     * "select * from t", same as an empty Filter, or
     * "select * from t where in_keyrange('-80')", same as "-80", or
     * "select col1, col2 from t where in_keyrange(col1, 'hash', '-80'), or
     * What is allowed in a select expression depends on whether
     * it's a vstreamer or vreplication request. For more details,
     * please refer to the specific package documentation.
     * On the vreplication side, Filter can also accept a special
     * "exclude" value, which will cause the matched tables
     * to be excluded.
     * TODO(sougou): support this on vstreamer side also.
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    String getFilter();
    /**
     * <pre>
     * Filter: If empty, all columns and rows of the matching tables
     * are sent. If it's a keyrange like "-80", only rows that
     * match the keyrange are sent.
     * If Match is a table name instead of a regular expression,
     * the Filter can also be a select expression like this:
     * "select * from t", same as an empty Filter, or
     * "select * from t where in_keyrange('-80')", same as "-80", or
     * "select col1, col2 from t where in_keyrange(col1, 'hash', '-80'), or
     * What is allowed in a select expression depends on whether
     * it's a vstreamer or vreplication request. For more details,
     * please refer to the specific package documentation.
     * On the vreplication side, Filter can also accept a special
     * "exclude" value, which will cause the matched tables
     * to be excluded.
     * TODO(sougou): support this on vstreamer side also.
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    com.google.protobuf.ByteString
        getFilterBytes();
  }
  /**
   * <pre>
   * Rule represents one rule in a Filter.
   * </pre>
   *
   * Protobuf type {@code binlogdata.Rule}
   */
  public  static final class Rule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.Rule)
      RuleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Rule.newBuilder() to construct.
    private Rule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Rule() {
      match_ = "";
      filter_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Rule(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              match_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              filter_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_Rule_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_Rule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rule.class, Builder.class);
    }

    public static final int MATCH_FIELD_NUMBER = 1;
    private volatile Object match_;
    /**
     * <pre>
     * Match can be a table name or a regular expression.
     * If it starts with a '/', it's a regular expression.
     * For example, "t" matches a table named "t", whereas
     * "/t.*" matches all tables that begin with 't'.
     * </pre>
     *
     * <code>string match = 1;</code>
     */
    public String getMatch() {
      Object ref = match_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        match_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Match can be a table name or a regular expression.
     * If it starts with a '/', it's a regular expression.
     * For example, "t" matches a table named "t", whereas
     * "/t.*" matches all tables that begin with 't'.
     * </pre>
     *
     * <code>string match = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMatchBytes() {
      Object ref = match_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        match_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_FIELD_NUMBER = 2;
    private volatile Object filter_;
    /**
     * <pre>
     * Filter: If empty, all columns and rows of the matching tables
     * are sent. If it's a keyrange like "-80", only rows that
     * match the keyrange are sent.
     * If Match is a table name instead of a regular expression,
     * the Filter can also be a select expression like this:
     * "select * from t", same as an empty Filter, or
     * "select * from t where in_keyrange('-80')", same as "-80", or
     * "select col1, col2 from t where in_keyrange(col1, 'hash', '-80'), or
     * What is allowed in a select expression depends on whether
     * it's a vstreamer or vreplication request. For more details,
     * please refer to the specific package documentation.
     * On the vreplication side, Filter can also accept a special
     * "exclude" value, which will cause the matched tables
     * to be excluded.
     * TODO(sougou): support this on vstreamer side also.
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    public String getFilter() {
      Object ref = filter_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Filter: If empty, all columns and rows of the matching tables
     * are sent. If it's a keyrange like "-80", only rows that
     * match the keyrange are sent.
     * If Match is a table name instead of a regular expression,
     * the Filter can also be a select expression like this:
     * "select * from t", same as an empty Filter, or
     * "select * from t where in_keyrange('-80')", same as "-80", or
     * "select col1, col2 from t where in_keyrange(col1, 'hash', '-80'), or
     * What is allowed in a select expression depends on whether
     * it's a vstreamer or vreplication request. For more details,
     * please refer to the specific package documentation.
     * On the vreplication side, Filter can also accept a special
     * "exclude" value, which will cause the matched tables
     * to be excluded.
     * TODO(sougou): support this on vstreamer side also.
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFilterBytes() {
      Object ref = filter_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMatchBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, match_);
      }
      if (!getFilterBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filter_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMatchBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, match_);
      }
      if (!getFilterBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Rule)) {
        return super.equals(obj);
      }
      Rule other = (Rule) obj;

      boolean result = true;
      result = result && getMatch()
          .equals(other.getMatch());
      result = result && getFilter()
          .equals(other.getFilter());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MATCH_FIELD_NUMBER;
      hash = (53 * hash) + getMatch().hashCode();
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Rule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Rule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Rule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Rule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Rule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Rule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Rule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Rule represents one rule in a Filter.
     * </pre>
     *
     * Protobuf type {@code binlogdata.Rule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.Rule)
        RuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_Rule_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_Rule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rule.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.Rule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        match_ = "";

        filter_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_Rule_descriptor;
      }

      public Rule getDefaultInstanceForType() {
        return Rule.getDefaultInstance();
      }

      public Rule build() {
        Rule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Rule buildPartial() {
        Rule result = new Rule(this);
        result.match_ = match_;
        result.filter_ = filter_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rule) {
          return mergeFrom((Rule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rule other) {
        if (other == Rule.getDefaultInstance()) return this;
        if (!other.getMatch().isEmpty()) {
          match_ = other.match_;
          onChanged();
        }
        if (!other.getFilter().isEmpty()) {
          filter_ = other.filter_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rule parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rule) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object match_ = "";
      /**
       * <pre>
       * Match can be a table name or a regular expression.
       * If it starts with a '/', it's a regular expression.
       * For example, "t" matches a table named "t", whereas
       * "/t.*" matches all tables that begin with 't'.
       * </pre>
       *
       * <code>string match = 1;</code>
       */
      public String getMatch() {
        Object ref = match_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          match_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Match can be a table name or a regular expression.
       * If it starts with a '/', it's a regular expression.
       * For example, "t" matches a table named "t", whereas
       * "/t.*" matches all tables that begin with 't'.
       * </pre>
       *
       * <code>string match = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMatchBytes() {
        Object ref = match_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          match_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Match can be a table name or a regular expression.
       * If it starts with a '/', it's a regular expression.
       * For example, "t" matches a table named "t", whereas
       * "/t.*" matches all tables that begin with 't'.
       * </pre>
       *
       * <code>string match = 1;</code>
       */
      public Builder setMatch(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        match_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Match can be a table name or a regular expression.
       * If it starts with a '/', it's a regular expression.
       * For example, "t" matches a table named "t", whereas
       * "/t.*" matches all tables that begin with 't'.
       * </pre>
       *
       * <code>string match = 1;</code>
       */
      public Builder clearMatch() {
        
        match_ = getDefaultInstance().getMatch();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Match can be a table name or a regular expression.
       * If it starts with a '/', it's a regular expression.
       * For example, "t" matches a table named "t", whereas
       * "/t.*" matches all tables that begin with 't'.
       * </pre>
       *
       * <code>string match = 1;</code>
       */
      public Builder setMatchBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        match_ = value;
        onChanged();
        return this;
      }

      private Object filter_ = "";
      /**
       * <pre>
       * Filter: If empty, all columns and rows of the matching tables
       * are sent. If it's a keyrange like "-80", only rows that
       * match the keyrange are sent.
       * If Match is a table name instead of a regular expression,
       * the Filter can also be a select expression like this:
       * "select * from t", same as an empty Filter, or
       * "select * from t where in_keyrange('-80')", same as "-80", or
       * "select col1, col2 from t where in_keyrange(col1, 'hash', '-80'), or
       * What is allowed in a select expression depends on whether
       * it's a vstreamer or vreplication request. For more details,
       * please refer to the specific package documentation.
       * On the vreplication side, Filter can also accept a special
       * "exclude" value, which will cause the matched tables
       * to be excluded.
       * TODO(sougou): support this on vstreamer side also.
       * </pre>
       *
       * <code>string filter = 2;</code>
       */
      public String getFilter() {
        Object ref = filter_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          filter_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Filter: If empty, all columns and rows of the matching tables
       * are sent. If it's a keyrange like "-80", only rows that
       * match the keyrange are sent.
       * If Match is a table name instead of a regular expression,
       * the Filter can also be a select expression like this:
       * "select * from t", same as an empty Filter, or
       * "select * from t where in_keyrange('-80')", same as "-80", or
       * "select col1, col2 from t where in_keyrange(col1, 'hash', '-80'), or
       * What is allowed in a select expression depends on whether
       * it's a vstreamer or vreplication request. For more details,
       * please refer to the specific package documentation.
       * On the vreplication side, Filter can also accept a special
       * "exclude" value, which will cause the matched tables
       * to be excluded.
       * TODO(sougou): support this on vstreamer side also.
       * </pre>
       *
       * <code>string filter = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFilterBytes() {
        Object ref = filter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          filter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Filter: If empty, all columns and rows of the matching tables
       * are sent. If it's a keyrange like "-80", only rows that
       * match the keyrange are sent.
       * If Match is a table name instead of a regular expression,
       * the Filter can also be a select expression like this:
       * "select * from t", same as an empty Filter, or
       * "select * from t where in_keyrange('-80')", same as "-80", or
       * "select col1, col2 from t where in_keyrange(col1, 'hash', '-80'), or
       * What is allowed in a select expression depends on whether
       * it's a vstreamer or vreplication request. For more details,
       * please refer to the specific package documentation.
       * On the vreplication side, Filter can also accept a special
       * "exclude" value, which will cause the matched tables
       * to be excluded.
       * TODO(sougou): support this on vstreamer side also.
       * </pre>
       *
       * <code>string filter = 2;</code>
       */
      public Builder setFilter(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Filter: If empty, all columns and rows of the matching tables
       * are sent. If it's a keyrange like "-80", only rows that
       * match the keyrange are sent.
       * If Match is a table name instead of a regular expression,
       * the Filter can also be a select expression like this:
       * "select * from t", same as an empty Filter, or
       * "select * from t where in_keyrange('-80')", same as "-80", or
       * "select col1, col2 from t where in_keyrange(col1, 'hash', '-80'), or
       * What is allowed in a select expression depends on whether
       * it's a vstreamer or vreplication request. For more details,
       * please refer to the specific package documentation.
       * On the vreplication side, Filter can also accept a special
       * "exclude" value, which will cause the matched tables
       * to be excluded.
       * TODO(sougou): support this on vstreamer side also.
       * </pre>
       *
       * <code>string filter = 2;</code>
       */
      public Builder clearFilter() {
        
        filter_ = getDefaultInstance().getFilter();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Filter: If empty, all columns and rows of the matching tables
       * are sent. If it's a keyrange like "-80", only rows that
       * match the keyrange are sent.
       * If Match is a table name instead of a regular expression,
       * the Filter can also be a select expression like this:
       * "select * from t", same as an empty Filter, or
       * "select * from t where in_keyrange('-80')", same as "-80", or
       * "select col1, col2 from t where in_keyrange(col1, 'hash', '-80'), or
       * What is allowed in a select expression depends on whether
       * it's a vstreamer or vreplication request. For more details,
       * please refer to the specific package documentation.
       * On the vreplication side, Filter can also accept a special
       * "exclude" value, which will cause the matched tables
       * to be excluded.
       * TODO(sougou): support this on vstreamer side also.
       * </pre>
       *
       * <code>string filter = 2;</code>
       */
      public Builder setFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filter_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.Rule)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.Rule)
    private static final Rule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Rule();
    }

    public static Rule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Rule>
        PARSER = new com.google.protobuf.AbstractParser<Rule>() {
      public Rule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Rule(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Rule> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Rule> getParserForType() {
      return PARSER;
    }

    public Rule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.Filter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    java.util.List<Rule>
        getRulesList();
    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    Rule getRules(int index);
    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    int getRulesCount();
    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    java.util.List<? extends RuleOrBuilder>
        getRulesOrBuilderList();
    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    RuleOrBuilder getRulesOrBuilder(
        int index);

    /**
     * <pre>
     * FieldEventMode specifies the behavior if there is a mismatch
     * between the current schema and the fields in the binlog. This
     * can happen if the binlog position is before a DDL that would
     * cause the fields to change. If vstreamer detects such 
     * an inconsistency, the behavior depends on the FieldEventMode.
     * If the value is ERR_ON_MISMATCH (default), then it errors out.
     * If it's BEST_EFFORT, it sends a field event with fake column
     * names as "&#64;1", "&#64;2", etc.
     * </pre>
     *
     * <code>.binlogdata.Filter.FieldEventMode fieldEventMode = 2;</code>
     */
    int getFieldEventModeValue();
    /**
     * <pre>
     * FieldEventMode specifies the behavior if there is a mismatch
     * between the current schema and the fields in the binlog. This
     * can happen if the binlog position is before a DDL that would
     * cause the fields to change. If vstreamer detects such 
     * an inconsistency, the behavior depends on the FieldEventMode.
     * If the value is ERR_ON_MISMATCH (default), then it errors out.
     * If it's BEST_EFFORT, it sends a field event with fake column
     * names as "&#64;1", "&#64;2", etc.
     * </pre>
     *
     * <code>.binlogdata.Filter.FieldEventMode fieldEventMode = 2;</code>
     */
    Filter.FieldEventMode getFieldEventMode();
  }
  /**
   * <pre>
   * Filter represents a list of ordered rules. The first
   * match wins.
   * </pre>
   *
   * Protobuf type {@code binlogdata.Filter}
   */
  public  static final class Filter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.Filter)
      FilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Filter.newBuilder() to construct.
    private Filter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Filter() {
      rules_ = java.util.Collections.emptyList();
      fieldEventMode_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Filter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rules_ = new java.util.ArrayList<Rule>();
                mutable_bitField0_ |= 0x00000001;
              }
              rules_.add(
                  input.readMessage(Rule.parser(), extensionRegistry));
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              fieldEventMode_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rules_ = java.util.Collections.unmodifiableList(rules_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_Filter_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_Filter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Filter.class, Builder.class);
    }

    /**
     * Protobuf enum {@code binlogdata.Filter.FieldEventMode}
     */
    public enum FieldEventMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ERR_ON_MISMATCH = 0;</code>
       */
      ERR_ON_MISMATCH(0),
      /**
       * <code>BEST_EFFORT = 1;</code>
       */
      BEST_EFFORT(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ERR_ON_MISMATCH = 0;</code>
       */
      public static final int ERR_ON_MISMATCH_VALUE = 0;
      /**
       * <code>BEST_EFFORT = 1;</code>
       */
      public static final int BEST_EFFORT_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static FieldEventMode valueOf(int value) {
        return forNumber(value);
      }

      public static FieldEventMode forNumber(int value) {
        switch (value) {
          case 0: return ERR_ON_MISMATCH;
          case 1: return BEST_EFFORT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FieldEventMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          FieldEventMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FieldEventMode>() {
              public FieldEventMode findValueByNumber(int number) {
                return FieldEventMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Filter.getDescriptor().getEnumTypes().get(0);
      }

      private static final FieldEventMode[] VALUES = values();

      public static FieldEventMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private FieldEventMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:binlogdata.Filter.FieldEventMode)
    }

    private int bitField0_;
    public static final int RULES_FIELD_NUMBER = 1;
    private java.util.List<Rule> rules_;
    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    public java.util.List<Rule> getRulesList() {
      return rules_;
    }
    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    public java.util.List<? extends RuleOrBuilder>
        getRulesOrBuilderList() {
      return rules_;
    }
    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    public int getRulesCount() {
      return rules_.size();
    }
    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    public Rule getRules(int index) {
      return rules_.get(index);
    }
    /**
     * <code>repeated .binlogdata.Rule rules = 1;</code>
     */
    public RuleOrBuilder getRulesOrBuilder(
        int index) {
      return rules_.get(index);
    }

    public static final int FIELDEVENTMODE_FIELD_NUMBER = 2;
    private int fieldEventMode_;
    /**
     * <pre>
     * FieldEventMode specifies the behavior if there is a mismatch
     * between the current schema and the fields in the binlog. This
     * can happen if the binlog position is before a DDL that would
     * cause the fields to change. If vstreamer detects such 
     * an inconsistency, the behavior depends on the FieldEventMode.
     * If the value is ERR_ON_MISMATCH (default), then it errors out.
     * If it's BEST_EFFORT, it sends a field event with fake column
     * names as "&#64;1", "&#64;2", etc.
     * </pre>
     *
     * <code>.binlogdata.Filter.FieldEventMode fieldEventMode = 2;</code>
     */
    public int getFieldEventModeValue() {
      return fieldEventMode_;
    }
    /**
     * <pre>
     * FieldEventMode specifies the behavior if there is a mismatch
     * between the current schema and the fields in the binlog. This
     * can happen if the binlog position is before a DDL that would
     * cause the fields to change. If vstreamer detects such 
     * an inconsistency, the behavior depends on the FieldEventMode.
     * If the value is ERR_ON_MISMATCH (default), then it errors out.
     * If it's BEST_EFFORT, it sends a field event with fake column
     * names as "&#64;1", "&#64;2", etc.
     * </pre>
     *
     * <code>.binlogdata.Filter.FieldEventMode fieldEventMode = 2;</code>
     */
    public FieldEventMode getFieldEventMode() {
      FieldEventMode result = FieldEventMode.valueOf(fieldEventMode_);
      return result == null ? FieldEventMode.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rules_.size(); i++) {
        output.writeMessage(1, rules_.get(i));
      }
      if (fieldEventMode_ != FieldEventMode.ERR_ON_MISMATCH.getNumber()) {
        output.writeEnum(2, fieldEventMode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rules_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rules_.get(i));
      }
      if (fieldEventMode_ != FieldEventMode.ERR_ON_MISMATCH.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, fieldEventMode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Filter)) {
        return super.equals(obj);
      }
      Filter other = (Filter) obj;

      boolean result = true;
      result = result && getRulesList()
          .equals(other.getRulesList());
      result = result && fieldEventMode_ == other.fieldEventMode_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRulesCount() > 0) {
        hash = (37 * hash) + RULES_FIELD_NUMBER;
        hash = (53 * hash) + getRulesList().hashCode();
      }
      hash = (37 * hash) + FIELDEVENTMODE_FIELD_NUMBER;
      hash = (53 * hash) + fieldEventMode_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Filter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Filter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Filter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Filter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Filter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Filter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Filter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Filter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Filter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Filter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Filter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Filter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Filter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Filter represents a list of ordered rules. The first
     * match wins.
     * </pre>
     *
     * Protobuf type {@code binlogdata.Filter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.Filter)
        FilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_Filter_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_Filter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Filter.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.Filter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRulesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rulesBuilder_.clear();
        }
        fieldEventMode_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_Filter_descriptor;
      }

      public Filter getDefaultInstanceForType() {
        return Filter.getDefaultInstance();
      }

      public Filter build() {
        Filter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Filter buildPartial() {
        Filter result = new Filter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (rulesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rules_ = java.util.Collections.unmodifiableList(rules_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rules_ = rules_;
        } else {
          result.rules_ = rulesBuilder_.build();
        }
        result.fieldEventMode_ = fieldEventMode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Filter) {
          return mergeFrom((Filter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Filter other) {
        if (other == Filter.getDefaultInstance()) return this;
        if (rulesBuilder_ == null) {
          if (!other.rules_.isEmpty()) {
            if (rules_.isEmpty()) {
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRulesIsMutable();
              rules_.addAll(other.rules_);
            }
            onChanged();
          }
        } else {
          if (!other.rules_.isEmpty()) {
            if (rulesBuilder_.isEmpty()) {
              rulesBuilder_.dispose();
              rulesBuilder_ = null;
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rulesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRulesFieldBuilder() : null;
            } else {
              rulesBuilder_.addAllMessages(other.rules_);
            }
          }
        }
        if (other.fieldEventMode_ != 0) {
          setFieldEventModeValue(other.getFieldEventModeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Filter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Filter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Rule> rules_ =
        java.util.Collections.emptyList();
      private void ensureRulesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rules_ = new java.util.ArrayList<Rule>(rules_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Rule, Rule.Builder, RuleOrBuilder> rulesBuilder_;

      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public java.util.List<Rule> getRulesList() {
        if (rulesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rules_);
        } else {
          return rulesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public int getRulesCount() {
        if (rulesBuilder_ == null) {
          return rules_.size();
        } else {
          return rulesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Rule getRules(int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);
        } else {
          return rulesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Builder setRules(
          int index, Rule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.set(index, value);
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Builder setRules(
          int index, Rule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.set(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Builder addRules(Rule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Builder addRules(
          int index, Rule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(index, value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Builder addRules(
          Rule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Builder addRules(
          int index, Rule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Builder addAllRules(
          Iterable<? extends Rule> values) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rules_);
          onChanged();
        } else {
          rulesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Builder clearRules() {
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rulesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Builder removeRules(int index) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.remove(index);
          onChanged();
        } else {
          rulesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Rule.Builder getRulesBuilder(
          int index) {
        return getRulesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public RuleOrBuilder getRulesOrBuilder(
          int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);  } else {
          return rulesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public java.util.List<? extends RuleOrBuilder>
           getRulesOrBuilderList() {
        if (rulesBuilder_ != null) {
          return rulesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rules_);
        }
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Rule.Builder addRulesBuilder() {
        return getRulesFieldBuilder().addBuilder(
            Rule.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public Rule.Builder addRulesBuilder(
          int index) {
        return getRulesFieldBuilder().addBuilder(
            index, Rule.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.Rule rules = 1;</code>
       */
      public java.util.List<Rule.Builder>
           getRulesBuilderList() {
        return getRulesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Rule, Rule.Builder, RuleOrBuilder>
          getRulesFieldBuilder() {
        if (rulesBuilder_ == null) {
          rulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Rule, Rule.Builder, RuleOrBuilder>(
                  rules_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rules_ = null;
        }
        return rulesBuilder_;
      }

      private int fieldEventMode_ = 0;
      /**
       * <pre>
       * FieldEventMode specifies the behavior if there is a mismatch
       * between the current schema and the fields in the binlog. This
       * can happen if the binlog position is before a DDL that would
       * cause the fields to change. If vstreamer detects such 
       * an inconsistency, the behavior depends on the FieldEventMode.
       * If the value is ERR_ON_MISMATCH (default), then it errors out.
       * If it's BEST_EFFORT, it sends a field event with fake column
       * names as "&#64;1", "&#64;2", etc.
       * </pre>
       *
       * <code>.binlogdata.Filter.FieldEventMode fieldEventMode = 2;</code>
       */
      public int getFieldEventModeValue() {
        return fieldEventMode_;
      }
      /**
       * <pre>
       * FieldEventMode specifies the behavior if there is a mismatch
       * between the current schema and the fields in the binlog. This
       * can happen if the binlog position is before a DDL that would
       * cause the fields to change. If vstreamer detects such 
       * an inconsistency, the behavior depends on the FieldEventMode.
       * If the value is ERR_ON_MISMATCH (default), then it errors out.
       * If it's BEST_EFFORT, it sends a field event with fake column
       * names as "&#64;1", "&#64;2", etc.
       * </pre>
       *
       * <code>.binlogdata.Filter.FieldEventMode fieldEventMode = 2;</code>
       */
      public Builder setFieldEventModeValue(int value) {
        fieldEventMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * FieldEventMode specifies the behavior if there is a mismatch
       * between the current schema and the fields in the binlog. This
       * can happen if the binlog position is before a DDL that would
       * cause the fields to change. If vstreamer detects such 
       * an inconsistency, the behavior depends on the FieldEventMode.
       * If the value is ERR_ON_MISMATCH (default), then it errors out.
       * If it's BEST_EFFORT, it sends a field event with fake column
       * names as "&#64;1", "&#64;2", etc.
       * </pre>
       *
       * <code>.binlogdata.Filter.FieldEventMode fieldEventMode = 2;</code>
       */
      public FieldEventMode getFieldEventMode() {
        FieldEventMode result = FieldEventMode.valueOf(fieldEventMode_);
        return result == null ? FieldEventMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * FieldEventMode specifies the behavior if there is a mismatch
       * between the current schema and the fields in the binlog. This
       * can happen if the binlog position is before a DDL that would
       * cause the fields to change. If vstreamer detects such 
       * an inconsistency, the behavior depends on the FieldEventMode.
       * If the value is ERR_ON_MISMATCH (default), then it errors out.
       * If it's BEST_EFFORT, it sends a field event with fake column
       * names as "&#64;1", "&#64;2", etc.
       * </pre>
       *
       * <code>.binlogdata.Filter.FieldEventMode fieldEventMode = 2;</code>
       */
      public Builder setFieldEventMode(FieldEventMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        fieldEventMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * FieldEventMode specifies the behavior if there is a mismatch
       * between the current schema and the fields in the binlog. This
       * can happen if the binlog position is before a DDL that would
       * cause the fields to change. If vstreamer detects such 
       * an inconsistency, the behavior depends on the FieldEventMode.
       * If the value is ERR_ON_MISMATCH (default), then it errors out.
       * If it's BEST_EFFORT, it sends a field event with fake column
       * names as "&#64;1", "&#64;2", etc.
       * </pre>
       *
       * <code>.binlogdata.Filter.FieldEventMode fieldEventMode = 2;</code>
       */
      public Builder clearFieldEventMode() {
        
        fieldEventMode_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.Filter)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.Filter)
    private static final Filter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Filter();
    }

    public static Filter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Filter>
        PARSER = new com.google.protobuf.AbstractParser<Filter>() {
      public Filter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Filter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Filter> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Filter> getParserForType() {
      return PARSER;
    }

    public Filter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BinlogSourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.BinlogSource)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * the source keyspace
     * </pre>
     *
     * <code>string keyspace = 1;</code>
     */
    String getKeyspace();
    /**
     * <pre>
     * the source keyspace
     * </pre>
     *
     * <code>string keyspace = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyspaceBytes();

    /**
     * <pre>
     * the source shard
     * </pre>
     *
     * <code>string shard = 2;</code>
     */
    String getShard();
    /**
     * <pre>
     * the source shard
     * </pre>
     *
     * <code>string shard = 2;</code>
     */
    com.google.protobuf.ByteString
        getShardBytes();

    /**
     * <pre>
     * the source tablet type
     * </pre>
     *
     * <code>.topodata.TabletType tablet_type = 3;</code>
     */
    int getTabletTypeValue();
    /**
     * <pre>
     * the source tablet type
     * </pre>
     *
     * <code>.topodata.TabletType tablet_type = 3;</code>
     */
    io.vitess.proto.Topodata.TabletType getTabletType();

    /**
     * <pre>
     * KeyRange is set if the request is for a keyrange
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 4;</code>
     */
    boolean hasKeyRange();
    /**
     * <pre>
     * KeyRange is set if the request is for a keyrange
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 4;</code>
     */
    io.vitess.proto.Topodata.KeyRange getKeyRange();
    /**
     * <pre>
     * KeyRange is set if the request is for a keyrange
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 4;</code>
     */
    io.vitess.proto.Topodata.KeyRangeOrBuilder getKeyRangeOrBuilder();

    /**
     * <pre>
     * Tables is set if the request is for a list of tables
     * </pre>
     *
     * <code>repeated string tables = 5;</code>
     */
    java.util.List<String>
        getTablesList();
    /**
     * <pre>
     * Tables is set if the request is for a list of tables
     * </pre>
     *
     * <code>repeated string tables = 5;</code>
     */
    int getTablesCount();
    /**
     * <pre>
     * Tables is set if the request is for a list of tables
     * </pre>
     *
     * <code>repeated string tables = 5;</code>
     */
    String getTables(int index);
    /**
     * <pre>
     * Tables is set if the request is for a list of tables
     * </pre>
     *
     * <code>repeated string tables = 5;</code>
     */
    com.google.protobuf.ByteString
        getTablesBytes(int index);

    /**
     * <pre>
     * Filter is set if we're using the generalized representation
     * for the filter.
     * </pre>
     *
     * <code>.binlogdata.Filter filter = 6;</code>
     */
    boolean hasFilter();
    /**
     * <pre>
     * Filter is set if we're using the generalized representation
     * for the filter.
     * </pre>
     *
     * <code>.binlogdata.Filter filter = 6;</code>
     */
    Filter getFilter();
    /**
     * <pre>
     * Filter is set if we're using the generalized representation
     * for the filter.
     * </pre>
     *
     * <code>.binlogdata.Filter filter = 6;</code>
     */
    FilterOrBuilder getFilterOrBuilder();

    /**
     * <pre>
     * OnDdl specifies the action to be taken when a DDL is encountered.
     * </pre>
     *
     * <code>.binlogdata.OnDDLAction on_ddl = 7;</code>
     */
    int getOnDdlValue();
    /**
     * <pre>
     * OnDdl specifies the action to be taken when a DDL is encountered.
     * </pre>
     *
     * <code>.binlogdata.OnDDLAction on_ddl = 7;</code>
     */
    OnDDLAction getOnDdl();

    /**
     * <pre>
     * Source is an external mysql. This attribute should be set to the username
     * to use in the connection
     * </pre>
     *
     * <code>string external_mysql = 8;</code>
     */
    String getExternalMysql();
    /**
     * <pre>
     * Source is an external mysql. This attribute should be set to the username
     * to use in the connection
     * </pre>
     *
     * <code>string external_mysql = 8;</code>
     */
    com.google.protobuf.ByteString
        getExternalMysqlBytes();

    /**
     * <pre>
     * StopAfterCopy specifies if vreplication should be stopped
     * after copying is done.
     * </pre>
     *
     * <code>bool stop_after_copy = 9;</code>
     */
    boolean getStopAfterCopy();
  }
  /**
   * <pre>
   * BinlogSource specifies the source  and filter parameters for
   * Filtered Replication. KeyRange and Tables are legacy. Filter
   * is the new way to specify the filtering rules.
   * </pre>
   *
   * Protobuf type {@code binlogdata.BinlogSource}
   */
  public  static final class BinlogSource extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.BinlogSource)
      BinlogSourceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BinlogSource.newBuilder() to construct.
    private BinlogSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BinlogSource() {
      keyspace_ = "";
      shard_ = "";
      tabletType_ = 0;
      tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      onDdl_ = 0;
      externalMysql_ = "";
      stopAfterCopy_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BinlogSource(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              keyspace_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              shard_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              tabletType_ = rawValue;
              break;
            }
            case 34: {
              io.vitess.proto.Topodata.KeyRange.Builder subBuilder = null;
              if (keyRange_ != null) {
                subBuilder = keyRange_.toBuilder();
              }
              keyRange_ = input.readMessage(io.vitess.proto.Topodata.KeyRange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keyRange_);
                keyRange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                tables_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              tables_.add(s);
              break;
            }
            case 50: {
              Filter.Builder subBuilder = null;
              if (filter_ != null) {
                subBuilder = filter_.toBuilder();
              }
              filter_ = input.readMessage(Filter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filter_);
                filter_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              onDdl_ = rawValue;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              externalMysql_ = s;
              break;
            }
            case 72: {

              stopAfterCopy_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          tables_ = tables_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_BinlogSource_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_BinlogSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BinlogSource.class, Builder.class);
    }

    private int bitField0_;
    public static final int KEYSPACE_FIELD_NUMBER = 1;
    private volatile Object keyspace_;
    /**
     * <pre>
     * the source keyspace
     * </pre>
     *
     * <code>string keyspace = 1;</code>
     */
    public String getKeyspace() {
      Object ref = keyspace_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        keyspace_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * the source keyspace
     * </pre>
     *
     * <code>string keyspace = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyspaceBytes() {
      Object ref = keyspace_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        keyspace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHARD_FIELD_NUMBER = 2;
    private volatile Object shard_;
    /**
     * <pre>
     * the source shard
     * </pre>
     *
     * <code>string shard = 2;</code>
     */
    public String getShard() {
      Object ref = shard_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        shard_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * the source shard
     * </pre>
     *
     * <code>string shard = 2;</code>
     */
    public com.google.protobuf.ByteString
        getShardBytes() {
      Object ref = shard_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        shard_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLET_TYPE_FIELD_NUMBER = 3;
    private int tabletType_;
    /**
     * <pre>
     * the source tablet type
     * </pre>
     *
     * <code>.topodata.TabletType tablet_type = 3;</code>
     */
    public int getTabletTypeValue() {
      return tabletType_;
    }
    /**
     * <pre>
     * the source tablet type
     * </pre>
     *
     * <code>.topodata.TabletType tablet_type = 3;</code>
     */
    public io.vitess.proto.Topodata.TabletType getTabletType() {
      io.vitess.proto.Topodata.TabletType result = io.vitess.proto.Topodata.TabletType.valueOf(tabletType_);
      return result == null ? io.vitess.proto.Topodata.TabletType.UNRECOGNIZED : result;
    }

    public static final int KEY_RANGE_FIELD_NUMBER = 4;
    private io.vitess.proto.Topodata.KeyRange keyRange_;
    /**
     * <pre>
     * KeyRange is set if the request is for a keyrange
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 4;</code>
     */
    public boolean hasKeyRange() {
      return keyRange_ != null;
    }
    /**
     * <pre>
     * KeyRange is set if the request is for a keyrange
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 4;</code>
     */
    public io.vitess.proto.Topodata.KeyRange getKeyRange() {
      return keyRange_ == null ? io.vitess.proto.Topodata.KeyRange.getDefaultInstance() : keyRange_;
    }
    /**
     * <pre>
     * KeyRange is set if the request is for a keyrange
     * </pre>
     *
     * <code>.topodata.KeyRange key_range = 4;</code>
     */
    public io.vitess.proto.Topodata.KeyRangeOrBuilder getKeyRangeOrBuilder() {
      return getKeyRange();
    }

    public static final int TABLES_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList tables_;
    /**
     * <pre>
     * Tables is set if the request is for a list of tables
     * </pre>
     *
     * <code>repeated string tables = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTablesList() {
      return tables_;
    }
    /**
     * <pre>
     * Tables is set if the request is for a list of tables
     * </pre>
     *
     * <code>repeated string tables = 5;</code>
     */
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <pre>
     * Tables is set if the request is for a list of tables
     * </pre>
     *
     * <code>repeated string tables = 5;</code>
     */
    public String getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <pre>
     * Tables is set if the request is for a list of tables
     * </pre>
     *
     * <code>repeated string tables = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTablesBytes(int index) {
      return tables_.getByteString(index);
    }

    public static final int FILTER_FIELD_NUMBER = 6;
    private Filter filter_;
    /**
     * <pre>
     * Filter is set if we're using the generalized representation
     * for the filter.
     * </pre>
     *
     * <code>.binlogdata.Filter filter = 6;</code>
     */
    public boolean hasFilter() {
      return filter_ != null;
    }
    /**
     * <pre>
     * Filter is set if we're using the generalized representation
     * for the filter.
     * </pre>
     *
     * <code>.binlogdata.Filter filter = 6;</code>
     */
    public Filter getFilter() {
      return filter_ == null ? Filter.getDefaultInstance() : filter_;
    }
    /**
     * <pre>
     * Filter is set if we're using the generalized representation
     * for the filter.
     * </pre>
     *
     * <code>.binlogdata.Filter filter = 6;</code>
     */
    public FilterOrBuilder getFilterOrBuilder() {
      return getFilter();
    }

    public static final int ON_DDL_FIELD_NUMBER = 7;
    private int onDdl_;
    /**
     * <pre>
     * OnDdl specifies the action to be taken when a DDL is encountered.
     * </pre>
     *
     * <code>.binlogdata.OnDDLAction on_ddl = 7;</code>
     */
    public int getOnDdlValue() {
      return onDdl_;
    }
    /**
     * <pre>
     * OnDdl specifies the action to be taken when a DDL is encountered.
     * </pre>
     *
     * <code>.binlogdata.OnDDLAction on_ddl = 7;</code>
     */
    public OnDDLAction getOnDdl() {
      OnDDLAction result = OnDDLAction.valueOf(onDdl_);
      return result == null ? OnDDLAction.UNRECOGNIZED : result;
    }

    public static final int EXTERNAL_MYSQL_FIELD_NUMBER = 8;
    private volatile Object externalMysql_;
    /**
     * <pre>
     * Source is an external mysql. This attribute should be set to the username
     * to use in the connection
     * </pre>
     *
     * <code>string external_mysql = 8;</code>
     */
    public String getExternalMysql() {
      Object ref = externalMysql_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        externalMysql_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Source is an external mysql. This attribute should be set to the username
     * to use in the connection
     * </pre>
     *
     * <code>string external_mysql = 8;</code>
     */
    public com.google.protobuf.ByteString
        getExternalMysqlBytes() {
      Object ref = externalMysql_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        externalMysql_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STOP_AFTER_COPY_FIELD_NUMBER = 9;
    private boolean stopAfterCopy_;
    /**
     * <pre>
     * StopAfterCopy specifies if vreplication should be stopped
     * after copying is done.
     * </pre>
     *
     * <code>bool stop_after_copy = 9;</code>
     */
    public boolean getStopAfterCopy() {
      return stopAfterCopy_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyspaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyspace_);
      }
      if (!getShardBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, shard_);
      }
      if (tabletType_ != io.vitess.proto.Topodata.TabletType.UNKNOWN.getNumber()) {
        output.writeEnum(3, tabletType_);
      }
      if (keyRange_ != null) {
        output.writeMessage(4, getKeyRange());
      }
      for (int i = 0; i < tables_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, tables_.getRaw(i));
      }
      if (filter_ != null) {
        output.writeMessage(6, getFilter());
      }
      if (onDdl_ != OnDDLAction.IGNORE.getNumber()) {
        output.writeEnum(7, onDdl_);
      }
      if (!getExternalMysqlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, externalMysql_);
      }
      if (stopAfterCopy_ != false) {
        output.writeBool(9, stopAfterCopy_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyspaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyspace_);
      }
      if (!getShardBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, shard_);
      }
      if (tabletType_ != io.vitess.proto.Topodata.TabletType.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, tabletType_);
      }
      if (keyRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getKeyRange());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tables_.size(); i++) {
          dataSize += computeStringSizeNoTag(tables_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTablesList().size();
      }
      if (filter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getFilter());
      }
      if (onDdl_ != OnDDLAction.IGNORE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, onDdl_);
      }
      if (!getExternalMysqlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, externalMysql_);
      }
      if (stopAfterCopy_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, stopAfterCopy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BinlogSource)) {
        return super.equals(obj);
      }
      BinlogSource other = (BinlogSource) obj;

      boolean result = true;
      result = result && getKeyspace()
          .equals(other.getKeyspace());
      result = result && getShard()
          .equals(other.getShard());
      result = result && tabletType_ == other.tabletType_;
      result = result && (hasKeyRange() == other.hasKeyRange());
      if (hasKeyRange()) {
        result = result && getKeyRange()
            .equals(other.getKeyRange());
      }
      result = result && getTablesList()
          .equals(other.getTablesList());
      result = result && (hasFilter() == other.hasFilter());
      if (hasFilter()) {
        result = result && getFilter()
            .equals(other.getFilter());
      }
      result = result && onDdl_ == other.onDdl_;
      result = result && getExternalMysql()
          .equals(other.getExternalMysql());
      result = result && (getStopAfterCopy()
          == other.getStopAfterCopy());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEYSPACE_FIELD_NUMBER;
      hash = (53 * hash) + getKeyspace().hashCode();
      hash = (37 * hash) + SHARD_FIELD_NUMBER;
      hash = (53 * hash) + getShard().hashCode();
      hash = (37 * hash) + TABLET_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + tabletType_;
      if (hasKeyRange()) {
        hash = (37 * hash) + KEY_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getKeyRange().hashCode();
      }
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      if (hasFilter()) {
        hash = (37 * hash) + FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getFilter().hashCode();
      }
      hash = (37 * hash) + ON_DDL_FIELD_NUMBER;
      hash = (53 * hash) + onDdl_;
      hash = (37 * hash) + EXTERNAL_MYSQL_FIELD_NUMBER;
      hash = (53 * hash) + getExternalMysql().hashCode();
      hash = (37 * hash) + STOP_AFTER_COPY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getStopAfterCopy());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BinlogSource parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BinlogSource parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BinlogSource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BinlogSource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BinlogSource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BinlogSource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BinlogSource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BinlogSource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BinlogSource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BinlogSource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BinlogSource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BinlogSource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BinlogSource prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BinlogSource specifies the source  and filter parameters for
     * Filtered Replication. KeyRange and Tables are legacy. Filter
     * is the new way to specify the filtering rules.
     * </pre>
     *
     * Protobuf type {@code binlogdata.BinlogSource}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.BinlogSource)
        BinlogSourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_BinlogSource_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_BinlogSource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BinlogSource.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.BinlogSource.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        keyspace_ = "";

        shard_ = "";

        tabletType_ = 0;

        if (keyRangeBuilder_ == null) {
          keyRange_ = null;
        } else {
          keyRange_ = null;
          keyRangeBuilder_ = null;
        }
        tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (filterBuilder_ == null) {
          filter_ = null;
        } else {
          filter_ = null;
          filterBuilder_ = null;
        }
        onDdl_ = 0;

        externalMysql_ = "";

        stopAfterCopy_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_BinlogSource_descriptor;
      }

      public BinlogSource getDefaultInstanceForType() {
        return BinlogSource.getDefaultInstance();
      }

      public BinlogSource build() {
        BinlogSource result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public BinlogSource buildPartial() {
        BinlogSource result = new BinlogSource(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.keyspace_ = keyspace_;
        result.shard_ = shard_;
        result.tabletType_ = tabletType_;
        if (keyRangeBuilder_ == null) {
          result.keyRange_ = keyRange_;
        } else {
          result.keyRange_ = keyRangeBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          tables_ = tables_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.tables_ = tables_;
        if (filterBuilder_ == null) {
          result.filter_ = filter_;
        } else {
          result.filter_ = filterBuilder_.build();
        }
        result.onDdl_ = onDdl_;
        result.externalMysql_ = externalMysql_;
        result.stopAfterCopy_ = stopAfterCopy_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BinlogSource) {
          return mergeFrom((BinlogSource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BinlogSource other) {
        if (other == BinlogSource.getDefaultInstance()) return this;
        if (!other.getKeyspace().isEmpty()) {
          keyspace_ = other.keyspace_;
          onChanged();
        }
        if (!other.getShard().isEmpty()) {
          shard_ = other.shard_;
          onChanged();
        }
        if (other.tabletType_ != 0) {
          setTabletTypeValue(other.getTabletTypeValue());
        }
        if (other.hasKeyRange()) {
          mergeKeyRange(other.getKeyRange());
        }
        if (!other.tables_.isEmpty()) {
          if (tables_.isEmpty()) {
            tables_ = other.tables_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureTablesIsMutable();
            tables_.addAll(other.tables_);
          }
          onChanged();
        }
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        if (other.onDdl_ != 0) {
          setOnDdlValue(other.getOnDdlValue());
        }
        if (!other.getExternalMysql().isEmpty()) {
          externalMysql_ = other.externalMysql_;
          onChanged();
        }
        if (other.getStopAfterCopy() != false) {
          setStopAfterCopy(other.getStopAfterCopy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BinlogSource parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BinlogSource) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object keyspace_ = "";
      /**
       * <pre>
       * the source keyspace
       * </pre>
       *
       * <code>string keyspace = 1;</code>
       */
      public String getKeyspace() {
        Object ref = keyspace_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          keyspace_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * the source keyspace
       * </pre>
       *
       * <code>string keyspace = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyspaceBytes() {
        Object ref = keyspace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          keyspace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * the source keyspace
       * </pre>
       *
       * <code>string keyspace = 1;</code>
       */
      public Builder setKeyspace(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyspace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the source keyspace
       * </pre>
       *
       * <code>string keyspace = 1;</code>
       */
      public Builder clearKeyspace() {
        
        keyspace_ = getDefaultInstance().getKeyspace();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the source keyspace
       * </pre>
       *
       * <code>string keyspace = 1;</code>
       */
      public Builder setKeyspaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyspace_ = value;
        onChanged();
        return this;
      }

      private Object shard_ = "";
      /**
       * <pre>
       * the source shard
       * </pre>
       *
       * <code>string shard = 2;</code>
       */
      public String getShard() {
        Object ref = shard_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          shard_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * the source shard
       * </pre>
       *
       * <code>string shard = 2;</code>
       */
      public com.google.protobuf.ByteString
          getShardBytes() {
        Object ref = shard_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          shard_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * the source shard
       * </pre>
       *
       * <code>string shard = 2;</code>
       */
      public Builder setShard(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        shard_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the source shard
       * </pre>
       *
       * <code>string shard = 2;</code>
       */
      public Builder clearShard() {
        
        shard_ = getDefaultInstance().getShard();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the source shard
       * </pre>
       *
       * <code>string shard = 2;</code>
       */
      public Builder setShardBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        shard_ = value;
        onChanged();
        return this;
      }

      private int tabletType_ = 0;
      /**
       * <pre>
       * the source tablet type
       * </pre>
       *
       * <code>.topodata.TabletType tablet_type = 3;</code>
       */
      public int getTabletTypeValue() {
        return tabletType_;
      }
      /**
       * <pre>
       * the source tablet type
       * </pre>
       *
       * <code>.topodata.TabletType tablet_type = 3;</code>
       */
      public Builder setTabletTypeValue(int value) {
        tabletType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the source tablet type
       * </pre>
       *
       * <code>.topodata.TabletType tablet_type = 3;</code>
       */
      public io.vitess.proto.Topodata.TabletType getTabletType() {
        io.vitess.proto.Topodata.TabletType result = io.vitess.proto.Topodata.TabletType.valueOf(tabletType_);
        return result == null ? io.vitess.proto.Topodata.TabletType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * the source tablet type
       * </pre>
       *
       * <code>.topodata.TabletType tablet_type = 3;</code>
       */
      public Builder setTabletType(io.vitess.proto.Topodata.TabletType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        tabletType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the source tablet type
       * </pre>
       *
       * <code>.topodata.TabletType tablet_type = 3;</code>
       */
      public Builder clearTabletType() {
        
        tabletType_ = 0;
        onChanged();
        return this;
      }

      private io.vitess.proto.Topodata.KeyRange keyRange_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Topodata.KeyRange, io.vitess.proto.Topodata.KeyRange.Builder, io.vitess.proto.Topodata.KeyRangeOrBuilder> keyRangeBuilder_;
      /**
       * <pre>
       * KeyRange is set if the request is for a keyrange
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 4;</code>
       */
      public boolean hasKeyRange() {
        return keyRangeBuilder_ != null || keyRange_ != null;
      }
      /**
       * <pre>
       * KeyRange is set if the request is for a keyrange
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 4;</code>
       */
      public io.vitess.proto.Topodata.KeyRange getKeyRange() {
        if (keyRangeBuilder_ == null) {
          return keyRange_ == null ? io.vitess.proto.Topodata.KeyRange.getDefaultInstance() : keyRange_;
        } else {
          return keyRangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * KeyRange is set if the request is for a keyrange
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 4;</code>
       */
      public Builder setKeyRange(io.vitess.proto.Topodata.KeyRange value) {
        if (keyRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyRange_ = value;
          onChanged();
        } else {
          keyRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * KeyRange is set if the request is for a keyrange
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 4;</code>
       */
      public Builder setKeyRange(
          io.vitess.proto.Topodata.KeyRange.Builder builderForValue) {
        if (keyRangeBuilder_ == null) {
          keyRange_ = builderForValue.build();
          onChanged();
        } else {
          keyRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * KeyRange is set if the request is for a keyrange
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 4;</code>
       */
      public Builder mergeKeyRange(io.vitess.proto.Topodata.KeyRange value) {
        if (keyRangeBuilder_ == null) {
          if (keyRange_ != null) {
            keyRange_ =
              io.vitess.proto.Topodata.KeyRange.newBuilder(keyRange_).mergeFrom(value).buildPartial();
          } else {
            keyRange_ = value;
          }
          onChanged();
        } else {
          keyRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * KeyRange is set if the request is for a keyrange
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 4;</code>
       */
      public Builder clearKeyRange() {
        if (keyRangeBuilder_ == null) {
          keyRange_ = null;
          onChanged();
        } else {
          keyRange_ = null;
          keyRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * KeyRange is set if the request is for a keyrange
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 4;</code>
       */
      public io.vitess.proto.Topodata.KeyRange.Builder getKeyRangeBuilder() {
        
        onChanged();
        return getKeyRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * KeyRange is set if the request is for a keyrange
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 4;</code>
       */
      public io.vitess.proto.Topodata.KeyRangeOrBuilder getKeyRangeOrBuilder() {
        if (keyRangeBuilder_ != null) {
          return keyRangeBuilder_.getMessageOrBuilder();
        } else {
          return keyRange_ == null ?
              io.vitess.proto.Topodata.KeyRange.getDefaultInstance() : keyRange_;
        }
      }
      /**
       * <pre>
       * KeyRange is set if the request is for a keyrange
       * </pre>
       *
       * <code>.topodata.KeyRange key_range = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Topodata.KeyRange, io.vitess.proto.Topodata.KeyRange.Builder, io.vitess.proto.Topodata.KeyRangeOrBuilder> 
          getKeyRangeFieldBuilder() {
        if (keyRangeBuilder_ == null) {
          keyRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Topodata.KeyRange, io.vitess.proto.Topodata.KeyRange.Builder, io.vitess.proto.Topodata.KeyRangeOrBuilder>(
                  getKeyRange(),
                  getParentForChildren(),
                  isClean());
          keyRange_ = null;
        }
        return keyRangeBuilder_;
      }

      private com.google.protobuf.LazyStringList tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          tables_ = new com.google.protobuf.LazyStringArrayList(tables_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * Tables is set if the request is for a list of tables
       * </pre>
       *
       * <code>repeated string tables = 5;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTablesList() {
        return tables_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Tables is set if the request is for a list of tables
       * </pre>
       *
       * <code>repeated string tables = 5;</code>
       */
      public int getTablesCount() {
        return tables_.size();
      }
      /**
       * <pre>
       * Tables is set if the request is for a list of tables
       * </pre>
       *
       * <code>repeated string tables = 5;</code>
       */
      public String getTables(int index) {
        return tables_.get(index);
      }
      /**
       * <pre>
       * Tables is set if the request is for a list of tables
       * </pre>
       *
       * <code>repeated string tables = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTablesBytes(int index) {
        return tables_.getByteString(index);
      }
      /**
       * <pre>
       * Tables is set if the request is for a list of tables
       * </pre>
       *
       * <code>repeated string tables = 5;</code>
       */
      public Builder setTables(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTablesIsMutable();
        tables_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables is set if the request is for a list of tables
       * </pre>
       *
       * <code>repeated string tables = 5;</code>
       */
      public Builder addTables(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTablesIsMutable();
        tables_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables is set if the request is for a list of tables
       * </pre>
       *
       * <code>repeated string tables = 5;</code>
       */
      public Builder addAllTables(
          Iterable<String> values) {
        ensureTablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tables_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables is set if the request is for a list of tables
       * </pre>
       *
       * <code>repeated string tables = 5;</code>
       */
      public Builder clearTables() {
        tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables is set if the request is for a list of tables
       * </pre>
       *
       * <code>repeated string tables = 5;</code>
       */
      public Builder addTablesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTablesIsMutable();
        tables_.add(value);
        onChanged();
        return this;
      }

      private Filter filter_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          Filter, Filter.Builder, FilterOrBuilder> filterBuilder_;
      /**
       * <pre>
       * Filter is set if we're using the generalized representation
       * for the filter.
       * </pre>
       *
       * <code>.binlogdata.Filter filter = 6;</code>
       */
      public boolean hasFilter() {
        return filterBuilder_ != null || filter_ != null;
      }
      /**
       * <pre>
       * Filter is set if we're using the generalized representation
       * for the filter.
       * </pre>
       *
       * <code>.binlogdata.Filter filter = 6;</code>
       */
      public Filter getFilter() {
        if (filterBuilder_ == null) {
          return filter_ == null ? Filter.getDefaultInstance() : filter_;
        } else {
          return filterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Filter is set if we're using the generalized representation
       * for the filter.
       * </pre>
       *
       * <code>.binlogdata.Filter filter = 6;</code>
       */
      public Builder setFilter(Filter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filter_ = value;
          onChanged();
        } else {
          filterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Filter is set if we're using the generalized representation
       * for the filter.
       * </pre>
       *
       * <code>.binlogdata.Filter filter = 6;</code>
       */
      public Builder setFilter(
          Filter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          filter_ = builderForValue.build();
          onChanged();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Filter is set if we're using the generalized representation
       * for the filter.
       * </pre>
       *
       * <code>.binlogdata.Filter filter = 6;</code>
       */
      public Builder mergeFilter(Filter value) {
        if (filterBuilder_ == null) {
          if (filter_ != null) {
            filter_ =
              Filter.newBuilder(filter_).mergeFrom(value).buildPartial();
          } else {
            filter_ = value;
          }
          onChanged();
        } else {
          filterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Filter is set if we're using the generalized representation
       * for the filter.
       * </pre>
       *
       * <code>.binlogdata.Filter filter = 6;</code>
       */
      public Builder clearFilter() {
        if (filterBuilder_ == null) {
          filter_ = null;
          onChanged();
        } else {
          filter_ = null;
          filterBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Filter is set if we're using the generalized representation
       * for the filter.
       * </pre>
       *
       * <code>.binlogdata.Filter filter = 6;</code>
       */
      public Filter.Builder getFilterBuilder() {
        
        onChanged();
        return getFilterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Filter is set if we're using the generalized representation
       * for the filter.
       * </pre>
       *
       * <code>.binlogdata.Filter filter = 6;</code>
       */
      public FilterOrBuilder getFilterOrBuilder() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          return filter_ == null ?
              Filter.getDefaultInstance() : filter_;
        }
      }
      /**
       * <pre>
       * Filter is set if we're using the generalized representation
       * for the filter.
       * </pre>
       *
       * <code>.binlogdata.Filter filter = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Filter, Filter.Builder, FilterOrBuilder>
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Filter, Filter.Builder, FilterOrBuilder>(
                  getFilter(),
                  getParentForChildren(),
                  isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }

      private int onDdl_ = 0;
      /**
       * <pre>
       * OnDdl specifies the action to be taken when a DDL is encountered.
       * </pre>
       *
       * <code>.binlogdata.OnDDLAction on_ddl = 7;</code>
       */
      public int getOnDdlValue() {
        return onDdl_;
      }
      /**
       * <pre>
       * OnDdl specifies the action to be taken when a DDL is encountered.
       * </pre>
       *
       * <code>.binlogdata.OnDDLAction on_ddl = 7;</code>
       */
      public Builder setOnDdlValue(int value) {
        onDdl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OnDdl specifies the action to be taken when a DDL is encountered.
       * </pre>
       *
       * <code>.binlogdata.OnDDLAction on_ddl = 7;</code>
       */
      public OnDDLAction getOnDdl() {
        OnDDLAction result = OnDDLAction.valueOf(onDdl_);
        return result == null ? OnDDLAction.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * OnDdl specifies the action to be taken when a DDL is encountered.
       * </pre>
       *
       * <code>.binlogdata.OnDDLAction on_ddl = 7;</code>
       */
      public Builder setOnDdl(OnDDLAction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        onDdl_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OnDdl specifies the action to be taken when a DDL is encountered.
       * </pre>
       *
       * <code>.binlogdata.OnDDLAction on_ddl = 7;</code>
       */
      public Builder clearOnDdl() {
        
        onDdl_ = 0;
        onChanged();
        return this;
      }

      private Object externalMysql_ = "";
      /**
       * <pre>
       * Source is an external mysql. This attribute should be set to the username
       * to use in the connection
       * </pre>
       *
       * <code>string external_mysql = 8;</code>
       */
      public String getExternalMysql() {
        Object ref = externalMysql_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          externalMysql_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Source is an external mysql. This attribute should be set to the username
       * to use in the connection
       * </pre>
       *
       * <code>string external_mysql = 8;</code>
       */
      public com.google.protobuf.ByteString
          getExternalMysqlBytes() {
        Object ref = externalMysql_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          externalMysql_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Source is an external mysql. This attribute should be set to the username
       * to use in the connection
       * </pre>
       *
       * <code>string external_mysql = 8;</code>
       */
      public Builder setExternalMysql(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        externalMysql_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Source is an external mysql. This attribute should be set to the username
       * to use in the connection
       * </pre>
       *
       * <code>string external_mysql = 8;</code>
       */
      public Builder clearExternalMysql() {
        
        externalMysql_ = getDefaultInstance().getExternalMysql();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Source is an external mysql. This attribute should be set to the username
       * to use in the connection
       * </pre>
       *
       * <code>string external_mysql = 8;</code>
       */
      public Builder setExternalMysqlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        externalMysql_ = value;
        onChanged();
        return this;
      }

      private boolean stopAfterCopy_ ;
      /**
       * <pre>
       * StopAfterCopy specifies if vreplication should be stopped
       * after copying is done.
       * </pre>
       *
       * <code>bool stop_after_copy = 9;</code>
       */
      public boolean getStopAfterCopy() {
        return stopAfterCopy_;
      }
      /**
       * <pre>
       * StopAfterCopy specifies if vreplication should be stopped
       * after copying is done.
       * </pre>
       *
       * <code>bool stop_after_copy = 9;</code>
       */
      public Builder setStopAfterCopy(boolean value) {
        
        stopAfterCopy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * StopAfterCopy specifies if vreplication should be stopped
       * after copying is done.
       * </pre>
       *
       * <code>bool stop_after_copy = 9;</code>
       */
      public Builder clearStopAfterCopy() {
        
        stopAfterCopy_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.BinlogSource)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.BinlogSource)
    private static final BinlogSource DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinlogSource();
    }

    public static BinlogSource getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BinlogSource>
        PARSER = new com.google.protobuf.AbstractParser<BinlogSource>() {
      public BinlogSource parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BinlogSource(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BinlogSource> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BinlogSource> getParserForType() {
      return PARSER;
    }

    public BinlogSource getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RowChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.RowChange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.query.Row before = 1;</code>
     */
    boolean hasBefore();
    /**
     * <code>.query.Row before = 1;</code>
     */
    io.vitess.proto.Query.Row getBefore();
    /**
     * <code>.query.Row before = 1;</code>
     */
    io.vitess.proto.Query.RowOrBuilder getBeforeOrBuilder();

    /**
     * <code>.query.Row after = 2;</code>
     */
    boolean hasAfter();
    /**
     * <code>.query.Row after = 2;</code>
     */
    io.vitess.proto.Query.Row getAfter();
    /**
     * <code>.query.Row after = 2;</code>
     */
    io.vitess.proto.Query.RowOrBuilder getAfterOrBuilder();
  }
  /**
   * <pre>
   * RowChange represents one row change.
   * If Before is set and not After, it's a delete.
   * If After is set and not Before, it's an insert.
   * If both are set, it's an update.
   * </pre>
   *
   * Protobuf type {@code binlogdata.RowChange}
   */
  public  static final class RowChange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.RowChange)
      RowChangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RowChange.newBuilder() to construct.
    private RowChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RowChange() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RowChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.vitess.proto.Query.Row.Builder subBuilder = null;
              if (before_ != null) {
                subBuilder = before_.toBuilder();
              }
              before_ = input.readMessage(io.vitess.proto.Query.Row.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(before_);
                before_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.vitess.proto.Query.Row.Builder subBuilder = null;
              if (after_ != null) {
                subBuilder = after_.toBuilder();
              }
              after_ = input.readMessage(io.vitess.proto.Query.Row.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(after_);
                after_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_RowChange_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_RowChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RowChange.class, Builder.class);
    }

    public static final int BEFORE_FIELD_NUMBER = 1;
    private io.vitess.proto.Query.Row before_;
    /**
     * <code>.query.Row before = 1;</code>
     */
    public boolean hasBefore() {
      return before_ != null;
    }
    /**
     * <code>.query.Row before = 1;</code>
     */
    public io.vitess.proto.Query.Row getBefore() {
      return before_ == null ? io.vitess.proto.Query.Row.getDefaultInstance() : before_;
    }
    /**
     * <code>.query.Row before = 1;</code>
     */
    public io.vitess.proto.Query.RowOrBuilder getBeforeOrBuilder() {
      return getBefore();
    }

    public static final int AFTER_FIELD_NUMBER = 2;
    private io.vitess.proto.Query.Row after_;
    /**
     * <code>.query.Row after = 2;</code>
     */
    public boolean hasAfter() {
      return after_ != null;
    }
    /**
     * <code>.query.Row after = 2;</code>
     */
    public io.vitess.proto.Query.Row getAfter() {
      return after_ == null ? io.vitess.proto.Query.Row.getDefaultInstance() : after_;
    }
    /**
     * <code>.query.Row after = 2;</code>
     */
    public io.vitess.proto.Query.RowOrBuilder getAfterOrBuilder() {
      return getAfter();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (before_ != null) {
        output.writeMessage(1, getBefore());
      }
      if (after_ != null) {
        output.writeMessage(2, getAfter());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (before_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBefore());
      }
      if (after_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAfter());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RowChange)) {
        return super.equals(obj);
      }
      RowChange other = (RowChange) obj;

      boolean result = true;
      result = result && (hasBefore() == other.hasBefore());
      if (hasBefore()) {
        result = result && getBefore()
            .equals(other.getBefore());
      }
      result = result && (hasAfter() == other.hasAfter());
      if (hasAfter()) {
        result = result && getAfter()
            .equals(other.getAfter());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBefore()) {
        hash = (37 * hash) + BEFORE_FIELD_NUMBER;
        hash = (53 * hash) + getBefore().hashCode();
      }
      if (hasAfter()) {
        hash = (37 * hash) + AFTER_FIELD_NUMBER;
        hash = (53 * hash) + getAfter().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RowChange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowChange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RowChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RowChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RowChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RowChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RowChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RowChange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * RowChange represents one row change.
     * If Before is set and not After, it's a delete.
     * If After is set and not Before, it's an insert.
     * If both are set, it's an update.
     * </pre>
     *
     * Protobuf type {@code binlogdata.RowChange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.RowChange)
        RowChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_RowChange_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_RowChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RowChange.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.RowChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (beforeBuilder_ == null) {
          before_ = null;
        } else {
          before_ = null;
          beforeBuilder_ = null;
        }
        if (afterBuilder_ == null) {
          after_ = null;
        } else {
          after_ = null;
          afterBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_RowChange_descriptor;
      }

      public RowChange getDefaultInstanceForType() {
        return RowChange.getDefaultInstance();
      }

      public RowChange build() {
        RowChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RowChange buildPartial() {
        RowChange result = new RowChange(this);
        if (beforeBuilder_ == null) {
          result.before_ = before_;
        } else {
          result.before_ = beforeBuilder_.build();
        }
        if (afterBuilder_ == null) {
          result.after_ = after_;
        } else {
          result.after_ = afterBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RowChange) {
          return mergeFrom((RowChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RowChange other) {
        if (other == RowChange.getDefaultInstance()) return this;
        if (other.hasBefore()) {
          mergeBefore(other.getBefore());
        }
        if (other.hasAfter()) {
          mergeAfter(other.getAfter());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RowChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RowChange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.vitess.proto.Query.Row before_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> beforeBuilder_;
      /**
       * <code>.query.Row before = 1;</code>
       */
      public boolean hasBefore() {
        return beforeBuilder_ != null || before_ != null;
      }
      /**
       * <code>.query.Row before = 1;</code>
       */
      public io.vitess.proto.Query.Row getBefore() {
        if (beforeBuilder_ == null) {
          return before_ == null ? io.vitess.proto.Query.Row.getDefaultInstance() : before_;
        } else {
          return beforeBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.Row before = 1;</code>
       */
      public Builder setBefore(io.vitess.proto.Query.Row value) {
        if (beforeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          before_ = value;
          onChanged();
        } else {
          beforeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.Row before = 1;</code>
       */
      public Builder setBefore(
          io.vitess.proto.Query.Row.Builder builderForValue) {
        if (beforeBuilder_ == null) {
          before_ = builderForValue.build();
          onChanged();
        } else {
          beforeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.Row before = 1;</code>
       */
      public Builder mergeBefore(io.vitess.proto.Query.Row value) {
        if (beforeBuilder_ == null) {
          if (before_ != null) {
            before_ =
              io.vitess.proto.Query.Row.newBuilder(before_).mergeFrom(value).buildPartial();
          } else {
            before_ = value;
          }
          onChanged();
        } else {
          beforeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.Row before = 1;</code>
       */
      public Builder clearBefore() {
        if (beforeBuilder_ == null) {
          before_ = null;
          onChanged();
        } else {
          before_ = null;
          beforeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.Row before = 1;</code>
       */
      public io.vitess.proto.Query.Row.Builder getBeforeBuilder() {
        
        onChanged();
        return getBeforeFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.Row before = 1;</code>
       */
      public io.vitess.proto.Query.RowOrBuilder getBeforeOrBuilder() {
        if (beforeBuilder_ != null) {
          return beforeBuilder_.getMessageOrBuilder();
        } else {
          return before_ == null ?
              io.vitess.proto.Query.Row.getDefaultInstance() : before_;
        }
      }
      /**
       * <code>.query.Row before = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> 
          getBeforeFieldBuilder() {
        if (beforeBuilder_ == null) {
          beforeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder>(
                  getBefore(),
                  getParentForChildren(),
                  isClean());
          before_ = null;
        }
        return beforeBuilder_;
      }

      private io.vitess.proto.Query.Row after_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> afterBuilder_;
      /**
       * <code>.query.Row after = 2;</code>
       */
      public boolean hasAfter() {
        return afterBuilder_ != null || after_ != null;
      }
      /**
       * <code>.query.Row after = 2;</code>
       */
      public io.vitess.proto.Query.Row getAfter() {
        if (afterBuilder_ == null) {
          return after_ == null ? io.vitess.proto.Query.Row.getDefaultInstance() : after_;
        } else {
          return afterBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.Row after = 2;</code>
       */
      public Builder setAfter(io.vitess.proto.Query.Row value) {
        if (afterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          after_ = value;
          onChanged();
        } else {
          afterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.Row after = 2;</code>
       */
      public Builder setAfter(
          io.vitess.proto.Query.Row.Builder builderForValue) {
        if (afterBuilder_ == null) {
          after_ = builderForValue.build();
          onChanged();
        } else {
          afterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.Row after = 2;</code>
       */
      public Builder mergeAfter(io.vitess.proto.Query.Row value) {
        if (afterBuilder_ == null) {
          if (after_ != null) {
            after_ =
              io.vitess.proto.Query.Row.newBuilder(after_).mergeFrom(value).buildPartial();
          } else {
            after_ = value;
          }
          onChanged();
        } else {
          afterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.Row after = 2;</code>
       */
      public Builder clearAfter() {
        if (afterBuilder_ == null) {
          after_ = null;
          onChanged();
        } else {
          after_ = null;
          afterBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.Row after = 2;</code>
       */
      public io.vitess.proto.Query.Row.Builder getAfterBuilder() {
        
        onChanged();
        return getAfterFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.Row after = 2;</code>
       */
      public io.vitess.proto.Query.RowOrBuilder getAfterOrBuilder() {
        if (afterBuilder_ != null) {
          return afterBuilder_.getMessageOrBuilder();
        } else {
          return after_ == null ?
              io.vitess.proto.Query.Row.getDefaultInstance() : after_;
        }
      }
      /**
       * <code>.query.Row after = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> 
          getAfterFieldBuilder() {
        if (afterBuilder_ == null) {
          afterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder>(
                  getAfter(),
                  getParentForChildren(),
                  isClean());
          after_ = null;
        }
        return afterBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.RowChange)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.RowChange)
    private static final RowChange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RowChange();
    }

    public static RowChange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RowChange>
        PARSER = new com.google.protobuf.AbstractParser<RowChange>() {
      public RowChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowChange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RowChange> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RowChange> getParserForType() {
      return PARSER;
    }

    public RowChange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RowEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.RowEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string table_name = 1;</code>
     */
    String getTableName();
    /**
     * <code>string table_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getTableNameBytes();

    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    java.util.List<RowChange>
        getRowChangesList();
    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    RowChange getRowChanges(int index);
    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    int getRowChangesCount();
    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    java.util.List<? extends RowChangeOrBuilder>
        getRowChangesOrBuilderList();
    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    RowChangeOrBuilder getRowChangesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * RowEvent represent row events for one table.
   * </pre>
   *
   * Protobuf type {@code binlogdata.RowEvent}
   */
  public  static final class RowEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.RowEvent)
      RowEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RowEvent.newBuilder() to construct.
    private RowEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RowEvent() {
      tableName_ = "";
      rowChanges_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RowEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              tableName_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                rowChanges_ = new java.util.ArrayList<RowChange>();
                mutable_bitField0_ |= 0x00000002;
              }
              rowChanges_.add(
                  input.readMessage(RowChange.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          rowChanges_ = java.util.Collections.unmodifiableList(rowChanges_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_RowEvent_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_RowEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RowEvent.class, Builder.class);
    }

    private int bitField0_;
    public static final int TABLE_NAME_FIELD_NUMBER = 1;
    private volatile Object tableName_;
    /**
     * <code>string table_name = 1;</code>
     */
    public String getTableName() {
      Object ref = tableName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      }
    }
    /**
     * <code>string table_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROW_CHANGES_FIELD_NUMBER = 2;
    private java.util.List<RowChange> rowChanges_;
    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    public java.util.List<RowChange> getRowChangesList() {
      return rowChanges_;
    }
    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    public java.util.List<? extends RowChangeOrBuilder>
        getRowChangesOrBuilderList() {
      return rowChanges_;
    }
    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    public int getRowChangesCount() {
      return rowChanges_.size();
    }
    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    public RowChange getRowChanges(int index) {
      return rowChanges_.get(index);
    }
    /**
     * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
     */
    public RowChangeOrBuilder getRowChangesOrBuilder(
        int index) {
      return rowChanges_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTableNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
      }
      for (int i = 0; i < rowChanges_.size(); i++) {
        output.writeMessage(2, rowChanges_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTableNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
      }
      for (int i = 0; i < rowChanges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rowChanges_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RowEvent)) {
        return super.equals(obj);
      }
      RowEvent other = (RowEvent) obj;

      boolean result = true;
      result = result && getTableName()
          .equals(other.getTableName());
      result = result && getRowChangesList()
          .equals(other.getRowChangesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTableName().hashCode();
      if (getRowChangesCount() > 0) {
        hash = (37 * hash) + ROW_CHANGES_FIELD_NUMBER;
        hash = (53 * hash) + getRowChangesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RowEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RowEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RowEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RowEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RowEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RowEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RowEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RowEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RowEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * RowEvent represent row events for one table.
     * </pre>
     *
     * Protobuf type {@code binlogdata.RowEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.RowEvent)
        RowEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_RowEvent_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_RowEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RowEvent.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.RowEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowChangesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        tableName_ = "";

        if (rowChangesBuilder_ == null) {
          rowChanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          rowChangesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_RowEvent_descriptor;
      }

      public RowEvent getDefaultInstanceForType() {
        return RowEvent.getDefaultInstance();
      }

      public RowEvent build() {
        RowEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RowEvent buildPartial() {
        RowEvent result = new RowEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.tableName_ = tableName_;
        if (rowChangesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            rowChanges_ = java.util.Collections.unmodifiableList(rowChanges_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.rowChanges_ = rowChanges_;
        } else {
          result.rowChanges_ = rowChangesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RowEvent) {
          return mergeFrom((RowEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RowEvent other) {
        if (other == RowEvent.getDefaultInstance()) return this;
        if (!other.getTableName().isEmpty()) {
          tableName_ = other.tableName_;
          onChanged();
        }
        if (rowChangesBuilder_ == null) {
          if (!other.rowChanges_.isEmpty()) {
            if (rowChanges_.isEmpty()) {
              rowChanges_ = other.rowChanges_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRowChangesIsMutable();
              rowChanges_.addAll(other.rowChanges_);
            }
            onChanged();
          }
        } else {
          if (!other.rowChanges_.isEmpty()) {
            if (rowChangesBuilder_.isEmpty()) {
              rowChangesBuilder_.dispose();
              rowChangesBuilder_ = null;
              rowChanges_ = other.rowChanges_;
              bitField0_ = (bitField0_ & ~0x00000002);
              rowChangesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowChangesFieldBuilder() : null;
            } else {
              rowChangesBuilder_.addAllMessages(other.rowChanges_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RowEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RowEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object tableName_ = "";
      /**
       * <code>string table_name = 1;</code>
       */
      public String getTableName() {
        Object ref = tableName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          tableName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTableNameBytes() {
        Object ref = tableName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          tableName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public Builder setTableName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tableName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public Builder clearTableName() {
        
        tableName_ = getDefaultInstance().getTableName();
        onChanged();
        return this;
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public Builder setTableNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tableName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<RowChange> rowChanges_ =
        java.util.Collections.emptyList();
      private void ensureRowChangesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rowChanges_ = new java.util.ArrayList<RowChange>(rowChanges_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RowChange, RowChange.Builder, RowChangeOrBuilder> rowChangesBuilder_;

      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public java.util.List<RowChange> getRowChangesList() {
        if (rowChangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rowChanges_);
        } else {
          return rowChangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public int getRowChangesCount() {
        if (rowChangesBuilder_ == null) {
          return rowChanges_.size();
        } else {
          return rowChangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public RowChange getRowChanges(int index) {
        if (rowChangesBuilder_ == null) {
          return rowChanges_.get(index);
        } else {
          return rowChangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public Builder setRowChanges(
          int index, RowChange value) {
        if (rowChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowChangesIsMutable();
          rowChanges_.set(index, value);
          onChanged();
        } else {
          rowChangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public Builder setRowChanges(
          int index, RowChange.Builder builderForValue) {
        if (rowChangesBuilder_ == null) {
          ensureRowChangesIsMutable();
          rowChanges_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowChangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public Builder addRowChanges(RowChange value) {
        if (rowChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowChangesIsMutable();
          rowChanges_.add(value);
          onChanged();
        } else {
          rowChangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public Builder addRowChanges(
          int index, RowChange value) {
        if (rowChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowChangesIsMutable();
          rowChanges_.add(index, value);
          onChanged();
        } else {
          rowChangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public Builder addRowChanges(
          RowChange.Builder builderForValue) {
        if (rowChangesBuilder_ == null) {
          ensureRowChangesIsMutable();
          rowChanges_.add(builderForValue.build());
          onChanged();
        } else {
          rowChangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public Builder addRowChanges(
          int index, RowChange.Builder builderForValue) {
        if (rowChangesBuilder_ == null) {
          ensureRowChangesIsMutable();
          rowChanges_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowChangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public Builder addAllRowChanges(
          Iterable<? extends RowChange> values) {
        if (rowChangesBuilder_ == null) {
          ensureRowChangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rowChanges_);
          onChanged();
        } else {
          rowChangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public Builder clearRowChanges() {
        if (rowChangesBuilder_ == null) {
          rowChanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          rowChangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public Builder removeRowChanges(int index) {
        if (rowChangesBuilder_ == null) {
          ensureRowChangesIsMutable();
          rowChanges_.remove(index);
          onChanged();
        } else {
          rowChangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public RowChange.Builder getRowChangesBuilder(
          int index) {
        return getRowChangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public RowChangeOrBuilder getRowChangesOrBuilder(
          int index) {
        if (rowChangesBuilder_ == null) {
          return rowChanges_.get(index);  } else {
          return rowChangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public java.util.List<? extends RowChangeOrBuilder>
           getRowChangesOrBuilderList() {
        if (rowChangesBuilder_ != null) {
          return rowChangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rowChanges_);
        }
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public RowChange.Builder addRowChangesBuilder() {
        return getRowChangesFieldBuilder().addBuilder(
            RowChange.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public RowChange.Builder addRowChangesBuilder(
          int index) {
        return getRowChangesFieldBuilder().addBuilder(
            index, RowChange.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.RowChange row_changes = 2;</code>
       */
      public java.util.List<RowChange.Builder>
           getRowChangesBuilderList() {
        return getRowChangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RowChange, RowChange.Builder, RowChangeOrBuilder>
          getRowChangesFieldBuilder() {
        if (rowChangesBuilder_ == null) {
          rowChangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RowChange, RowChange.Builder, RowChangeOrBuilder>(
                  rowChanges_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          rowChanges_ = null;
        }
        return rowChangesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.RowEvent)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.RowEvent)
    private static final RowEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RowEvent();
    }

    public static RowEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RowEvent>
        PARSER = new com.google.protobuf.AbstractParser<RowEvent>() {
      public RowEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RowEvent> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RowEvent> getParserForType() {
      return PARSER;
    }

    public RowEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FieldEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.FieldEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string table_name = 1;</code>
     */
    String getTableName();
    /**
     * <code>string table_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getTableNameBytes();

    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    java.util.List<io.vitess.proto.Query.Field> 
        getFieldsList();
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    io.vitess.proto.Query.Field getFields(int index);
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * FieldEvent represents the field info for a table.
   * </pre>
   *
   * Protobuf type {@code binlogdata.FieldEvent}
   */
  public  static final class FieldEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.FieldEvent)
      FieldEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FieldEvent.newBuilder() to construct.
    private FieldEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FieldEvent() {
      tableName_ = "";
      fields_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FieldEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              tableName_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>();
                mutable_bitField0_ |= 0x00000002;
              }
              fields_.add(
                  input.readMessage(io.vitess.proto.Query.Field.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_FieldEvent_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_FieldEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FieldEvent.class, Builder.class);
    }

    private int bitField0_;
    public static final int TABLE_NAME_FIELD_NUMBER = 1;
    private volatile Object tableName_;
    /**
     * <code>string table_name = 1;</code>
     */
    public String getTableName() {
      Object ref = tableName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      }
    }
    /**
     * <code>string table_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 2;
    private java.util.List<io.vitess.proto.Query.Field> fields_;
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public java.util.List<io.vitess.proto.Query.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public io.vitess.proto.Query.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTableNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(2, fields_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTableNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fields_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FieldEvent)) {
        return super.equals(obj);
      }
      FieldEvent other = (FieldEvent) obj;

      boolean result = true;
      result = result && getTableName()
          .equals(other.getTableName());
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTableName().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FieldEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FieldEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FieldEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FieldEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FieldEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FieldEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FieldEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FieldEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static FieldEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static FieldEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FieldEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FieldEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FieldEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * FieldEvent represents the field info for a table.
     * </pre>
     *
     * Protobuf type {@code binlogdata.FieldEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.FieldEvent)
        FieldEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_FieldEvent_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_FieldEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FieldEvent.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.FieldEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        tableName_ = "";

        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_FieldEvent_descriptor;
      }

      public FieldEvent getDefaultInstanceForType() {
        return FieldEvent.getDefaultInstance();
      }

      public FieldEvent build() {
        FieldEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FieldEvent buildPartial() {
        FieldEvent result = new FieldEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.tableName_ = tableName_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FieldEvent) {
          return mergeFrom((FieldEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FieldEvent other) {
        if (other == FieldEvent.getDefaultInstance()) return this;
        if (!other.getTableName().isEmpty()) {
          tableName_ = other.tableName_;
          onChanged();
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FieldEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FieldEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object tableName_ = "";
      /**
       * <code>string table_name = 1;</code>
       */
      public String getTableName() {
        Object ref = tableName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          tableName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTableNameBytes() {
        Object ref = tableName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          tableName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public Builder setTableName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tableName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public Builder clearTableName() {
        
        tableName_ = getDefaultInstance().getTableName();
        onChanged();
        return this;
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public Builder setTableNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tableName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<io.vitess.proto.Query.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          fields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>(fields_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder setFields(
          int index, io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder setFields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addFields(io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addFields(
          int index, io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addFields(
          io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addFields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addAllFields(
          Iterable<? extends io.vitess.proto.Query.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.FieldEvent)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.FieldEvent)
    private static final FieldEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FieldEvent();
    }

    public static FieldEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FieldEvent>
        PARSER = new com.google.protobuf.AbstractParser<FieldEvent>() {
      public FieldEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FieldEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FieldEvent> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<FieldEvent> getParserForType() {
      return PARSER;
    }

    public FieldEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ShardGtidOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.ShardGtid)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string keyspace = 1;</code>
     */
    String getKeyspace();
    /**
     * <code>string keyspace = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyspaceBytes();

    /**
     * <code>string shard = 2;</code>
     */
    String getShard();
    /**
     * <code>string shard = 2;</code>
     */
    com.google.protobuf.ByteString
        getShardBytes();

    /**
     * <code>string gtid = 3;</code>
     */
    String getGtid();
    /**
     * <code>string gtid = 3;</code>
     */
    com.google.protobuf.ByteString
        getGtidBytes();

    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    java.util.List<TableLastPK>
        getTablePKsList();
    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    TableLastPK getTablePKs(int index);
    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    int getTablePKsCount();
    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    java.util.List<? extends TableLastPKOrBuilder>
        getTablePKsOrBuilderList();
    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    TableLastPKOrBuilder getTablePKsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * ShardGtid contains the GTID position for one shard.
   * It's used in a request for requesting a starting position.
   * It's used in a response to transmit the current position
   * of a shard. It's also used in a Journal to indicate the
   * list of targets and shard positions to migrate to.
   * </pre>
   *
   * Protobuf type {@code binlogdata.ShardGtid}
   */
  public  static final class ShardGtid extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.ShardGtid)
      ShardGtidOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ShardGtid.newBuilder() to construct.
    private ShardGtid(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ShardGtid() {
      keyspace_ = "";
      shard_ = "";
      gtid_ = "";
      tablePKs_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ShardGtid(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              keyspace_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              shard_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              gtid_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                tablePKs_ = new java.util.ArrayList<TableLastPK>();
                mutable_bitField0_ |= 0x00000008;
              }
              tablePKs_.add(
                  input.readMessage(TableLastPK.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          tablePKs_ = java.util.Collections.unmodifiableList(tablePKs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_ShardGtid_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_ShardGtid_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ShardGtid.class, Builder.class);
    }

    private int bitField0_;
    public static final int KEYSPACE_FIELD_NUMBER = 1;
    private volatile Object keyspace_;
    /**
     * <code>string keyspace = 1;</code>
     */
    public String getKeyspace() {
      Object ref = keyspace_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        keyspace_ = s;
        return s;
      }
    }
    /**
     * <code>string keyspace = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyspaceBytes() {
      Object ref = keyspace_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        keyspace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHARD_FIELD_NUMBER = 2;
    private volatile Object shard_;
    /**
     * <code>string shard = 2;</code>
     */
    public String getShard() {
      Object ref = shard_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        shard_ = s;
        return s;
      }
    }
    /**
     * <code>string shard = 2;</code>
     */
    public com.google.protobuf.ByteString
        getShardBytes() {
      Object ref = shard_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        shard_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GTID_FIELD_NUMBER = 3;
    private volatile Object gtid_;
    /**
     * <code>string gtid = 3;</code>
     */
    public String getGtid() {
      Object ref = gtid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        gtid_ = s;
        return s;
      }
    }
    /**
     * <code>string gtid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getGtidBytes() {
      Object ref = gtid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        gtid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLE_P_KS_FIELD_NUMBER = 4;
    private java.util.List<TableLastPK> tablePKs_;
    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    public java.util.List<TableLastPK> getTablePKsList() {
      return tablePKs_;
    }
    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    public java.util.List<? extends TableLastPKOrBuilder>
        getTablePKsOrBuilderList() {
      return tablePKs_;
    }
    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    public int getTablePKsCount() {
      return tablePKs_.size();
    }
    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    public TableLastPK getTablePKs(int index) {
      return tablePKs_.get(index);
    }
    /**
     * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
     */
    public TableLastPKOrBuilder getTablePKsOrBuilder(
        int index) {
      return tablePKs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyspaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyspace_);
      }
      if (!getShardBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, shard_);
      }
      if (!getGtidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, gtid_);
      }
      for (int i = 0; i < tablePKs_.size(); i++) {
        output.writeMessage(4, tablePKs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyspaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyspace_);
      }
      if (!getShardBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, shard_);
      }
      if (!getGtidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, gtid_);
      }
      for (int i = 0; i < tablePKs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, tablePKs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ShardGtid)) {
        return super.equals(obj);
      }
      ShardGtid other = (ShardGtid) obj;

      boolean result = true;
      result = result && getKeyspace()
          .equals(other.getKeyspace());
      result = result && getShard()
          .equals(other.getShard());
      result = result && getGtid()
          .equals(other.getGtid());
      result = result && getTablePKsList()
          .equals(other.getTablePKsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEYSPACE_FIELD_NUMBER;
      hash = (53 * hash) + getKeyspace().hashCode();
      hash = (37 * hash) + SHARD_FIELD_NUMBER;
      hash = (53 * hash) + getShard().hashCode();
      hash = (37 * hash) + GTID_FIELD_NUMBER;
      hash = (53 * hash) + getGtid().hashCode();
      if (getTablePKsCount() > 0) {
        hash = (37 * hash) + TABLE_P_KS_FIELD_NUMBER;
        hash = (53 * hash) + getTablePKsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ShardGtid parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ShardGtid parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ShardGtid parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ShardGtid parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ShardGtid parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ShardGtid parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ShardGtid parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ShardGtid parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ShardGtid parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ShardGtid parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ShardGtid parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ShardGtid parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ShardGtid prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ShardGtid contains the GTID position for one shard.
     * It's used in a request for requesting a starting position.
     * It's used in a response to transmit the current position
     * of a shard. It's also used in a Journal to indicate the
     * list of targets and shard positions to migrate to.
     * </pre>
     *
     * Protobuf type {@code binlogdata.ShardGtid}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.ShardGtid)
        ShardGtidOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_ShardGtid_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_ShardGtid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ShardGtid.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.ShardGtid.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTablePKsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        keyspace_ = "";

        shard_ = "";

        gtid_ = "";

        if (tablePKsBuilder_ == null) {
          tablePKs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          tablePKsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_ShardGtid_descriptor;
      }

      public ShardGtid getDefaultInstanceForType() {
        return ShardGtid.getDefaultInstance();
      }

      public ShardGtid build() {
        ShardGtid result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ShardGtid buildPartial() {
        ShardGtid result = new ShardGtid(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.keyspace_ = keyspace_;
        result.shard_ = shard_;
        result.gtid_ = gtid_;
        if (tablePKsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            tablePKs_ = java.util.Collections.unmodifiableList(tablePKs_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.tablePKs_ = tablePKs_;
        } else {
          result.tablePKs_ = tablePKsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ShardGtid) {
          return mergeFrom((ShardGtid)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ShardGtid other) {
        if (other == ShardGtid.getDefaultInstance()) return this;
        if (!other.getKeyspace().isEmpty()) {
          keyspace_ = other.keyspace_;
          onChanged();
        }
        if (!other.getShard().isEmpty()) {
          shard_ = other.shard_;
          onChanged();
        }
        if (!other.getGtid().isEmpty()) {
          gtid_ = other.gtid_;
          onChanged();
        }
        if (tablePKsBuilder_ == null) {
          if (!other.tablePKs_.isEmpty()) {
            if (tablePKs_.isEmpty()) {
              tablePKs_ = other.tablePKs_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureTablePKsIsMutable();
              tablePKs_.addAll(other.tablePKs_);
            }
            onChanged();
          }
        } else {
          if (!other.tablePKs_.isEmpty()) {
            if (tablePKsBuilder_.isEmpty()) {
              tablePKsBuilder_.dispose();
              tablePKsBuilder_ = null;
              tablePKs_ = other.tablePKs_;
              bitField0_ = (bitField0_ & ~0x00000008);
              tablePKsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablePKsFieldBuilder() : null;
            } else {
              tablePKsBuilder_.addAllMessages(other.tablePKs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ShardGtid parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ShardGtid) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object keyspace_ = "";
      /**
       * <code>string keyspace = 1;</code>
       */
      public String getKeyspace() {
        Object ref = keyspace_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          keyspace_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string keyspace = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyspaceBytes() {
        Object ref = keyspace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          keyspace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string keyspace = 1;</code>
       */
      public Builder setKeyspace(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyspace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string keyspace = 1;</code>
       */
      public Builder clearKeyspace() {
        
        keyspace_ = getDefaultInstance().getKeyspace();
        onChanged();
        return this;
      }
      /**
       * <code>string keyspace = 1;</code>
       */
      public Builder setKeyspaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyspace_ = value;
        onChanged();
        return this;
      }

      private Object shard_ = "";
      /**
       * <code>string shard = 2;</code>
       */
      public String getShard() {
        Object ref = shard_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          shard_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string shard = 2;</code>
       */
      public com.google.protobuf.ByteString
          getShardBytes() {
        Object ref = shard_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          shard_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string shard = 2;</code>
       */
      public Builder setShard(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        shard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string shard = 2;</code>
       */
      public Builder clearShard() {
        
        shard_ = getDefaultInstance().getShard();
        onChanged();
        return this;
      }
      /**
       * <code>string shard = 2;</code>
       */
      public Builder setShardBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        shard_ = value;
        onChanged();
        return this;
      }

      private Object gtid_ = "";
      /**
       * <code>string gtid = 3;</code>
       */
      public String getGtid() {
        Object ref = gtid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          gtid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getGtidBytes() {
        Object ref = gtid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          gtid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public Builder setGtid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gtid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public Builder clearGtid() {
        
        gtid_ = getDefaultInstance().getGtid();
        onChanged();
        return this;
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public Builder setGtidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gtid_ = value;
        onChanged();
        return this;
      }

      private java.util.List<TableLastPK> tablePKs_ =
        java.util.Collections.emptyList();
      private void ensureTablePKsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          tablePKs_ = new java.util.ArrayList<TableLastPK>(tablePKs_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TableLastPK, TableLastPK.Builder, TableLastPKOrBuilder> tablePKsBuilder_;

      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public java.util.List<TableLastPK> getTablePKsList() {
        if (tablePKsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tablePKs_);
        } else {
          return tablePKsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public int getTablePKsCount() {
        if (tablePKsBuilder_ == null) {
          return tablePKs_.size();
        } else {
          return tablePKsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public TableLastPK getTablePKs(int index) {
        if (tablePKsBuilder_ == null) {
          return tablePKs_.get(index);
        } else {
          return tablePKsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public Builder setTablePKs(
          int index, TableLastPK value) {
        if (tablePKsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePKsIsMutable();
          tablePKs_.set(index, value);
          onChanged();
        } else {
          tablePKsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public Builder setTablePKs(
          int index, TableLastPK.Builder builderForValue) {
        if (tablePKsBuilder_ == null) {
          ensureTablePKsIsMutable();
          tablePKs_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablePKsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public Builder addTablePKs(TableLastPK value) {
        if (tablePKsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePKsIsMutable();
          tablePKs_.add(value);
          onChanged();
        } else {
          tablePKsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public Builder addTablePKs(
          int index, TableLastPK value) {
        if (tablePKsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablePKsIsMutable();
          tablePKs_.add(index, value);
          onChanged();
        } else {
          tablePKsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public Builder addTablePKs(
          TableLastPK.Builder builderForValue) {
        if (tablePKsBuilder_ == null) {
          ensureTablePKsIsMutable();
          tablePKs_.add(builderForValue.build());
          onChanged();
        } else {
          tablePKsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public Builder addTablePKs(
          int index, TableLastPK.Builder builderForValue) {
        if (tablePKsBuilder_ == null) {
          ensureTablePKsIsMutable();
          tablePKs_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablePKsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public Builder addAllTablePKs(
          Iterable<? extends TableLastPK> values) {
        if (tablePKsBuilder_ == null) {
          ensureTablePKsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tablePKs_);
          onChanged();
        } else {
          tablePKsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public Builder clearTablePKs() {
        if (tablePKsBuilder_ == null) {
          tablePKs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          tablePKsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public Builder removeTablePKs(int index) {
        if (tablePKsBuilder_ == null) {
          ensureTablePKsIsMutable();
          tablePKs_.remove(index);
          onChanged();
        } else {
          tablePKsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public TableLastPK.Builder getTablePKsBuilder(
          int index) {
        return getTablePKsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public TableLastPKOrBuilder getTablePKsOrBuilder(
          int index) {
        if (tablePKsBuilder_ == null) {
          return tablePKs_.get(index);  } else {
          return tablePKsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public java.util.List<? extends TableLastPKOrBuilder>
           getTablePKsOrBuilderList() {
        if (tablePKsBuilder_ != null) {
          return tablePKsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tablePKs_);
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public TableLastPK.Builder addTablePKsBuilder() {
        return getTablePKsFieldBuilder().addBuilder(
            TableLastPK.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public TableLastPK.Builder addTablePKsBuilder(
          int index) {
        return getTablePKsFieldBuilder().addBuilder(
            index, TableLastPK.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_p_ks = 4;</code>
       */
      public java.util.List<TableLastPK.Builder>
           getTablePKsBuilderList() {
        return getTablePKsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TableLastPK, TableLastPK.Builder, TableLastPKOrBuilder>
          getTablePKsFieldBuilder() {
        if (tablePKsBuilder_ == null) {
          tablePKsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TableLastPK, TableLastPK.Builder, TableLastPKOrBuilder>(
                  tablePKs_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          tablePKs_ = null;
        }
        return tablePKsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.ShardGtid)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.ShardGtid)
    private static final ShardGtid DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ShardGtid();
    }

    public static ShardGtid getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ShardGtid>
        PARSER = new com.google.protobuf.AbstractParser<ShardGtid>() {
      public ShardGtid parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShardGtid(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ShardGtid> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ShardGtid> getParserForType() {
      return PARSER;
    }

    public ShardGtid getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VGtidOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.VGtid)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    java.util.List<ShardGtid>
        getShardGtidsList();
    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    ShardGtid getShardGtids(int index);
    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    int getShardGtidsCount();
    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    java.util.List<? extends ShardGtidOrBuilder>
        getShardGtidsOrBuilderList();
    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    ShardGtidOrBuilder getShardGtidsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A VGtid is a list of ShardGtids.
   * </pre>
   *
   * Protobuf type {@code binlogdata.VGtid}
   */
  public  static final class VGtid extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.VGtid)
      VGtidOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VGtid.newBuilder() to construct.
    private VGtid(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VGtid() {
      shardGtids_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VGtid(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                shardGtids_ = new java.util.ArrayList<ShardGtid>();
                mutable_bitField0_ |= 0x00000001;
              }
              shardGtids_.add(
                  input.readMessage(ShardGtid.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          shardGtids_ = java.util.Collections.unmodifiableList(shardGtids_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_VGtid_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_VGtid_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VGtid.class, Builder.class);
    }

    public static final int SHARD_GTIDS_FIELD_NUMBER = 1;
    private java.util.List<ShardGtid> shardGtids_;
    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    public java.util.List<ShardGtid> getShardGtidsList() {
      return shardGtids_;
    }
    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    public java.util.List<? extends ShardGtidOrBuilder>
        getShardGtidsOrBuilderList() {
      return shardGtids_;
    }
    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    public int getShardGtidsCount() {
      return shardGtids_.size();
    }
    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    public ShardGtid getShardGtids(int index) {
      return shardGtids_.get(index);
    }
    /**
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
     */
    public ShardGtidOrBuilder getShardGtidsOrBuilder(
        int index) {
      return shardGtids_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < shardGtids_.size(); i++) {
        output.writeMessage(1, shardGtids_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < shardGtids_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, shardGtids_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VGtid)) {
        return super.equals(obj);
      }
      VGtid other = (VGtid) obj;

      boolean result = true;
      result = result && getShardGtidsList()
          .equals(other.getShardGtidsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getShardGtidsCount() > 0) {
        hash = (37 * hash) + SHARD_GTIDS_FIELD_NUMBER;
        hash = (53 * hash) + getShardGtidsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VGtid parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VGtid parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VGtid parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VGtid parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VGtid parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VGtid parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VGtid parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VGtid parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VGtid parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VGtid parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VGtid parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VGtid parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VGtid prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A VGtid is a list of ShardGtids.
     * </pre>
     *
     * Protobuf type {@code binlogdata.VGtid}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.VGtid)
        VGtidOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_VGtid_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_VGtid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VGtid.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.VGtid.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getShardGtidsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (shardGtidsBuilder_ == null) {
          shardGtids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          shardGtidsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_VGtid_descriptor;
      }

      public VGtid getDefaultInstanceForType() {
        return VGtid.getDefaultInstance();
      }

      public VGtid build() {
        VGtid result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VGtid buildPartial() {
        VGtid result = new VGtid(this);
        int from_bitField0_ = bitField0_;
        if (shardGtidsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            shardGtids_ = java.util.Collections.unmodifiableList(shardGtids_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.shardGtids_ = shardGtids_;
        } else {
          result.shardGtids_ = shardGtidsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VGtid) {
          return mergeFrom((VGtid)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VGtid other) {
        if (other == VGtid.getDefaultInstance()) return this;
        if (shardGtidsBuilder_ == null) {
          if (!other.shardGtids_.isEmpty()) {
            if (shardGtids_.isEmpty()) {
              shardGtids_ = other.shardGtids_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureShardGtidsIsMutable();
              shardGtids_.addAll(other.shardGtids_);
            }
            onChanged();
          }
        } else {
          if (!other.shardGtids_.isEmpty()) {
            if (shardGtidsBuilder_.isEmpty()) {
              shardGtidsBuilder_.dispose();
              shardGtidsBuilder_ = null;
              shardGtids_ = other.shardGtids_;
              bitField0_ = (bitField0_ & ~0x00000001);
              shardGtidsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getShardGtidsFieldBuilder() : null;
            } else {
              shardGtidsBuilder_.addAllMessages(other.shardGtids_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VGtid parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VGtid) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<ShardGtid> shardGtids_ =
        java.util.Collections.emptyList();
      private void ensureShardGtidsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          shardGtids_ = new java.util.ArrayList<ShardGtid>(shardGtids_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ShardGtid, ShardGtid.Builder, ShardGtidOrBuilder> shardGtidsBuilder_;

      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public java.util.List<ShardGtid> getShardGtidsList() {
        if (shardGtidsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shardGtids_);
        } else {
          return shardGtidsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public int getShardGtidsCount() {
        if (shardGtidsBuilder_ == null) {
          return shardGtids_.size();
        } else {
          return shardGtidsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public ShardGtid getShardGtids(int index) {
        if (shardGtidsBuilder_ == null) {
          return shardGtids_.get(index);
        } else {
          return shardGtidsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public Builder setShardGtids(
          int index, ShardGtid value) {
        if (shardGtidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShardGtidsIsMutable();
          shardGtids_.set(index, value);
          onChanged();
        } else {
          shardGtidsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public Builder setShardGtids(
          int index, ShardGtid.Builder builderForValue) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          shardGtids_.set(index, builderForValue.build());
          onChanged();
        } else {
          shardGtidsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public Builder addShardGtids(ShardGtid value) {
        if (shardGtidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShardGtidsIsMutable();
          shardGtids_.add(value);
          onChanged();
        } else {
          shardGtidsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public Builder addShardGtids(
          int index, ShardGtid value) {
        if (shardGtidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShardGtidsIsMutable();
          shardGtids_.add(index, value);
          onChanged();
        } else {
          shardGtidsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public Builder addShardGtids(
          ShardGtid.Builder builderForValue) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          shardGtids_.add(builderForValue.build());
          onChanged();
        } else {
          shardGtidsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public Builder addShardGtids(
          int index, ShardGtid.Builder builderForValue) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          shardGtids_.add(index, builderForValue.build());
          onChanged();
        } else {
          shardGtidsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public Builder addAllShardGtids(
          Iterable<? extends ShardGtid> values) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shardGtids_);
          onChanged();
        } else {
          shardGtidsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public Builder clearShardGtids() {
        if (shardGtidsBuilder_ == null) {
          shardGtids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          shardGtidsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public Builder removeShardGtids(int index) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          shardGtids_.remove(index);
          onChanged();
        } else {
          shardGtidsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public ShardGtid.Builder getShardGtidsBuilder(
          int index) {
        return getShardGtidsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public ShardGtidOrBuilder getShardGtidsOrBuilder(
          int index) {
        if (shardGtidsBuilder_ == null) {
          return shardGtids_.get(index);  } else {
          return shardGtidsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public java.util.List<? extends ShardGtidOrBuilder>
           getShardGtidsOrBuilderList() {
        if (shardGtidsBuilder_ != null) {
          return shardGtidsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shardGtids_);
        }
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public ShardGtid.Builder addShardGtidsBuilder() {
        return getShardGtidsFieldBuilder().addBuilder(
            ShardGtid.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public ShardGtid.Builder addShardGtidsBuilder(
          int index) {
        return getShardGtidsFieldBuilder().addBuilder(
            index, ShardGtid.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 1;</code>
       */
      public java.util.List<ShardGtid.Builder>
           getShardGtidsBuilderList() {
        return getShardGtidsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ShardGtid, ShardGtid.Builder, ShardGtidOrBuilder>
          getShardGtidsFieldBuilder() {
        if (shardGtidsBuilder_ == null) {
          shardGtidsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ShardGtid, ShardGtid.Builder, ShardGtidOrBuilder>(
                  shardGtids_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          shardGtids_ = null;
        }
        return shardGtidsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.VGtid)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.VGtid)
    private static final VGtid DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VGtid();
    }

    public static VGtid getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VGtid>
        PARSER = new com.google.protobuf.AbstractParser<VGtid>() {
      public VGtid parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VGtid(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VGtid> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VGtid> getParserForType() {
      return PARSER;
    }

    public VGtid getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyspaceShardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.KeyspaceShard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string keyspace = 1;</code>
     */
    String getKeyspace();
    /**
     * <code>string keyspace = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyspaceBytes();

    /**
     * <code>string shard = 2;</code>
     */
    String getShard();
    /**
     * <code>string shard = 2;</code>
     */
    com.google.protobuf.ByteString
        getShardBytes();
  }
  /**
   * <pre>
   * KeyspaceShard represents a keyspace and shard.
   * </pre>
   *
   * Protobuf type {@code binlogdata.KeyspaceShard}
   */
  public  static final class KeyspaceShard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.KeyspaceShard)
      KeyspaceShardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyspaceShard.newBuilder() to construct.
    private KeyspaceShard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyspaceShard() {
      keyspace_ = "";
      shard_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyspaceShard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              keyspace_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              shard_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_KeyspaceShard_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_KeyspaceShard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              KeyspaceShard.class, Builder.class);
    }

    public static final int KEYSPACE_FIELD_NUMBER = 1;
    private volatile Object keyspace_;
    /**
     * <code>string keyspace = 1;</code>
     */
    public String getKeyspace() {
      Object ref = keyspace_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        keyspace_ = s;
        return s;
      }
    }
    /**
     * <code>string keyspace = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyspaceBytes() {
      Object ref = keyspace_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        keyspace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHARD_FIELD_NUMBER = 2;
    private volatile Object shard_;
    /**
     * <code>string shard = 2;</code>
     */
    public String getShard() {
      Object ref = shard_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        shard_ = s;
        return s;
      }
    }
    /**
     * <code>string shard = 2;</code>
     */
    public com.google.protobuf.ByteString
        getShardBytes() {
      Object ref = shard_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        shard_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyspaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyspace_);
      }
      if (!getShardBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, shard_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyspaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyspace_);
      }
      if (!getShardBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, shard_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof KeyspaceShard)) {
        return super.equals(obj);
      }
      KeyspaceShard other = (KeyspaceShard) obj;

      boolean result = true;
      result = result && getKeyspace()
          .equals(other.getKeyspace());
      result = result && getShard()
          .equals(other.getShard());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEYSPACE_FIELD_NUMBER;
      hash = (53 * hash) + getKeyspace().hashCode();
      hash = (37 * hash) + SHARD_FIELD_NUMBER;
      hash = (53 * hash) + getShard().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static KeyspaceShard parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyspaceShard parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyspaceShard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyspaceShard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyspaceShard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyspaceShard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyspaceShard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KeyspaceShard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static KeyspaceShard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static KeyspaceShard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static KeyspaceShard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KeyspaceShard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(KeyspaceShard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * KeyspaceShard represents a keyspace and shard.
     * </pre>
     *
     * Protobuf type {@code binlogdata.KeyspaceShard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.KeyspaceShard)
        KeyspaceShardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_KeyspaceShard_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_KeyspaceShard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                KeyspaceShard.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.KeyspaceShard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        keyspace_ = "";

        shard_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_KeyspaceShard_descriptor;
      }

      public KeyspaceShard getDefaultInstanceForType() {
        return KeyspaceShard.getDefaultInstance();
      }

      public KeyspaceShard build() {
        KeyspaceShard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public KeyspaceShard buildPartial() {
        KeyspaceShard result = new KeyspaceShard(this);
        result.keyspace_ = keyspace_;
        result.shard_ = shard_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof KeyspaceShard) {
          return mergeFrom((KeyspaceShard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(KeyspaceShard other) {
        if (other == KeyspaceShard.getDefaultInstance()) return this;
        if (!other.getKeyspace().isEmpty()) {
          keyspace_ = other.keyspace_;
          onChanged();
        }
        if (!other.getShard().isEmpty()) {
          shard_ = other.shard_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        KeyspaceShard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (KeyspaceShard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object keyspace_ = "";
      /**
       * <code>string keyspace = 1;</code>
       */
      public String getKeyspace() {
        Object ref = keyspace_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          keyspace_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string keyspace = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyspaceBytes() {
        Object ref = keyspace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          keyspace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string keyspace = 1;</code>
       */
      public Builder setKeyspace(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyspace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string keyspace = 1;</code>
       */
      public Builder clearKeyspace() {
        
        keyspace_ = getDefaultInstance().getKeyspace();
        onChanged();
        return this;
      }
      /**
       * <code>string keyspace = 1;</code>
       */
      public Builder setKeyspaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyspace_ = value;
        onChanged();
        return this;
      }

      private Object shard_ = "";
      /**
       * <code>string shard = 2;</code>
       */
      public String getShard() {
        Object ref = shard_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          shard_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string shard = 2;</code>
       */
      public com.google.protobuf.ByteString
          getShardBytes() {
        Object ref = shard_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          shard_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string shard = 2;</code>
       */
      public Builder setShard(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        shard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string shard = 2;</code>
       */
      public Builder clearShard() {
        
        shard_ = getDefaultInstance().getShard();
        onChanged();
        return this;
      }
      /**
       * <code>string shard = 2;</code>
       */
      public Builder setShardBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        shard_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.KeyspaceShard)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.KeyspaceShard)
    private static final KeyspaceShard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KeyspaceShard();
    }

    public static KeyspaceShard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KeyspaceShard>
        PARSER = new com.google.protobuf.AbstractParser<KeyspaceShard>() {
      public KeyspaceShard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyspaceShard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyspaceShard> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<KeyspaceShard> getParserForType() {
      return PARSER;
    }

    public KeyspaceShard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JournalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.Journal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Id represents a unique journal id.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    long getId();

    /**
     * <code>.binlogdata.MigrationType migration_type = 2;</code>
     */
    int getMigrationTypeValue();
    /**
     * <code>.binlogdata.MigrationType migration_type = 2;</code>
     */
    MigrationType getMigrationType();

    /**
     * <pre>
     * Tables is set if the journal represents a TABLES migration.
     * </pre>
     *
     * <code>repeated string tables = 3;</code>
     */
    java.util.List<String>
        getTablesList();
    /**
     * <pre>
     * Tables is set if the journal represents a TABLES migration.
     * </pre>
     *
     * <code>repeated string tables = 3;</code>
     */
    int getTablesCount();
    /**
     * <pre>
     * Tables is set if the journal represents a TABLES migration.
     * </pre>
     *
     * <code>repeated string tables = 3;</code>
     */
    String getTables(int index);
    /**
     * <pre>
     * Tables is set if the journal represents a TABLES migration.
     * </pre>
     *
     * <code>repeated string tables = 3;</code>
     */
    com.google.protobuf.ByteString
        getTablesBytes(int index);

    /**
     * <pre>
     * LocalPosition is the source position at which the migration happened.
     * </pre>
     *
     * <code>string local_position = 4;</code>
     */
    String getLocalPosition();
    /**
     * <pre>
     * LocalPosition is the source position at which the migration happened.
     * </pre>
     *
     * <code>string local_position = 4;</code>
     */
    com.google.protobuf.ByteString
        getLocalPositionBytes();

    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    java.util.List<ShardGtid>
        getShardGtidsList();
    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    ShardGtid getShardGtids(int index);
    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    int getShardGtidsCount();
    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    java.util.List<? extends ShardGtidOrBuilder>
        getShardGtidsOrBuilderList();
    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    ShardGtidOrBuilder getShardGtidsOrBuilder(
        int index);

    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    java.util.List<KeyspaceShard>
        getParticipantsList();
    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    KeyspaceShard getParticipants(int index);
    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    int getParticipantsCount();
    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    java.util.List<? extends KeyspaceShardOrBuilder>
        getParticipantsOrBuilderList();
    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    KeyspaceShardOrBuilder getParticipantsOrBuilder(
        int index);

    /**
     * <pre>
     * SourceWorkflows is the list of workflows in the source shard that
     * were migrated to the target. If a migration fails after a Journal
     * is committed, this information is used to start the target streams
     * that were created prior to the creation of the journal.
     * </pre>
     *
     * <code>repeated string source_workflows = 7;</code>
     */
    java.util.List<String>
        getSourceWorkflowsList();
    /**
     * <pre>
     * SourceWorkflows is the list of workflows in the source shard that
     * were migrated to the target. If a migration fails after a Journal
     * is committed, this information is used to start the target streams
     * that were created prior to the creation of the journal.
     * </pre>
     *
     * <code>repeated string source_workflows = 7;</code>
     */
    int getSourceWorkflowsCount();
    /**
     * <pre>
     * SourceWorkflows is the list of workflows in the source shard that
     * were migrated to the target. If a migration fails after a Journal
     * is committed, this information is used to start the target streams
     * that were created prior to the creation of the journal.
     * </pre>
     *
     * <code>repeated string source_workflows = 7;</code>
     */
    String getSourceWorkflows(int index);
    /**
     * <pre>
     * SourceWorkflows is the list of workflows in the source shard that
     * were migrated to the target. If a migration fails after a Journal
     * is committed, this information is used to start the target streams
     * that were created prior to the creation of the journal.
     * </pre>
     *
     * <code>repeated string source_workflows = 7;</code>
     */
    com.google.protobuf.ByteString
        getSourceWorkflowsBytes(int index);
  }
  /**
   * <pre>
   * Journal contains the metadata for a journal event.
   * The commit of a journal event indicates the point of no return
   * for a migration.
   * </pre>
   *
   * Protobuf type {@code binlogdata.Journal}
   */
  public  static final class Journal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.Journal)
      JournalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Journal.newBuilder() to construct.
    private Journal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Journal() {
      id_ = 0L;
      migrationType_ = 0;
      tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      localPosition_ = "";
      shardGtids_ = java.util.Collections.emptyList();
      participants_ = java.util.Collections.emptyList();
      sourceWorkflows_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Journal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              migrationType_ = rawValue;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                tables_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              tables_.add(s);
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              localPosition_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                shardGtids_ = new java.util.ArrayList<ShardGtid>();
                mutable_bitField0_ |= 0x00000010;
              }
              shardGtids_.add(
                  input.readMessage(ShardGtid.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                participants_ = new java.util.ArrayList<KeyspaceShard>();
                mutable_bitField0_ |= 0x00000020;
              }
              participants_.add(
                  input.readMessage(KeyspaceShard.parser(), extensionRegistry));
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                sourceWorkflows_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000040;
              }
              sourceWorkflows_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          tables_ = tables_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          shardGtids_ = java.util.Collections.unmodifiableList(shardGtids_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          participants_ = java.util.Collections.unmodifiableList(participants_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          sourceWorkflows_ = sourceWorkflows_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_Journal_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_Journal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Journal.class, Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * Id represents a unique journal id.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int MIGRATION_TYPE_FIELD_NUMBER = 2;
    private int migrationType_;
    /**
     * <code>.binlogdata.MigrationType migration_type = 2;</code>
     */
    public int getMigrationTypeValue() {
      return migrationType_;
    }
    /**
     * <code>.binlogdata.MigrationType migration_type = 2;</code>
     */
    public MigrationType getMigrationType() {
      MigrationType result = MigrationType.valueOf(migrationType_);
      return result == null ? MigrationType.UNRECOGNIZED : result;
    }

    public static final int TABLES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList tables_;
    /**
     * <pre>
     * Tables is set if the journal represents a TABLES migration.
     * </pre>
     *
     * <code>repeated string tables = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTablesList() {
      return tables_;
    }
    /**
     * <pre>
     * Tables is set if the journal represents a TABLES migration.
     * </pre>
     *
     * <code>repeated string tables = 3;</code>
     */
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <pre>
     * Tables is set if the journal represents a TABLES migration.
     * </pre>
     *
     * <code>repeated string tables = 3;</code>
     */
    public String getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <pre>
     * Tables is set if the journal represents a TABLES migration.
     * </pre>
     *
     * <code>repeated string tables = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTablesBytes(int index) {
      return tables_.getByteString(index);
    }

    public static final int LOCAL_POSITION_FIELD_NUMBER = 4;
    private volatile Object localPosition_;
    /**
     * <pre>
     * LocalPosition is the source position at which the migration happened.
     * </pre>
     *
     * <code>string local_position = 4;</code>
     */
    public String getLocalPosition() {
      Object ref = localPosition_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        localPosition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * LocalPosition is the source position at which the migration happened.
     * </pre>
     *
     * <code>string local_position = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLocalPositionBytes() {
      Object ref = localPosition_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        localPosition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHARD_GTIDS_FIELD_NUMBER = 5;
    private java.util.List<ShardGtid> shardGtids_;
    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    public java.util.List<ShardGtid> getShardGtidsList() {
      return shardGtids_;
    }
    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    public java.util.List<? extends ShardGtidOrBuilder>
        getShardGtidsOrBuilderList() {
      return shardGtids_;
    }
    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    public int getShardGtidsCount() {
      return shardGtids_.size();
    }
    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    public ShardGtid getShardGtids(int index) {
      return shardGtids_.get(index);
    }
    /**
     * <pre>
     * ShardGtids is the list of targets to which the migration took place.
     * </pre>
     *
     * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
     */
    public ShardGtidOrBuilder getShardGtidsOrBuilder(
        int index) {
      return shardGtids_.get(index);
    }

    public static final int PARTICIPANTS_FIELD_NUMBER = 6;
    private java.util.List<KeyspaceShard> participants_;
    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    public java.util.List<KeyspaceShard> getParticipantsList() {
      return participants_;
    }
    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    public java.util.List<? extends KeyspaceShardOrBuilder>
        getParticipantsOrBuilderList() {
      return participants_;
    }
    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    public int getParticipantsCount() {
      return participants_.size();
    }
    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    public KeyspaceShard getParticipants(int index) {
      return participants_.get(index);
    }
    /**
     * <pre>
     * Participants is the list of source participants for a migration.
     * Every participant is expected to have an identical journal entry.
     * While streaming, the client must wait for the journal entry to
     * be received from all pariticipants, and then replace them with new
     * streams specified by ShardGtid.
     * If a stream does not have all participants, a consistent migration
     * is not possible.
     * </pre>
     *
     * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
     */
    public KeyspaceShardOrBuilder getParticipantsOrBuilder(
        int index) {
      return participants_.get(index);
    }

    public static final int SOURCE_WORKFLOWS_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList sourceWorkflows_;
    /**
     * <pre>
     * SourceWorkflows is the list of workflows in the source shard that
     * were migrated to the target. If a migration fails after a Journal
     * is committed, this information is used to start the target streams
     * that were created prior to the creation of the journal.
     * </pre>
     *
     * <code>repeated string source_workflows = 7;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getSourceWorkflowsList() {
      return sourceWorkflows_;
    }
    /**
     * <pre>
     * SourceWorkflows is the list of workflows in the source shard that
     * were migrated to the target. If a migration fails after a Journal
     * is committed, this information is used to start the target streams
     * that were created prior to the creation of the journal.
     * </pre>
     *
     * <code>repeated string source_workflows = 7;</code>
     */
    public int getSourceWorkflowsCount() {
      return sourceWorkflows_.size();
    }
    /**
     * <pre>
     * SourceWorkflows is the list of workflows in the source shard that
     * were migrated to the target. If a migration fails after a Journal
     * is committed, this information is used to start the target streams
     * that were created prior to the creation of the journal.
     * </pre>
     *
     * <code>repeated string source_workflows = 7;</code>
     */
    public String getSourceWorkflows(int index) {
      return sourceWorkflows_.get(index);
    }
    /**
     * <pre>
     * SourceWorkflows is the list of workflows in the source shard that
     * were migrated to the target. If a migration fails after a Journal
     * is committed, this information is used to start the target streams
     * that were created prior to the creation of the journal.
     * </pre>
     *
     * <code>repeated string source_workflows = 7;</code>
     */
    public com.google.protobuf.ByteString
        getSourceWorkflowsBytes(int index) {
      return sourceWorkflows_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (migrationType_ != MigrationType.TABLES.getNumber()) {
        output.writeEnum(2, migrationType_);
      }
      for (int i = 0; i < tables_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tables_.getRaw(i));
      }
      if (!getLocalPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, localPosition_);
      }
      for (int i = 0; i < shardGtids_.size(); i++) {
        output.writeMessage(5, shardGtids_.get(i));
      }
      for (int i = 0; i < participants_.size(); i++) {
        output.writeMessage(6, participants_.get(i));
      }
      for (int i = 0; i < sourceWorkflows_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, sourceWorkflows_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (migrationType_ != MigrationType.TABLES.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, migrationType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tables_.size(); i++) {
          dataSize += computeStringSizeNoTag(tables_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTablesList().size();
      }
      if (!getLocalPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, localPosition_);
      }
      for (int i = 0; i < shardGtids_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, shardGtids_.get(i));
      }
      for (int i = 0; i < participants_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, participants_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sourceWorkflows_.size(); i++) {
          dataSize += computeStringSizeNoTag(sourceWorkflows_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSourceWorkflowsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Journal)) {
        return super.equals(obj);
      }
      Journal other = (Journal) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && migrationType_ == other.migrationType_;
      result = result && getTablesList()
          .equals(other.getTablesList());
      result = result && getLocalPosition()
          .equals(other.getLocalPosition());
      result = result && getShardGtidsList()
          .equals(other.getShardGtidsList());
      result = result && getParticipantsList()
          .equals(other.getParticipantsList());
      result = result && getSourceWorkflowsList()
          .equals(other.getSourceWorkflowsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + MIGRATION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + migrationType_;
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      hash = (37 * hash) + LOCAL_POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getLocalPosition().hashCode();
      if (getShardGtidsCount() > 0) {
        hash = (37 * hash) + SHARD_GTIDS_FIELD_NUMBER;
        hash = (53 * hash) + getShardGtidsList().hashCode();
      }
      if (getParticipantsCount() > 0) {
        hash = (37 * hash) + PARTICIPANTS_FIELD_NUMBER;
        hash = (53 * hash) + getParticipantsList().hashCode();
      }
      if (getSourceWorkflowsCount() > 0) {
        hash = (37 * hash) + SOURCE_WORKFLOWS_FIELD_NUMBER;
        hash = (53 * hash) + getSourceWorkflowsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Journal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Journal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Journal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Journal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Journal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Journal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Journal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Journal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Journal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Journal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Journal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Journal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Journal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Journal contains the metadata for a journal event.
     * The commit of a journal event indicates the point of no return
     * for a migration.
     * </pre>
     *
     * Protobuf type {@code binlogdata.Journal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.Journal)
        JournalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_Journal_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_Journal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Journal.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.Journal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getShardGtidsFieldBuilder();
          getParticipantsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        migrationType_ = 0;

        tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        localPosition_ = "";

        if (shardGtidsBuilder_ == null) {
          shardGtids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          shardGtidsBuilder_.clear();
        }
        if (participantsBuilder_ == null) {
          participants_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          participantsBuilder_.clear();
        }
        sourceWorkflows_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_Journal_descriptor;
      }

      public Journal getDefaultInstanceForType() {
        return Journal.getDefaultInstance();
      }

      public Journal build() {
        Journal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Journal buildPartial() {
        Journal result = new Journal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.migrationType_ = migrationType_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          tables_ = tables_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.tables_ = tables_;
        result.localPosition_ = localPosition_;
        if (shardGtidsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            shardGtids_ = java.util.Collections.unmodifiableList(shardGtids_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.shardGtids_ = shardGtids_;
        } else {
          result.shardGtids_ = shardGtidsBuilder_.build();
        }
        if (participantsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            participants_ = java.util.Collections.unmodifiableList(participants_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.participants_ = participants_;
        } else {
          result.participants_ = participantsBuilder_.build();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          sourceWorkflows_ = sourceWorkflows_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.sourceWorkflows_ = sourceWorkflows_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Journal) {
          return mergeFrom((Journal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Journal other) {
        if (other == Journal.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.migrationType_ != 0) {
          setMigrationTypeValue(other.getMigrationTypeValue());
        }
        if (!other.tables_.isEmpty()) {
          if (tables_.isEmpty()) {
            tables_ = other.tables_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTablesIsMutable();
            tables_.addAll(other.tables_);
          }
          onChanged();
        }
        if (!other.getLocalPosition().isEmpty()) {
          localPosition_ = other.localPosition_;
          onChanged();
        }
        if (shardGtidsBuilder_ == null) {
          if (!other.shardGtids_.isEmpty()) {
            if (shardGtids_.isEmpty()) {
              shardGtids_ = other.shardGtids_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureShardGtidsIsMutable();
              shardGtids_.addAll(other.shardGtids_);
            }
            onChanged();
          }
        } else {
          if (!other.shardGtids_.isEmpty()) {
            if (shardGtidsBuilder_.isEmpty()) {
              shardGtidsBuilder_.dispose();
              shardGtidsBuilder_ = null;
              shardGtids_ = other.shardGtids_;
              bitField0_ = (bitField0_ & ~0x00000010);
              shardGtidsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getShardGtidsFieldBuilder() : null;
            } else {
              shardGtidsBuilder_.addAllMessages(other.shardGtids_);
            }
          }
        }
        if (participantsBuilder_ == null) {
          if (!other.participants_.isEmpty()) {
            if (participants_.isEmpty()) {
              participants_ = other.participants_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureParticipantsIsMutable();
              participants_.addAll(other.participants_);
            }
            onChanged();
          }
        } else {
          if (!other.participants_.isEmpty()) {
            if (participantsBuilder_.isEmpty()) {
              participantsBuilder_.dispose();
              participantsBuilder_ = null;
              participants_ = other.participants_;
              bitField0_ = (bitField0_ & ~0x00000020);
              participantsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParticipantsFieldBuilder() : null;
            } else {
              participantsBuilder_.addAllMessages(other.participants_);
            }
          }
        }
        if (!other.sourceWorkflows_.isEmpty()) {
          if (sourceWorkflows_.isEmpty()) {
            sourceWorkflows_ = other.sourceWorkflows_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSourceWorkflowsIsMutable();
            sourceWorkflows_.addAll(other.sourceWorkflows_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Journal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Journal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * Id represents a unique journal id.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * Id represents a unique journal id.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id represents a unique journal id.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private int migrationType_ = 0;
      /**
       * <code>.binlogdata.MigrationType migration_type = 2;</code>
       */
      public int getMigrationTypeValue() {
        return migrationType_;
      }
      /**
       * <code>.binlogdata.MigrationType migration_type = 2;</code>
       */
      public Builder setMigrationTypeValue(int value) {
        migrationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.binlogdata.MigrationType migration_type = 2;</code>
       */
      public MigrationType getMigrationType() {
        MigrationType result = MigrationType.valueOf(migrationType_);
        return result == null ? MigrationType.UNRECOGNIZED : result;
      }
      /**
       * <code>.binlogdata.MigrationType migration_type = 2;</code>
       */
      public Builder setMigrationType(MigrationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        migrationType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.binlogdata.MigrationType migration_type = 2;</code>
       */
      public Builder clearMigrationType() {
        
        migrationType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          tables_ = new com.google.protobuf.LazyStringArrayList(tables_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * Tables is set if the journal represents a TABLES migration.
       * </pre>
       *
       * <code>repeated string tables = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTablesList() {
        return tables_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Tables is set if the journal represents a TABLES migration.
       * </pre>
       *
       * <code>repeated string tables = 3;</code>
       */
      public int getTablesCount() {
        return tables_.size();
      }
      /**
       * <pre>
       * Tables is set if the journal represents a TABLES migration.
       * </pre>
       *
       * <code>repeated string tables = 3;</code>
       */
      public String getTables(int index) {
        return tables_.get(index);
      }
      /**
       * <pre>
       * Tables is set if the journal represents a TABLES migration.
       * </pre>
       *
       * <code>repeated string tables = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTablesBytes(int index) {
        return tables_.getByteString(index);
      }
      /**
       * <pre>
       * Tables is set if the journal represents a TABLES migration.
       * </pre>
       *
       * <code>repeated string tables = 3;</code>
       */
      public Builder setTables(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTablesIsMutable();
        tables_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables is set if the journal represents a TABLES migration.
       * </pre>
       *
       * <code>repeated string tables = 3;</code>
       */
      public Builder addTables(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTablesIsMutable();
        tables_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables is set if the journal represents a TABLES migration.
       * </pre>
       *
       * <code>repeated string tables = 3;</code>
       */
      public Builder addAllTables(
          Iterable<String> values) {
        ensureTablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tables_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables is set if the journal represents a TABLES migration.
       * </pre>
       *
       * <code>repeated string tables = 3;</code>
       */
      public Builder clearTables() {
        tables_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tables is set if the journal represents a TABLES migration.
       * </pre>
       *
       * <code>repeated string tables = 3;</code>
       */
      public Builder addTablesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTablesIsMutable();
        tables_.add(value);
        onChanged();
        return this;
      }

      private Object localPosition_ = "";
      /**
       * <pre>
       * LocalPosition is the source position at which the migration happened.
       * </pre>
       *
       * <code>string local_position = 4;</code>
       */
      public String getLocalPosition() {
        Object ref = localPosition_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          localPosition_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * LocalPosition is the source position at which the migration happened.
       * </pre>
       *
       * <code>string local_position = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLocalPositionBytes() {
        Object ref = localPosition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          localPosition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * LocalPosition is the source position at which the migration happened.
       * </pre>
       *
       * <code>string local_position = 4;</code>
       */
      public Builder setLocalPosition(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        localPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LocalPosition is the source position at which the migration happened.
       * </pre>
       *
       * <code>string local_position = 4;</code>
       */
      public Builder clearLocalPosition() {
        
        localPosition_ = getDefaultInstance().getLocalPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LocalPosition is the source position at which the migration happened.
       * </pre>
       *
       * <code>string local_position = 4;</code>
       */
      public Builder setLocalPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        localPosition_ = value;
        onChanged();
        return this;
      }

      private java.util.List<ShardGtid> shardGtids_ =
        java.util.Collections.emptyList();
      private void ensureShardGtidsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          shardGtids_ = new java.util.ArrayList<ShardGtid>(shardGtids_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ShardGtid, ShardGtid.Builder, ShardGtidOrBuilder> shardGtidsBuilder_;

      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public java.util.List<ShardGtid> getShardGtidsList() {
        if (shardGtidsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shardGtids_);
        } else {
          return shardGtidsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public int getShardGtidsCount() {
        if (shardGtidsBuilder_ == null) {
          return shardGtids_.size();
        } else {
          return shardGtidsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public ShardGtid getShardGtids(int index) {
        if (shardGtidsBuilder_ == null) {
          return shardGtids_.get(index);
        } else {
          return shardGtidsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public Builder setShardGtids(
          int index, ShardGtid value) {
        if (shardGtidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShardGtidsIsMutable();
          shardGtids_.set(index, value);
          onChanged();
        } else {
          shardGtidsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public Builder setShardGtids(
          int index, ShardGtid.Builder builderForValue) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          shardGtids_.set(index, builderForValue.build());
          onChanged();
        } else {
          shardGtidsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public Builder addShardGtids(ShardGtid value) {
        if (shardGtidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShardGtidsIsMutable();
          shardGtids_.add(value);
          onChanged();
        } else {
          shardGtidsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public Builder addShardGtids(
          int index, ShardGtid value) {
        if (shardGtidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShardGtidsIsMutable();
          shardGtids_.add(index, value);
          onChanged();
        } else {
          shardGtidsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public Builder addShardGtids(
          ShardGtid.Builder builderForValue) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          shardGtids_.add(builderForValue.build());
          onChanged();
        } else {
          shardGtidsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public Builder addShardGtids(
          int index, ShardGtid.Builder builderForValue) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          shardGtids_.add(index, builderForValue.build());
          onChanged();
        } else {
          shardGtidsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public Builder addAllShardGtids(
          Iterable<? extends ShardGtid> values) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shardGtids_);
          onChanged();
        } else {
          shardGtidsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public Builder clearShardGtids() {
        if (shardGtidsBuilder_ == null) {
          shardGtids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          shardGtidsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public Builder removeShardGtids(int index) {
        if (shardGtidsBuilder_ == null) {
          ensureShardGtidsIsMutable();
          shardGtids_.remove(index);
          onChanged();
        } else {
          shardGtidsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public ShardGtid.Builder getShardGtidsBuilder(
          int index) {
        return getShardGtidsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public ShardGtidOrBuilder getShardGtidsOrBuilder(
          int index) {
        if (shardGtidsBuilder_ == null) {
          return shardGtids_.get(index);  } else {
          return shardGtidsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public java.util.List<? extends ShardGtidOrBuilder>
           getShardGtidsOrBuilderList() {
        if (shardGtidsBuilder_ != null) {
          return shardGtidsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shardGtids_);
        }
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public ShardGtid.Builder addShardGtidsBuilder() {
        return getShardGtidsFieldBuilder().addBuilder(
            ShardGtid.getDefaultInstance());
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public ShardGtid.Builder addShardGtidsBuilder(
          int index) {
        return getShardGtidsFieldBuilder().addBuilder(
            index, ShardGtid.getDefaultInstance());
      }
      /**
       * <pre>
       * ShardGtids is the list of targets to which the migration took place.
       * </pre>
       *
       * <code>repeated .binlogdata.ShardGtid shard_gtids = 5;</code>
       */
      public java.util.List<ShardGtid.Builder>
           getShardGtidsBuilderList() {
        return getShardGtidsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ShardGtid, ShardGtid.Builder, ShardGtidOrBuilder>
          getShardGtidsFieldBuilder() {
        if (shardGtidsBuilder_ == null) {
          shardGtidsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ShardGtid, ShardGtid.Builder, ShardGtidOrBuilder>(
                  shardGtids_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          shardGtids_ = null;
        }
        return shardGtidsBuilder_;
      }

      private java.util.List<KeyspaceShard> participants_ =
        java.util.Collections.emptyList();
      private void ensureParticipantsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          participants_ = new java.util.ArrayList<KeyspaceShard>(participants_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          KeyspaceShard, KeyspaceShard.Builder, KeyspaceShardOrBuilder> participantsBuilder_;

      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public java.util.List<KeyspaceShard> getParticipantsList() {
        if (participantsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(participants_);
        } else {
          return participantsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public int getParticipantsCount() {
        if (participantsBuilder_ == null) {
          return participants_.size();
        } else {
          return participantsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public KeyspaceShard getParticipants(int index) {
        if (participantsBuilder_ == null) {
          return participants_.get(index);
        } else {
          return participantsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public Builder setParticipants(
          int index, KeyspaceShard value) {
        if (participantsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParticipantsIsMutable();
          participants_.set(index, value);
          onChanged();
        } else {
          participantsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public Builder setParticipants(
          int index, KeyspaceShard.Builder builderForValue) {
        if (participantsBuilder_ == null) {
          ensureParticipantsIsMutable();
          participants_.set(index, builderForValue.build());
          onChanged();
        } else {
          participantsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public Builder addParticipants(KeyspaceShard value) {
        if (participantsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParticipantsIsMutable();
          participants_.add(value);
          onChanged();
        } else {
          participantsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public Builder addParticipants(
          int index, KeyspaceShard value) {
        if (participantsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParticipantsIsMutable();
          participants_.add(index, value);
          onChanged();
        } else {
          participantsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public Builder addParticipants(
          KeyspaceShard.Builder builderForValue) {
        if (participantsBuilder_ == null) {
          ensureParticipantsIsMutable();
          participants_.add(builderForValue.build());
          onChanged();
        } else {
          participantsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public Builder addParticipants(
          int index, KeyspaceShard.Builder builderForValue) {
        if (participantsBuilder_ == null) {
          ensureParticipantsIsMutable();
          participants_.add(index, builderForValue.build());
          onChanged();
        } else {
          participantsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public Builder addAllParticipants(
          Iterable<? extends KeyspaceShard> values) {
        if (participantsBuilder_ == null) {
          ensureParticipantsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, participants_);
          onChanged();
        } else {
          participantsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public Builder clearParticipants() {
        if (participantsBuilder_ == null) {
          participants_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          participantsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public Builder removeParticipants(int index) {
        if (participantsBuilder_ == null) {
          ensureParticipantsIsMutable();
          participants_.remove(index);
          onChanged();
        } else {
          participantsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public KeyspaceShard.Builder getParticipantsBuilder(
          int index) {
        return getParticipantsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public KeyspaceShardOrBuilder getParticipantsOrBuilder(
          int index) {
        if (participantsBuilder_ == null) {
          return participants_.get(index);  } else {
          return participantsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public java.util.List<? extends KeyspaceShardOrBuilder>
           getParticipantsOrBuilderList() {
        if (participantsBuilder_ != null) {
          return participantsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(participants_);
        }
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public KeyspaceShard.Builder addParticipantsBuilder() {
        return getParticipantsFieldBuilder().addBuilder(
            KeyspaceShard.getDefaultInstance());
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public KeyspaceShard.Builder addParticipantsBuilder(
          int index) {
        return getParticipantsFieldBuilder().addBuilder(
            index, KeyspaceShard.getDefaultInstance());
      }
      /**
       * <pre>
       * Participants is the list of source participants for a migration.
       * Every participant is expected to have an identical journal entry.
       * While streaming, the client must wait for the journal entry to
       * be received from all pariticipants, and then replace them with new
       * streams specified by ShardGtid.
       * If a stream does not have all participants, a consistent migration
       * is not possible.
       * </pre>
       *
       * <code>repeated .binlogdata.KeyspaceShard participants = 6;</code>
       */
      public java.util.List<KeyspaceShard.Builder>
           getParticipantsBuilderList() {
        return getParticipantsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          KeyspaceShard, KeyspaceShard.Builder, KeyspaceShardOrBuilder>
          getParticipantsFieldBuilder() {
        if (participantsBuilder_ == null) {
          participantsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              KeyspaceShard, KeyspaceShard.Builder, KeyspaceShardOrBuilder>(
                  participants_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          participants_ = null;
        }
        return participantsBuilder_;
      }

      private com.google.protobuf.LazyStringList sourceWorkflows_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSourceWorkflowsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sourceWorkflows_ = new com.google.protobuf.LazyStringArrayList(sourceWorkflows_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <pre>
       * SourceWorkflows is the list of workflows in the source shard that
       * were migrated to the target. If a migration fails after a Journal
       * is committed, this information is used to start the target streams
       * that were created prior to the creation of the journal.
       * </pre>
       *
       * <code>repeated string source_workflows = 7;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getSourceWorkflowsList() {
        return sourceWorkflows_.getUnmodifiableView();
      }
      /**
       * <pre>
       * SourceWorkflows is the list of workflows in the source shard that
       * were migrated to the target. If a migration fails after a Journal
       * is committed, this information is used to start the target streams
       * that were created prior to the creation of the journal.
       * </pre>
       *
       * <code>repeated string source_workflows = 7;</code>
       */
      public int getSourceWorkflowsCount() {
        return sourceWorkflows_.size();
      }
      /**
       * <pre>
       * SourceWorkflows is the list of workflows in the source shard that
       * were migrated to the target. If a migration fails after a Journal
       * is committed, this information is used to start the target streams
       * that were created prior to the creation of the journal.
       * </pre>
       *
       * <code>repeated string source_workflows = 7;</code>
       */
      public String getSourceWorkflows(int index) {
        return sourceWorkflows_.get(index);
      }
      /**
       * <pre>
       * SourceWorkflows is the list of workflows in the source shard that
       * were migrated to the target. If a migration fails after a Journal
       * is committed, this information is used to start the target streams
       * that were created prior to the creation of the journal.
       * </pre>
       *
       * <code>repeated string source_workflows = 7;</code>
       */
      public com.google.protobuf.ByteString
          getSourceWorkflowsBytes(int index) {
        return sourceWorkflows_.getByteString(index);
      }
      /**
       * <pre>
       * SourceWorkflows is the list of workflows in the source shard that
       * were migrated to the target. If a migration fails after a Journal
       * is committed, this information is used to start the target streams
       * that were created prior to the creation of the journal.
       * </pre>
       *
       * <code>repeated string source_workflows = 7;</code>
       */
      public Builder setSourceWorkflows(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSourceWorkflowsIsMutable();
        sourceWorkflows_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SourceWorkflows is the list of workflows in the source shard that
       * were migrated to the target. If a migration fails after a Journal
       * is committed, this information is used to start the target streams
       * that were created prior to the creation of the journal.
       * </pre>
       *
       * <code>repeated string source_workflows = 7;</code>
       */
      public Builder addSourceWorkflows(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSourceWorkflowsIsMutable();
        sourceWorkflows_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SourceWorkflows is the list of workflows in the source shard that
       * were migrated to the target. If a migration fails after a Journal
       * is committed, this information is used to start the target streams
       * that were created prior to the creation of the journal.
       * </pre>
       *
       * <code>repeated string source_workflows = 7;</code>
       */
      public Builder addAllSourceWorkflows(
          Iterable<String> values) {
        ensureSourceWorkflowsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sourceWorkflows_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SourceWorkflows is the list of workflows in the source shard that
       * were migrated to the target. If a migration fails after a Journal
       * is committed, this information is used to start the target streams
       * that were created prior to the creation of the journal.
       * </pre>
       *
       * <code>repeated string source_workflows = 7;</code>
       */
      public Builder clearSourceWorkflows() {
        sourceWorkflows_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SourceWorkflows is the list of workflows in the source shard that
       * were migrated to the target. If a migration fails after a Journal
       * is committed, this information is used to start the target streams
       * that were created prior to the creation of the journal.
       * </pre>
       *
       * <code>repeated string source_workflows = 7;</code>
       */
      public Builder addSourceWorkflowsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSourceWorkflowsIsMutable();
        sourceWorkflows_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.Journal)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.Journal)
    private static final Journal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Journal();
    }

    public static Journal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Journal>
        PARSER = new com.google.protobuf.AbstractParser<Journal>() {
      public Journal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Journal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Journal> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Journal> getParserForType() {
      return PARSER;
    }

    public Journal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.VEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.binlogdata.VEventType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.binlogdata.VEventType type = 1;</code>
     */
    VEventType getType();

    /**
     * <pre>
     * Timestamp is the binlog timestamp in seconds.
     * The value should be ignored if 0.
     * </pre>
     *
     * <code>int64 timestamp = 2;</code>
     */
    long getTimestamp();

    /**
     * <pre>
     * Gtid is set if the event type is GTID.
     * </pre>
     *
     * <code>string gtid = 3;</code>
     */
    String getGtid();
    /**
     * <pre>
     * Gtid is set if the event type is GTID.
     * </pre>
     *
     * <code>string gtid = 3;</code>
     */
    com.google.protobuf.ByteString
        getGtidBytes();

    /**
     * <pre>
     * Statement is set if the event type is DDL, DML or SAVEPOINT.
     * </pre>
     *
     * <code>string statement = 4;</code>
     */
    String getStatement();
    /**
     * <pre>
     * Statement is set if the event type is DDL, DML or SAVEPOINT.
     * </pre>
     *
     * <code>string statement = 4;</code>
     */
    com.google.protobuf.ByteString
        getStatementBytes();

    /**
     * <pre>
     * RowEvent is set if the event type is ROW.
     * </pre>
     *
     * <code>.binlogdata.RowEvent row_event = 5;</code>
     */
    boolean hasRowEvent();
    /**
     * <pre>
     * RowEvent is set if the event type is ROW.
     * </pre>
     *
     * <code>.binlogdata.RowEvent row_event = 5;</code>
     */
    RowEvent getRowEvent();
    /**
     * <pre>
     * RowEvent is set if the event type is ROW.
     * </pre>
     *
     * <code>.binlogdata.RowEvent row_event = 5;</code>
     */
    RowEventOrBuilder getRowEventOrBuilder();

    /**
     * <pre>
     * FieldEvent is set if the event type is FIELD.
     * </pre>
     *
     * <code>.binlogdata.FieldEvent field_event = 6;</code>
     */
    boolean hasFieldEvent();
    /**
     * <pre>
     * FieldEvent is set if the event type is FIELD.
     * </pre>
     *
     * <code>.binlogdata.FieldEvent field_event = 6;</code>
     */
    FieldEvent getFieldEvent();
    /**
     * <pre>
     * FieldEvent is set if the event type is FIELD.
     * </pre>
     *
     * <code>.binlogdata.FieldEvent field_event = 6;</code>
     */
    FieldEventOrBuilder getFieldEventOrBuilder();

    /**
     * <pre>
     * Vgtid is set if the event type is VGTID.
     * This event is only generated by VTGate's VStream function.
     * </pre>
     *
     * <code>.binlogdata.VGtid vgtid = 7;</code>
     */
    boolean hasVgtid();
    /**
     * <pre>
     * Vgtid is set if the event type is VGTID.
     * This event is only generated by VTGate's VStream function.
     * </pre>
     *
     * <code>.binlogdata.VGtid vgtid = 7;</code>
     */
    VGtid getVgtid();
    /**
     * <pre>
     * Vgtid is set if the event type is VGTID.
     * This event is only generated by VTGate's VStream function.
     * </pre>
     *
     * <code>.binlogdata.VGtid vgtid = 7;</code>
     */
    VGtidOrBuilder getVgtidOrBuilder();

    /**
     * <pre>
     * Journal is set if the event type is JOURNAL. 
     * </pre>
     *
     * <code>.binlogdata.Journal journal = 8;</code>
     */
    boolean hasJournal();
    /**
     * <pre>
     * Journal is set if the event type is JOURNAL. 
     * </pre>
     *
     * <code>.binlogdata.Journal journal = 8;</code>
     */
    Journal getJournal();
    /**
     * <pre>
     * Journal is set if the event type is JOURNAL. 
     * </pre>
     *
     * <code>.binlogdata.Journal journal = 8;</code>
     */
    JournalOrBuilder getJournalOrBuilder();

    /**
     * <pre>
     * Dml is set if the event type is INSERT, REPLACE, UPDATE or DELETE.
     * </pre>
     *
     * <code>string dml = 9;</code>
     */
    String getDml();
    /**
     * <pre>
     * Dml is set if the event type is INSERT, REPLACE, UPDATE or DELETE.
     * </pre>
     *
     * <code>string dml = 9;</code>
     */
    com.google.protobuf.ByteString
        getDmlBytes();

    /**
     * <pre>
     * CurrentTime specifies the current time when the message was sent.
     * This can be used to compenssate for clock skew.
     * </pre>
     *
     * <code>int64 current_time = 20;</code>
     */
    long getCurrentTime();

    /**
     * <pre>
     * LastPK is the last PK for a table
     * </pre>
     *
     * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
     */
    boolean hasLastPKEvent();
    /**
     * <pre>
     * LastPK is the last PK for a table
     * </pre>
     *
     * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
     */
    LastPKEvent getLastPKEvent();
    /**
     * <pre>
     * LastPK is the last PK for a table
     * </pre>
     *
     * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
     */
    LastPKEventOrBuilder getLastPKEventOrBuilder();
  }
  /**
   * <pre>
   * VEvent represents a vstream event.
   * A FieldEvent is sent once for every table, just before
   * the first event for that table. The client is expected
   * to cache this information and match it against the RowEvent
   * which contains the table name.
   * A GTID event always precedes a commitable event, which can be
   * COMMIT, DDL or OTHER.
   * OTHER events are non-material events that have no additional metadata.
   * </pre>
   *
   * Protobuf type {@code binlogdata.VEvent}
   */
  public  static final class VEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.VEvent)
      VEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VEvent.newBuilder() to construct.
    private VEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VEvent() {
      type_ = 0;
      timestamp_ = 0L;
      gtid_ = "";
      statement_ = "";
      dml_ = "";
      currentTime_ = 0L;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              timestamp_ = input.readInt64();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              gtid_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              statement_ = s;
              break;
            }
            case 42: {
              RowEvent.Builder subBuilder = null;
              if (rowEvent_ != null) {
                subBuilder = rowEvent_.toBuilder();
              }
              rowEvent_ = input.readMessage(RowEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rowEvent_);
                rowEvent_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              FieldEvent.Builder subBuilder = null;
              if (fieldEvent_ != null) {
                subBuilder = fieldEvent_.toBuilder();
              }
              fieldEvent_ = input.readMessage(FieldEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fieldEvent_);
                fieldEvent_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              VGtid.Builder subBuilder = null;
              if (vgtid_ != null) {
                subBuilder = vgtid_.toBuilder();
              }
              vgtid_ = input.readMessage(VGtid.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vgtid_);
                vgtid_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              Journal.Builder subBuilder = null;
              if (journal_ != null) {
                subBuilder = journal_.toBuilder();
              }
              journal_ = input.readMessage(Journal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(journal_);
                journal_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              dml_ = s;
              break;
            }
            case 160: {

              currentTime_ = input.readInt64();
              break;
            }
            case 170: {
              LastPKEvent.Builder subBuilder = null;
              if (lastPKEvent_ != null) {
                subBuilder = lastPKEvent_.toBuilder();
              }
              lastPKEvent_ = input.readMessage(LastPKEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastPKEvent_);
                lastPKEvent_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_VEvent_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_VEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VEvent.class, Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.binlogdata.VEventType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.binlogdata.VEventType type = 1;</code>
     */
    public VEventType getType() {
      VEventType result = VEventType.valueOf(type_);
      return result == null ? VEventType.UNRECOGNIZED : result;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <pre>
     * Timestamp is the binlog timestamp in seconds.
     * The value should be ignored if 0.
     * </pre>
     *
     * <code>int64 timestamp = 2;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int GTID_FIELD_NUMBER = 3;
    private volatile Object gtid_;
    /**
     * <pre>
     * Gtid is set if the event type is GTID.
     * </pre>
     *
     * <code>string gtid = 3;</code>
     */
    public String getGtid() {
      Object ref = gtid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        gtid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Gtid is set if the event type is GTID.
     * </pre>
     *
     * <code>string gtid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getGtidBytes() {
      Object ref = gtid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        gtid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATEMENT_FIELD_NUMBER = 4;
    private volatile Object statement_;
    /**
     * <pre>
     * Statement is set if the event type is DDL, DML or SAVEPOINT.
     * </pre>
     *
     * <code>string statement = 4;</code>
     */
    public String getStatement() {
      Object ref = statement_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        statement_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Statement is set if the event type is DDL, DML or SAVEPOINT.
     * </pre>
     *
     * <code>string statement = 4;</code>
     */
    public com.google.protobuf.ByteString
        getStatementBytes() {
      Object ref = statement_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        statement_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROW_EVENT_FIELD_NUMBER = 5;
    private RowEvent rowEvent_;
    /**
     * <pre>
     * RowEvent is set if the event type is ROW.
     * </pre>
     *
     * <code>.binlogdata.RowEvent row_event = 5;</code>
     */
    public boolean hasRowEvent() {
      return rowEvent_ != null;
    }
    /**
     * <pre>
     * RowEvent is set if the event type is ROW.
     * </pre>
     *
     * <code>.binlogdata.RowEvent row_event = 5;</code>
     */
    public RowEvent getRowEvent() {
      return rowEvent_ == null ? RowEvent.getDefaultInstance() : rowEvent_;
    }
    /**
     * <pre>
     * RowEvent is set if the event type is ROW.
     * </pre>
     *
     * <code>.binlogdata.RowEvent row_event = 5;</code>
     */
    public RowEventOrBuilder getRowEventOrBuilder() {
      return getRowEvent();
    }

    public static final int FIELD_EVENT_FIELD_NUMBER = 6;
    private FieldEvent fieldEvent_;
    /**
     * <pre>
     * FieldEvent is set if the event type is FIELD.
     * </pre>
     *
     * <code>.binlogdata.FieldEvent field_event = 6;</code>
     */
    public boolean hasFieldEvent() {
      return fieldEvent_ != null;
    }
    /**
     * <pre>
     * FieldEvent is set if the event type is FIELD.
     * </pre>
     *
     * <code>.binlogdata.FieldEvent field_event = 6;</code>
     */
    public FieldEvent getFieldEvent() {
      return fieldEvent_ == null ? FieldEvent.getDefaultInstance() : fieldEvent_;
    }
    /**
     * <pre>
     * FieldEvent is set if the event type is FIELD.
     * </pre>
     *
     * <code>.binlogdata.FieldEvent field_event = 6;</code>
     */
    public FieldEventOrBuilder getFieldEventOrBuilder() {
      return getFieldEvent();
    }

    public static final int VGTID_FIELD_NUMBER = 7;
    private VGtid vgtid_;
    /**
     * <pre>
     * Vgtid is set if the event type is VGTID.
     * This event is only generated by VTGate's VStream function.
     * </pre>
     *
     * <code>.binlogdata.VGtid vgtid = 7;</code>
     */
    public boolean hasVgtid() {
      return vgtid_ != null;
    }
    /**
     * <pre>
     * Vgtid is set if the event type is VGTID.
     * This event is only generated by VTGate's VStream function.
     * </pre>
     *
     * <code>.binlogdata.VGtid vgtid = 7;</code>
     */
    public VGtid getVgtid() {
      return vgtid_ == null ? VGtid.getDefaultInstance() : vgtid_;
    }
    /**
     * <pre>
     * Vgtid is set if the event type is VGTID.
     * This event is only generated by VTGate's VStream function.
     * </pre>
     *
     * <code>.binlogdata.VGtid vgtid = 7;</code>
     */
    public VGtidOrBuilder getVgtidOrBuilder() {
      return getVgtid();
    }

    public static final int JOURNAL_FIELD_NUMBER = 8;
    private Journal journal_;
    /**
     * <pre>
     * Journal is set if the event type is JOURNAL. 
     * </pre>
     *
     * <code>.binlogdata.Journal journal = 8;</code>
     */
    public boolean hasJournal() {
      return journal_ != null;
    }
    /**
     * <pre>
     * Journal is set if the event type is JOURNAL. 
     * </pre>
     *
     * <code>.binlogdata.Journal journal = 8;</code>
     */
    public Journal getJournal() {
      return journal_ == null ? Journal.getDefaultInstance() : journal_;
    }
    /**
     * <pre>
     * Journal is set if the event type is JOURNAL. 
     * </pre>
     *
     * <code>.binlogdata.Journal journal = 8;</code>
     */
    public JournalOrBuilder getJournalOrBuilder() {
      return getJournal();
    }

    public static final int DML_FIELD_NUMBER = 9;
    private volatile Object dml_;
    /**
     * <pre>
     * Dml is set if the event type is INSERT, REPLACE, UPDATE or DELETE.
     * </pre>
     *
     * <code>string dml = 9;</code>
     */
    public String getDml() {
      Object ref = dml_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dml_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Dml is set if the event type is INSERT, REPLACE, UPDATE or DELETE.
     * </pre>
     *
     * <code>string dml = 9;</code>
     */
    public com.google.protobuf.ByteString
        getDmlBytes() {
      Object ref = dml_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dml_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CURRENT_TIME_FIELD_NUMBER = 20;
    private long currentTime_;
    /**
     * <pre>
     * CurrentTime specifies the current time when the message was sent.
     * This can be used to compenssate for clock skew.
     * </pre>
     *
     * <code>int64 current_time = 20;</code>
     */
    public long getCurrentTime() {
      return currentTime_;
    }

    public static final int LAST_P_K_EVENT_FIELD_NUMBER = 21;
    private LastPKEvent lastPKEvent_;
    /**
     * <pre>
     * LastPK is the last PK for a table
     * </pre>
     *
     * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
     */
    public boolean hasLastPKEvent() {
      return lastPKEvent_ != null;
    }
    /**
     * <pre>
     * LastPK is the last PK for a table
     * </pre>
     *
     * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
     */
    public LastPKEvent getLastPKEvent() {
      return lastPKEvent_ == null ? LastPKEvent.getDefaultInstance() : lastPKEvent_;
    }
    /**
     * <pre>
     * LastPK is the last PK for a table
     * </pre>
     *
     * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
     */
    public LastPKEventOrBuilder getLastPKEventOrBuilder() {
      return getLastPKEvent();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != VEventType.UNKNOWN.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (timestamp_ != 0L) {
        output.writeInt64(2, timestamp_);
      }
      if (!getGtidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, gtid_);
      }
      if (!getStatementBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, statement_);
      }
      if (rowEvent_ != null) {
        output.writeMessage(5, getRowEvent());
      }
      if (fieldEvent_ != null) {
        output.writeMessage(6, getFieldEvent());
      }
      if (vgtid_ != null) {
        output.writeMessage(7, getVgtid());
      }
      if (journal_ != null) {
        output.writeMessage(8, getJournal());
      }
      if (!getDmlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, dml_);
      }
      if (currentTime_ != 0L) {
        output.writeInt64(20, currentTime_);
      }
      if (lastPKEvent_ != null) {
        output.writeMessage(21, getLastPKEvent());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != VEventType.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      if (!getGtidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, gtid_);
      }
      if (!getStatementBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, statement_);
      }
      if (rowEvent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getRowEvent());
      }
      if (fieldEvent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getFieldEvent());
      }
      if (vgtid_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getVgtid());
      }
      if (journal_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getJournal());
      }
      if (!getDmlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, dml_);
      }
      if (currentTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, currentTime_);
      }
      if (lastPKEvent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getLastPKEvent());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VEvent)) {
        return super.equals(obj);
      }
      VEvent other = (VEvent) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && getGtid()
          .equals(other.getGtid());
      result = result && getStatement()
          .equals(other.getStatement());
      result = result && (hasRowEvent() == other.hasRowEvent());
      if (hasRowEvent()) {
        result = result && getRowEvent()
            .equals(other.getRowEvent());
      }
      result = result && (hasFieldEvent() == other.hasFieldEvent());
      if (hasFieldEvent()) {
        result = result && getFieldEvent()
            .equals(other.getFieldEvent());
      }
      result = result && (hasVgtid() == other.hasVgtid());
      if (hasVgtid()) {
        result = result && getVgtid()
            .equals(other.getVgtid());
      }
      result = result && (hasJournal() == other.hasJournal());
      if (hasJournal()) {
        result = result && getJournal()
            .equals(other.getJournal());
      }
      result = result && getDml()
          .equals(other.getDml());
      result = result && (getCurrentTime()
          == other.getCurrentTime());
      result = result && (hasLastPKEvent() == other.hasLastPKEvent());
      if (hasLastPKEvent()) {
        result = result && getLastPKEvent()
            .equals(other.getLastPKEvent());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + GTID_FIELD_NUMBER;
      hash = (53 * hash) + getGtid().hashCode();
      hash = (37 * hash) + STATEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getStatement().hashCode();
      if (hasRowEvent()) {
        hash = (37 * hash) + ROW_EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getRowEvent().hashCode();
      }
      if (hasFieldEvent()) {
        hash = (37 * hash) + FIELD_EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getFieldEvent().hashCode();
      }
      if (hasVgtid()) {
        hash = (37 * hash) + VGTID_FIELD_NUMBER;
        hash = (53 * hash) + getVgtid().hashCode();
      }
      if (hasJournal()) {
        hash = (37 * hash) + JOURNAL_FIELD_NUMBER;
        hash = (53 * hash) + getJournal().hashCode();
      }
      hash = (37 * hash) + DML_FIELD_NUMBER;
      hash = (53 * hash) + getDml().hashCode();
      hash = (37 * hash) + CURRENT_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCurrentTime());
      if (hasLastPKEvent()) {
        hash = (37 * hash) + LAST_P_K_EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getLastPKEvent().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * VEvent represents a vstream event.
     * A FieldEvent is sent once for every table, just before
     * the first event for that table. The client is expected
     * to cache this information and match it against the RowEvent
     * which contains the table name.
     * A GTID event always precedes a commitable event, which can be
     * COMMIT, DDL or OTHER.
     * OTHER events are non-material events that have no additional metadata.
     * </pre>
     *
     * Protobuf type {@code binlogdata.VEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.VEvent)
        VEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_VEvent_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_VEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VEvent.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.VEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        timestamp_ = 0L;

        gtid_ = "";

        statement_ = "";

        if (rowEventBuilder_ == null) {
          rowEvent_ = null;
        } else {
          rowEvent_ = null;
          rowEventBuilder_ = null;
        }
        if (fieldEventBuilder_ == null) {
          fieldEvent_ = null;
        } else {
          fieldEvent_ = null;
          fieldEventBuilder_ = null;
        }
        if (vgtidBuilder_ == null) {
          vgtid_ = null;
        } else {
          vgtid_ = null;
          vgtidBuilder_ = null;
        }
        if (journalBuilder_ == null) {
          journal_ = null;
        } else {
          journal_ = null;
          journalBuilder_ = null;
        }
        dml_ = "";

        currentTime_ = 0L;

        if (lastPKEventBuilder_ == null) {
          lastPKEvent_ = null;
        } else {
          lastPKEvent_ = null;
          lastPKEventBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_VEvent_descriptor;
      }

      public VEvent getDefaultInstanceForType() {
        return VEvent.getDefaultInstance();
      }

      public VEvent build() {
        VEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VEvent buildPartial() {
        VEvent result = new VEvent(this);
        result.type_ = type_;
        result.timestamp_ = timestamp_;
        result.gtid_ = gtid_;
        result.statement_ = statement_;
        if (rowEventBuilder_ == null) {
          result.rowEvent_ = rowEvent_;
        } else {
          result.rowEvent_ = rowEventBuilder_.build();
        }
        if (fieldEventBuilder_ == null) {
          result.fieldEvent_ = fieldEvent_;
        } else {
          result.fieldEvent_ = fieldEventBuilder_.build();
        }
        if (vgtidBuilder_ == null) {
          result.vgtid_ = vgtid_;
        } else {
          result.vgtid_ = vgtidBuilder_.build();
        }
        if (journalBuilder_ == null) {
          result.journal_ = journal_;
        } else {
          result.journal_ = journalBuilder_.build();
        }
        result.dml_ = dml_;
        result.currentTime_ = currentTime_;
        if (lastPKEventBuilder_ == null) {
          result.lastPKEvent_ = lastPKEvent_;
        } else {
          result.lastPKEvent_ = lastPKEventBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VEvent) {
          return mergeFrom((VEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VEvent other) {
        if (other == VEvent.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (!other.getGtid().isEmpty()) {
          gtid_ = other.gtid_;
          onChanged();
        }
        if (!other.getStatement().isEmpty()) {
          statement_ = other.statement_;
          onChanged();
        }
        if (other.hasRowEvent()) {
          mergeRowEvent(other.getRowEvent());
        }
        if (other.hasFieldEvent()) {
          mergeFieldEvent(other.getFieldEvent());
        }
        if (other.hasVgtid()) {
          mergeVgtid(other.getVgtid());
        }
        if (other.hasJournal()) {
          mergeJournal(other.getJournal());
        }
        if (!other.getDml().isEmpty()) {
          dml_ = other.dml_;
          onChanged();
        }
        if (other.getCurrentTime() != 0L) {
          setCurrentTime(other.getCurrentTime());
        }
        if (other.hasLastPKEvent()) {
          mergeLastPKEvent(other.getLastPKEvent());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.binlogdata.VEventType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.binlogdata.VEventType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.binlogdata.VEventType type = 1;</code>
       */
      public VEventType getType() {
        VEventType result = VEventType.valueOf(type_);
        return result == null ? VEventType.UNRECOGNIZED : result;
      }
      /**
       * <code>.binlogdata.VEventType type = 1;</code>
       */
      public Builder setType(VEventType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.binlogdata.VEventType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <pre>
       * Timestamp is the binlog timestamp in seconds.
       * The value should be ignored if 0.
       * </pre>
       *
       * <code>int64 timestamp = 2;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * Timestamp is the binlog timestamp in seconds.
       * The value should be ignored if 0.
       * </pre>
       *
       * <code>int64 timestamp = 2;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp is the binlog timestamp in seconds.
       * The value should be ignored if 0.
       * </pre>
       *
       * <code>int64 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private Object gtid_ = "";
      /**
       * <pre>
       * Gtid is set if the event type is GTID.
       * </pre>
       *
       * <code>string gtid = 3;</code>
       */
      public String getGtid() {
        Object ref = gtid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          gtid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Gtid is set if the event type is GTID.
       * </pre>
       *
       * <code>string gtid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getGtidBytes() {
        Object ref = gtid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          gtid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Gtid is set if the event type is GTID.
       * </pre>
       *
       * <code>string gtid = 3;</code>
       */
      public Builder setGtid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gtid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Gtid is set if the event type is GTID.
       * </pre>
       *
       * <code>string gtid = 3;</code>
       */
      public Builder clearGtid() {
        
        gtid_ = getDefaultInstance().getGtid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Gtid is set if the event type is GTID.
       * </pre>
       *
       * <code>string gtid = 3;</code>
       */
      public Builder setGtidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gtid_ = value;
        onChanged();
        return this;
      }

      private Object statement_ = "";
      /**
       * <pre>
       * Statement is set if the event type is DDL, DML or SAVEPOINT.
       * </pre>
       *
       * <code>string statement = 4;</code>
       */
      public String getStatement() {
        Object ref = statement_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          statement_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Statement is set if the event type is DDL, DML or SAVEPOINT.
       * </pre>
       *
       * <code>string statement = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStatementBytes() {
        Object ref = statement_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          statement_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Statement is set if the event type is DDL, DML or SAVEPOINT.
       * </pre>
       *
       * <code>string statement = 4;</code>
       */
      public Builder setStatement(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        statement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Statement is set if the event type is DDL, DML or SAVEPOINT.
       * </pre>
       *
       * <code>string statement = 4;</code>
       */
      public Builder clearStatement() {
        
        statement_ = getDefaultInstance().getStatement();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Statement is set if the event type is DDL, DML or SAVEPOINT.
       * </pre>
       *
       * <code>string statement = 4;</code>
       */
      public Builder setStatementBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        statement_ = value;
        onChanged();
        return this;
      }

      private RowEvent rowEvent_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          RowEvent, RowEvent.Builder, RowEventOrBuilder> rowEventBuilder_;
      /**
       * <pre>
       * RowEvent is set if the event type is ROW.
       * </pre>
       *
       * <code>.binlogdata.RowEvent row_event = 5;</code>
       */
      public boolean hasRowEvent() {
        return rowEventBuilder_ != null || rowEvent_ != null;
      }
      /**
       * <pre>
       * RowEvent is set if the event type is ROW.
       * </pre>
       *
       * <code>.binlogdata.RowEvent row_event = 5;</code>
       */
      public RowEvent getRowEvent() {
        if (rowEventBuilder_ == null) {
          return rowEvent_ == null ? RowEvent.getDefaultInstance() : rowEvent_;
        } else {
          return rowEventBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * RowEvent is set if the event type is ROW.
       * </pre>
       *
       * <code>.binlogdata.RowEvent row_event = 5;</code>
       */
      public Builder setRowEvent(RowEvent value) {
        if (rowEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rowEvent_ = value;
          onChanged();
        } else {
          rowEventBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * RowEvent is set if the event type is ROW.
       * </pre>
       *
       * <code>.binlogdata.RowEvent row_event = 5;</code>
       */
      public Builder setRowEvent(
          RowEvent.Builder builderForValue) {
        if (rowEventBuilder_ == null) {
          rowEvent_ = builderForValue.build();
          onChanged();
        } else {
          rowEventBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * RowEvent is set if the event type is ROW.
       * </pre>
       *
       * <code>.binlogdata.RowEvent row_event = 5;</code>
       */
      public Builder mergeRowEvent(RowEvent value) {
        if (rowEventBuilder_ == null) {
          if (rowEvent_ != null) {
            rowEvent_ =
              RowEvent.newBuilder(rowEvent_).mergeFrom(value).buildPartial();
          } else {
            rowEvent_ = value;
          }
          onChanged();
        } else {
          rowEventBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * RowEvent is set if the event type is ROW.
       * </pre>
       *
       * <code>.binlogdata.RowEvent row_event = 5;</code>
       */
      public Builder clearRowEvent() {
        if (rowEventBuilder_ == null) {
          rowEvent_ = null;
          onChanged();
        } else {
          rowEvent_ = null;
          rowEventBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * RowEvent is set if the event type is ROW.
       * </pre>
       *
       * <code>.binlogdata.RowEvent row_event = 5;</code>
       */
      public RowEvent.Builder getRowEventBuilder() {
        
        onChanged();
        return getRowEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * RowEvent is set if the event type is ROW.
       * </pre>
       *
       * <code>.binlogdata.RowEvent row_event = 5;</code>
       */
      public RowEventOrBuilder getRowEventOrBuilder() {
        if (rowEventBuilder_ != null) {
          return rowEventBuilder_.getMessageOrBuilder();
        } else {
          return rowEvent_ == null ?
              RowEvent.getDefaultInstance() : rowEvent_;
        }
      }
      /**
       * <pre>
       * RowEvent is set if the event type is ROW.
       * </pre>
       *
       * <code>.binlogdata.RowEvent row_event = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RowEvent, RowEvent.Builder, RowEventOrBuilder>
          getRowEventFieldBuilder() {
        if (rowEventBuilder_ == null) {
          rowEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RowEvent, RowEvent.Builder, RowEventOrBuilder>(
                  getRowEvent(),
                  getParentForChildren(),
                  isClean());
          rowEvent_ = null;
        }
        return rowEventBuilder_;
      }

      private FieldEvent fieldEvent_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          FieldEvent, FieldEvent.Builder, FieldEventOrBuilder> fieldEventBuilder_;
      /**
       * <pre>
       * FieldEvent is set if the event type is FIELD.
       * </pre>
       *
       * <code>.binlogdata.FieldEvent field_event = 6;</code>
       */
      public boolean hasFieldEvent() {
        return fieldEventBuilder_ != null || fieldEvent_ != null;
      }
      /**
       * <pre>
       * FieldEvent is set if the event type is FIELD.
       * </pre>
       *
       * <code>.binlogdata.FieldEvent field_event = 6;</code>
       */
      public FieldEvent getFieldEvent() {
        if (fieldEventBuilder_ == null) {
          return fieldEvent_ == null ? FieldEvent.getDefaultInstance() : fieldEvent_;
        } else {
          return fieldEventBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * FieldEvent is set if the event type is FIELD.
       * </pre>
       *
       * <code>.binlogdata.FieldEvent field_event = 6;</code>
       */
      public Builder setFieldEvent(FieldEvent value) {
        if (fieldEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldEvent_ = value;
          onChanged();
        } else {
          fieldEventBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * FieldEvent is set if the event type is FIELD.
       * </pre>
       *
       * <code>.binlogdata.FieldEvent field_event = 6;</code>
       */
      public Builder setFieldEvent(
          FieldEvent.Builder builderForValue) {
        if (fieldEventBuilder_ == null) {
          fieldEvent_ = builderForValue.build();
          onChanged();
        } else {
          fieldEventBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * FieldEvent is set if the event type is FIELD.
       * </pre>
       *
       * <code>.binlogdata.FieldEvent field_event = 6;</code>
       */
      public Builder mergeFieldEvent(FieldEvent value) {
        if (fieldEventBuilder_ == null) {
          if (fieldEvent_ != null) {
            fieldEvent_ =
              FieldEvent.newBuilder(fieldEvent_).mergeFrom(value).buildPartial();
          } else {
            fieldEvent_ = value;
          }
          onChanged();
        } else {
          fieldEventBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * FieldEvent is set if the event type is FIELD.
       * </pre>
       *
       * <code>.binlogdata.FieldEvent field_event = 6;</code>
       */
      public Builder clearFieldEvent() {
        if (fieldEventBuilder_ == null) {
          fieldEvent_ = null;
          onChanged();
        } else {
          fieldEvent_ = null;
          fieldEventBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * FieldEvent is set if the event type is FIELD.
       * </pre>
       *
       * <code>.binlogdata.FieldEvent field_event = 6;</code>
       */
      public FieldEvent.Builder getFieldEventBuilder() {
        
        onChanged();
        return getFieldEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * FieldEvent is set if the event type is FIELD.
       * </pre>
       *
       * <code>.binlogdata.FieldEvent field_event = 6;</code>
       */
      public FieldEventOrBuilder getFieldEventOrBuilder() {
        if (fieldEventBuilder_ != null) {
          return fieldEventBuilder_.getMessageOrBuilder();
        } else {
          return fieldEvent_ == null ?
              FieldEvent.getDefaultInstance() : fieldEvent_;
        }
      }
      /**
       * <pre>
       * FieldEvent is set if the event type is FIELD.
       * </pre>
       *
       * <code>.binlogdata.FieldEvent field_event = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          FieldEvent, FieldEvent.Builder, FieldEventOrBuilder>
          getFieldEventFieldBuilder() {
        if (fieldEventBuilder_ == null) {
          fieldEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              FieldEvent, FieldEvent.Builder, FieldEventOrBuilder>(
                  getFieldEvent(),
                  getParentForChildren(),
                  isClean());
          fieldEvent_ = null;
        }
        return fieldEventBuilder_;
      }

      private VGtid vgtid_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          VGtid, VGtid.Builder, VGtidOrBuilder> vgtidBuilder_;
      /**
       * <pre>
       * Vgtid is set if the event type is VGTID.
       * This event is only generated by VTGate's VStream function.
       * </pre>
       *
       * <code>.binlogdata.VGtid vgtid = 7;</code>
       */
      public boolean hasVgtid() {
        return vgtidBuilder_ != null || vgtid_ != null;
      }
      /**
       * <pre>
       * Vgtid is set if the event type is VGTID.
       * This event is only generated by VTGate's VStream function.
       * </pre>
       *
       * <code>.binlogdata.VGtid vgtid = 7;</code>
       */
      public VGtid getVgtid() {
        if (vgtidBuilder_ == null) {
          return vgtid_ == null ? VGtid.getDefaultInstance() : vgtid_;
        } else {
          return vgtidBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Vgtid is set if the event type is VGTID.
       * This event is only generated by VTGate's VStream function.
       * </pre>
       *
       * <code>.binlogdata.VGtid vgtid = 7;</code>
       */
      public Builder setVgtid(VGtid value) {
        if (vgtidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vgtid_ = value;
          onChanged();
        } else {
          vgtidBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Vgtid is set if the event type is VGTID.
       * This event is only generated by VTGate's VStream function.
       * </pre>
       *
       * <code>.binlogdata.VGtid vgtid = 7;</code>
       */
      public Builder setVgtid(
          VGtid.Builder builderForValue) {
        if (vgtidBuilder_ == null) {
          vgtid_ = builderForValue.build();
          onChanged();
        } else {
          vgtidBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Vgtid is set if the event type is VGTID.
       * This event is only generated by VTGate's VStream function.
       * </pre>
       *
       * <code>.binlogdata.VGtid vgtid = 7;</code>
       */
      public Builder mergeVgtid(VGtid value) {
        if (vgtidBuilder_ == null) {
          if (vgtid_ != null) {
            vgtid_ =
              VGtid.newBuilder(vgtid_).mergeFrom(value).buildPartial();
          } else {
            vgtid_ = value;
          }
          onChanged();
        } else {
          vgtidBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Vgtid is set if the event type is VGTID.
       * This event is only generated by VTGate's VStream function.
       * </pre>
       *
       * <code>.binlogdata.VGtid vgtid = 7;</code>
       */
      public Builder clearVgtid() {
        if (vgtidBuilder_ == null) {
          vgtid_ = null;
          onChanged();
        } else {
          vgtid_ = null;
          vgtidBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Vgtid is set if the event type is VGTID.
       * This event is only generated by VTGate's VStream function.
       * </pre>
       *
       * <code>.binlogdata.VGtid vgtid = 7;</code>
       */
      public VGtid.Builder getVgtidBuilder() {
        
        onChanged();
        return getVgtidFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Vgtid is set if the event type is VGTID.
       * This event is only generated by VTGate's VStream function.
       * </pre>
       *
       * <code>.binlogdata.VGtid vgtid = 7;</code>
       */
      public VGtidOrBuilder getVgtidOrBuilder() {
        if (vgtidBuilder_ != null) {
          return vgtidBuilder_.getMessageOrBuilder();
        } else {
          return vgtid_ == null ?
              VGtid.getDefaultInstance() : vgtid_;
        }
      }
      /**
       * <pre>
       * Vgtid is set if the event type is VGTID.
       * This event is only generated by VTGate's VStream function.
       * </pre>
       *
       * <code>.binlogdata.VGtid vgtid = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          VGtid, VGtid.Builder, VGtidOrBuilder>
          getVgtidFieldBuilder() {
        if (vgtidBuilder_ == null) {
          vgtidBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              VGtid, VGtid.Builder, VGtidOrBuilder>(
                  getVgtid(),
                  getParentForChildren(),
                  isClean());
          vgtid_ = null;
        }
        return vgtidBuilder_;
      }

      private Journal journal_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          Journal, Journal.Builder, JournalOrBuilder> journalBuilder_;
      /**
       * <pre>
       * Journal is set if the event type is JOURNAL. 
       * </pre>
       *
       * <code>.binlogdata.Journal journal = 8;</code>
       */
      public boolean hasJournal() {
        return journalBuilder_ != null || journal_ != null;
      }
      /**
       * <pre>
       * Journal is set if the event type is JOURNAL. 
       * </pre>
       *
       * <code>.binlogdata.Journal journal = 8;</code>
       */
      public Journal getJournal() {
        if (journalBuilder_ == null) {
          return journal_ == null ? Journal.getDefaultInstance() : journal_;
        } else {
          return journalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Journal is set if the event type is JOURNAL. 
       * </pre>
       *
       * <code>.binlogdata.Journal journal = 8;</code>
       */
      public Builder setJournal(Journal value) {
        if (journalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          journal_ = value;
          onChanged();
        } else {
          journalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Journal is set if the event type is JOURNAL. 
       * </pre>
       *
       * <code>.binlogdata.Journal journal = 8;</code>
       */
      public Builder setJournal(
          Journal.Builder builderForValue) {
        if (journalBuilder_ == null) {
          journal_ = builderForValue.build();
          onChanged();
        } else {
          journalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Journal is set if the event type is JOURNAL. 
       * </pre>
       *
       * <code>.binlogdata.Journal journal = 8;</code>
       */
      public Builder mergeJournal(Journal value) {
        if (journalBuilder_ == null) {
          if (journal_ != null) {
            journal_ =
              Journal.newBuilder(journal_).mergeFrom(value).buildPartial();
          } else {
            journal_ = value;
          }
          onChanged();
        } else {
          journalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Journal is set if the event type is JOURNAL. 
       * </pre>
       *
       * <code>.binlogdata.Journal journal = 8;</code>
       */
      public Builder clearJournal() {
        if (journalBuilder_ == null) {
          journal_ = null;
          onChanged();
        } else {
          journal_ = null;
          journalBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Journal is set if the event type is JOURNAL. 
       * </pre>
       *
       * <code>.binlogdata.Journal journal = 8;</code>
       */
      public Journal.Builder getJournalBuilder() {
        
        onChanged();
        return getJournalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Journal is set if the event type is JOURNAL. 
       * </pre>
       *
       * <code>.binlogdata.Journal journal = 8;</code>
       */
      public JournalOrBuilder getJournalOrBuilder() {
        if (journalBuilder_ != null) {
          return journalBuilder_.getMessageOrBuilder();
        } else {
          return journal_ == null ?
              Journal.getDefaultInstance() : journal_;
        }
      }
      /**
       * <pre>
       * Journal is set if the event type is JOURNAL. 
       * </pre>
       *
       * <code>.binlogdata.Journal journal = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Journal, Journal.Builder, JournalOrBuilder>
          getJournalFieldBuilder() {
        if (journalBuilder_ == null) {
          journalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Journal, Journal.Builder, JournalOrBuilder>(
                  getJournal(),
                  getParentForChildren(),
                  isClean());
          journal_ = null;
        }
        return journalBuilder_;
      }

      private Object dml_ = "";
      /**
       * <pre>
       * Dml is set if the event type is INSERT, REPLACE, UPDATE or DELETE.
       * </pre>
       *
       * <code>string dml = 9;</code>
       */
      public String getDml() {
        Object ref = dml_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          dml_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Dml is set if the event type is INSERT, REPLACE, UPDATE or DELETE.
       * </pre>
       *
       * <code>string dml = 9;</code>
       */
      public com.google.protobuf.ByteString
          getDmlBytes() {
        Object ref = dml_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dml_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Dml is set if the event type is INSERT, REPLACE, UPDATE or DELETE.
       * </pre>
       *
       * <code>string dml = 9;</code>
       */
      public Builder setDml(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dml_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dml is set if the event type is INSERT, REPLACE, UPDATE or DELETE.
       * </pre>
       *
       * <code>string dml = 9;</code>
       */
      public Builder clearDml() {
        
        dml_ = getDefaultInstance().getDml();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dml is set if the event type is INSERT, REPLACE, UPDATE or DELETE.
       * </pre>
       *
       * <code>string dml = 9;</code>
       */
      public Builder setDmlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dml_ = value;
        onChanged();
        return this;
      }

      private long currentTime_ ;
      /**
       * <pre>
       * CurrentTime specifies the current time when the message was sent.
       * This can be used to compenssate for clock skew.
       * </pre>
       *
       * <code>int64 current_time = 20;</code>
       */
      public long getCurrentTime() {
        return currentTime_;
      }
      /**
       * <pre>
       * CurrentTime specifies the current time when the message was sent.
       * This can be used to compenssate for clock skew.
       * </pre>
       *
       * <code>int64 current_time = 20;</code>
       */
      public Builder setCurrentTime(long value) {
        
        currentTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * CurrentTime specifies the current time when the message was sent.
       * This can be used to compenssate for clock skew.
       * </pre>
       *
       * <code>int64 current_time = 20;</code>
       */
      public Builder clearCurrentTime() {
        
        currentTime_ = 0L;
        onChanged();
        return this;
      }

      private LastPKEvent lastPKEvent_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          LastPKEvent, LastPKEvent.Builder, LastPKEventOrBuilder> lastPKEventBuilder_;
      /**
       * <pre>
       * LastPK is the last PK for a table
       * </pre>
       *
       * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
       */
      public boolean hasLastPKEvent() {
        return lastPKEventBuilder_ != null || lastPKEvent_ != null;
      }
      /**
       * <pre>
       * LastPK is the last PK for a table
       * </pre>
       *
       * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
       */
      public LastPKEvent getLastPKEvent() {
        if (lastPKEventBuilder_ == null) {
          return lastPKEvent_ == null ? LastPKEvent.getDefaultInstance() : lastPKEvent_;
        } else {
          return lastPKEventBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * LastPK is the last PK for a table
       * </pre>
       *
       * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
       */
      public Builder setLastPKEvent(LastPKEvent value) {
        if (lastPKEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastPKEvent_ = value;
          onChanged();
        } else {
          lastPKEventBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * LastPK is the last PK for a table
       * </pre>
       *
       * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
       */
      public Builder setLastPKEvent(
          LastPKEvent.Builder builderForValue) {
        if (lastPKEventBuilder_ == null) {
          lastPKEvent_ = builderForValue.build();
          onChanged();
        } else {
          lastPKEventBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * LastPK is the last PK for a table
       * </pre>
       *
       * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
       */
      public Builder mergeLastPKEvent(LastPKEvent value) {
        if (lastPKEventBuilder_ == null) {
          if (lastPKEvent_ != null) {
            lastPKEvent_ =
              LastPKEvent.newBuilder(lastPKEvent_).mergeFrom(value).buildPartial();
          } else {
            lastPKEvent_ = value;
          }
          onChanged();
        } else {
          lastPKEventBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * LastPK is the last PK for a table
       * </pre>
       *
       * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
       */
      public Builder clearLastPKEvent() {
        if (lastPKEventBuilder_ == null) {
          lastPKEvent_ = null;
          onChanged();
        } else {
          lastPKEvent_ = null;
          lastPKEventBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * LastPK is the last PK for a table
       * </pre>
       *
       * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
       */
      public LastPKEvent.Builder getLastPKEventBuilder() {
        
        onChanged();
        return getLastPKEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * LastPK is the last PK for a table
       * </pre>
       *
       * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
       */
      public LastPKEventOrBuilder getLastPKEventOrBuilder() {
        if (lastPKEventBuilder_ != null) {
          return lastPKEventBuilder_.getMessageOrBuilder();
        } else {
          return lastPKEvent_ == null ?
              LastPKEvent.getDefaultInstance() : lastPKEvent_;
        }
      }
      /**
       * <pre>
       * LastPK is the last PK for a table
       * </pre>
       *
       * <code>.binlogdata.LastPKEvent last_p_k_event = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          LastPKEvent, LastPKEvent.Builder, LastPKEventOrBuilder>
          getLastPKEventFieldBuilder() {
        if (lastPKEventBuilder_ == null) {
          lastPKEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              LastPKEvent, LastPKEvent.Builder, LastPKEventOrBuilder>(
                  getLastPKEvent(),
                  getParentForChildren(),
                  isClean());
          lastPKEvent_ = null;
        }
        return lastPKEventBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.VEvent)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.VEvent)
    private static final VEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VEvent();
    }

    public static VEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VEvent>
        PARSER = new com.google.protobuf.AbstractParser<VEvent>() {
      public VEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VEvent> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VEvent> getParserForType() {
      return PARSER;
    }

    public VEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MinimalTableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.MinimalTable)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    java.util.List<io.vitess.proto.Query.Field> 
        getFieldsList();
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    io.vitess.proto.Query.Field getFields(int index);
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <code>repeated int64 p_k_columns = 3;</code>
     */
    java.util.List<Long> getPKColumnsList();
    /**
     * <code>repeated int64 p_k_columns = 3;</code>
     */
    int getPKColumnsCount();
    /**
     * <code>repeated int64 p_k_columns = 3;</code>
     */
    long getPKColumns(int index);
  }
  /**
   * Protobuf type {@code binlogdata.MinimalTable}
   */
  public  static final class MinimalTable extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.MinimalTable)
      MinimalTableOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MinimalTable.newBuilder() to construct.
    private MinimalTable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MinimalTable() {
      name_ = "";
      fields_ = java.util.Collections.emptyList();
      pKColumns_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MinimalTable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>();
                mutable_bitField0_ |= 0x00000002;
              }
              fields_.add(
                  input.readMessage(io.vitess.proto.Query.Field.parser(), extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                pKColumns_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              pKColumns_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                pKColumns_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                pKColumns_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          pKColumns_ = java.util.Collections.unmodifiableList(pKColumns_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_MinimalTable_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_MinimalTable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MinimalTable.class, Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 2;
    private java.util.List<io.vitess.proto.Query.Field> fields_;
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public java.util.List<io.vitess.proto.Query.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public io.vitess.proto.Query.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .query.Field fields = 2;</code>
     */
    public io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int P_K_COLUMNS_FIELD_NUMBER = 3;
    private java.util.List<Long> pKColumns_;
    /**
     * <code>repeated int64 p_k_columns = 3;</code>
     */
    public java.util.List<Long>
        getPKColumnsList() {
      return pKColumns_;
    }
    /**
     * <code>repeated int64 p_k_columns = 3;</code>
     */
    public int getPKColumnsCount() {
      return pKColumns_.size();
    }
    /**
     * <code>repeated int64 p_k_columns = 3;</code>
     */
    public long getPKColumns(int index) {
      return pKColumns_.get(index);
    }
    private int pKColumnsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(2, fields_.get(i));
      }
      if (getPKColumnsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(pKColumnsMemoizedSerializedSize);
      }
      for (int i = 0; i < pKColumns_.size(); i++) {
        output.writeInt64NoTag(pKColumns_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fields_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pKColumns_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(pKColumns_.get(i));
        }
        size += dataSize;
        if (!getPKColumnsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        pKColumnsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MinimalTable)) {
        return super.equals(obj);
      }
      MinimalTable other = (MinimalTable) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && getPKColumnsList()
          .equals(other.getPKColumnsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      if (getPKColumnsCount() > 0) {
        hash = (37 * hash) + P_K_COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getPKColumnsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MinimalTable parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MinimalTable parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MinimalTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MinimalTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MinimalTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MinimalTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MinimalTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MinimalTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MinimalTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MinimalTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MinimalTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MinimalTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MinimalTable prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code binlogdata.MinimalTable}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.MinimalTable)
        MinimalTableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_MinimalTable_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_MinimalTable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MinimalTable.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.MinimalTable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fieldsBuilder_.clear();
        }
        pKColumns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_MinimalTable_descriptor;
      }

      public MinimalTable getDefaultInstanceForType() {
        return MinimalTable.getDefaultInstance();
      }

      public MinimalTable build() {
        MinimalTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MinimalTable buildPartial() {
        MinimalTable result = new MinimalTable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          pKColumns_ = java.util.Collections.unmodifiableList(pKColumns_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.pKColumns_ = pKColumns_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MinimalTable) {
          return mergeFrom((MinimalTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MinimalTable other) {
        if (other == MinimalTable.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (!other.pKColumns_.isEmpty()) {
          if (pKColumns_.isEmpty()) {
            pKColumns_ = other.pKColumns_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePKColumnsIsMutable();
            pKColumns_.addAll(other.pKColumns_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MinimalTable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MinimalTable) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<io.vitess.proto.Query.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          fields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>(fields_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder setFields(
          int index, io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder setFields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addFields(io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addFields(
          int index, io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addFields(
          io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addFields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder addAllFields(
          Iterable<? extends io.vitess.proto.Query.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public io.vitess.proto.Query.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field fields = 2;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private java.util.List<Long> pKColumns_ = java.util.Collections.emptyList();
      private void ensurePKColumnsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          pKColumns_ = new java.util.ArrayList<Long>(pKColumns_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int64 p_k_columns = 3;</code>
       */
      public java.util.List<Long>
          getPKColumnsList() {
        return java.util.Collections.unmodifiableList(pKColumns_);
      }
      /**
       * <code>repeated int64 p_k_columns = 3;</code>
       */
      public int getPKColumnsCount() {
        return pKColumns_.size();
      }
      /**
       * <code>repeated int64 p_k_columns = 3;</code>
       */
      public long getPKColumns(int index) {
        return pKColumns_.get(index);
      }
      /**
       * <code>repeated int64 p_k_columns = 3;</code>
       */
      public Builder setPKColumns(
          int index, long value) {
        ensurePKColumnsIsMutable();
        pKColumns_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 p_k_columns = 3;</code>
       */
      public Builder addPKColumns(long value) {
        ensurePKColumnsIsMutable();
        pKColumns_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 p_k_columns = 3;</code>
       */
      public Builder addAllPKColumns(
          Iterable<? extends Long> values) {
        ensurePKColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pKColumns_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 p_k_columns = 3;</code>
       */
      public Builder clearPKColumns() {
        pKColumns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.MinimalTable)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.MinimalTable)
    private static final MinimalTable DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MinimalTable();
    }

    public static MinimalTable getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MinimalTable>
        PARSER = new com.google.protobuf.AbstractParser<MinimalTable>() {
      public MinimalTable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MinimalTable(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MinimalTable> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MinimalTable> getParserForType() {
      return PARSER;
    }

    public MinimalTable getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MinimalSchemaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.MinimalSchema)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    java.util.List<MinimalTable>
        getTablesList();
    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    MinimalTable getTables(int index);
    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    int getTablesCount();
    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    java.util.List<? extends MinimalTableOrBuilder>
        getTablesOrBuilderList();
    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    MinimalTableOrBuilder getTablesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code binlogdata.MinimalSchema}
   */
  public  static final class MinimalSchema extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.MinimalSchema)
      MinimalSchemaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MinimalSchema.newBuilder() to construct.
    private MinimalSchema(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MinimalSchema() {
      tables_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MinimalSchema(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tables_ = new java.util.ArrayList<MinimalTable>();
                mutable_bitField0_ |= 0x00000001;
              }
              tables_.add(
                  input.readMessage(MinimalTable.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tables_ = java.util.Collections.unmodifiableList(tables_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_MinimalSchema_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_MinimalSchema_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MinimalSchema.class, Builder.class);
    }

    public static final int TABLES_FIELD_NUMBER = 1;
    private java.util.List<MinimalTable> tables_;
    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    public java.util.List<MinimalTable> getTablesList() {
      return tables_;
    }
    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    public java.util.List<? extends MinimalTableOrBuilder>
        getTablesOrBuilderList() {
      return tables_;
    }
    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    public MinimalTable getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
     */
    public MinimalTableOrBuilder getTablesOrBuilder(
        int index) {
      return tables_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tables_.size(); i++) {
        output.writeMessage(1, tables_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tables_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MinimalSchema)) {
        return super.equals(obj);
      }
      MinimalSchema other = (MinimalSchema) obj;

      boolean result = true;
      result = result && getTablesList()
          .equals(other.getTablesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MinimalSchema parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MinimalSchema parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MinimalSchema parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MinimalSchema parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MinimalSchema parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MinimalSchema parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MinimalSchema parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MinimalSchema parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MinimalSchema parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MinimalSchema parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MinimalSchema parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MinimalSchema parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MinimalSchema prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code binlogdata.MinimalSchema}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.MinimalSchema)
        MinimalSchemaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_MinimalSchema_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_MinimalSchema_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MinimalSchema.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.MinimalSchema.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTablesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_MinimalSchema_descriptor;
      }

      public MinimalSchema getDefaultInstanceForType() {
        return MinimalSchema.getDefaultInstance();
      }

      public MinimalSchema build() {
        MinimalSchema result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MinimalSchema buildPartial() {
        MinimalSchema result = new MinimalSchema(this);
        int from_bitField0_ = bitField0_;
        if (tablesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tables_ = tables_;
        } else {
          result.tables_ = tablesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MinimalSchema) {
          return mergeFrom((MinimalSchema)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MinimalSchema other) {
        if (other == MinimalSchema.getDefaultInstance()) return this;
        if (tablesBuilder_ == null) {
          if (!other.tables_.isEmpty()) {
            if (tables_.isEmpty()) {
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTablesIsMutable();
              tables_.addAll(other.tables_);
            }
            onChanged();
          }
        } else {
          if (!other.tables_.isEmpty()) {
            if (tablesBuilder_.isEmpty()) {
              tablesBuilder_.dispose();
              tablesBuilder_ = null;
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablesFieldBuilder() : null;
            } else {
              tablesBuilder_.addAllMessages(other.tables_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MinimalSchema parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MinimalSchema) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<MinimalTable> tables_ =
        java.util.Collections.emptyList();
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tables_ = new java.util.ArrayList<MinimalTable>(tables_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MinimalTable, MinimalTable.Builder, MinimalTableOrBuilder> tablesBuilder_;

      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public java.util.List<MinimalTable> getTablesList() {
        if (tablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tables_);
        } else {
          return tablesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public int getTablesCount() {
        if (tablesBuilder_ == null) {
          return tables_.size();
        } else {
          return tablesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public MinimalTable getTables(int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);
        } else {
          return tablesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public Builder setTables(
          int index, MinimalTable value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.set(index, value);
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public Builder setTables(
          int index, MinimalTable.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public Builder addTables(MinimalTable value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public Builder addTables(
          int index, MinimalTable value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(index, value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public Builder addTables(
          MinimalTable.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public Builder addTables(
          int index, MinimalTable.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public Builder addAllTables(
          Iterable<? extends MinimalTable> values) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tables_);
          onChanged();
        } else {
          tablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public Builder clearTables() {
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public Builder removeTables(int index) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.remove(index);
          onChanged();
        } else {
          tablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public MinimalTable.Builder getTablesBuilder(
          int index) {
        return getTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public MinimalTableOrBuilder getTablesOrBuilder(
          int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);  } else {
          return tablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public java.util.List<? extends MinimalTableOrBuilder>
           getTablesOrBuilderList() {
        if (tablesBuilder_ != null) {
          return tablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tables_);
        }
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public MinimalTable.Builder addTablesBuilder() {
        return getTablesFieldBuilder().addBuilder(
            MinimalTable.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public MinimalTable.Builder addTablesBuilder(
          int index) {
        return getTablesFieldBuilder().addBuilder(
            index, MinimalTable.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.MinimalTable tables = 1;</code>
       */
      public java.util.List<MinimalTable.Builder>
           getTablesBuilderList() {
        return getTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MinimalTable, MinimalTable.Builder, MinimalTableOrBuilder>
          getTablesFieldBuilder() {
        if (tablesBuilder_ == null) {
          tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MinimalTable, MinimalTable.Builder, MinimalTableOrBuilder>(
                  tables_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          tables_ = null;
        }
        return tablesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.MinimalSchema)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.MinimalSchema)
    private static final MinimalSchema DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MinimalSchema();
    }

    public static MinimalSchema getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MinimalSchema>
        PARSER = new com.google.protobuf.AbstractParser<MinimalSchema>() {
      public MinimalSchema parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MinimalSchema(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MinimalSchema> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MinimalSchema> getParserForType() {
      return PARSER;
    }

    public MinimalSchema getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VStreamRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.VStreamRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    boolean hasEffectiveCallerId();
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    io.vitess.proto.Vtrpc.CallerID getEffectiveCallerId();
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    io.vitess.proto.Vtrpc.CallerIDOrBuilder getEffectiveCallerIdOrBuilder();

    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    boolean hasImmediateCallerId();
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    io.vitess.proto.Query.VTGateCallerID getImmediateCallerId();
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    io.vitess.proto.Query.VTGateCallerIDOrBuilder getImmediateCallerIdOrBuilder();

    /**
     * <code>.query.Target target = 3;</code>
     */
    boolean hasTarget();
    /**
     * <code>.query.Target target = 3;</code>
     */
    io.vitess.proto.Query.Target getTarget();
    /**
     * <code>.query.Target target = 3;</code>
     */
    io.vitess.proto.Query.TargetOrBuilder getTargetOrBuilder();

    /**
     * <code>string position = 4;</code>
     */
    String getPosition();
    /**
     * <code>string position = 4;</code>
     */
    com.google.protobuf.ByteString
        getPositionBytes();

    /**
     * <code>.binlogdata.Filter filter = 5;</code>
     */
    boolean hasFilter();
    /**
     * <code>.binlogdata.Filter filter = 5;</code>
     */
    Filter getFilter();
    /**
     * <code>.binlogdata.Filter filter = 5;</code>
     */
    FilterOrBuilder getFilterOrBuilder();

    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    java.util.List<TableLastPK>
        getTableLastPKsList();
    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    TableLastPK getTableLastPKs(int index);
    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    int getTableLastPKsCount();
    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    java.util.List<? extends TableLastPKOrBuilder>
        getTableLastPKsOrBuilderList();
    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    TableLastPKOrBuilder getTableLastPKsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * VStreamRequest is the payload for VStreamer
   * </pre>
   *
   * Protobuf type {@code binlogdata.VStreamRequest}
   */
  public  static final class VStreamRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.VStreamRequest)
      VStreamRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VStreamRequest.newBuilder() to construct.
    private VStreamRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VStreamRequest() {
      position_ = "";
      tableLastPKs_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VStreamRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.vitess.proto.Vtrpc.CallerID.Builder subBuilder = null;
              if (effectiveCallerId_ != null) {
                subBuilder = effectiveCallerId_.toBuilder();
              }
              effectiveCallerId_ = input.readMessage(io.vitess.proto.Vtrpc.CallerID.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveCallerId_);
                effectiveCallerId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.vitess.proto.Query.VTGateCallerID.Builder subBuilder = null;
              if (immediateCallerId_ != null) {
                subBuilder = immediateCallerId_.toBuilder();
              }
              immediateCallerId_ = input.readMessage(io.vitess.proto.Query.VTGateCallerID.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(immediateCallerId_);
                immediateCallerId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.vitess.proto.Query.Target.Builder subBuilder = null;
              if (target_ != null) {
                subBuilder = target_.toBuilder();
              }
              target_ = input.readMessage(io.vitess.proto.Query.Target.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(target_);
                target_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              position_ = s;
              break;
            }
            case 42: {
              Filter.Builder subBuilder = null;
              if (filter_ != null) {
                subBuilder = filter_.toBuilder();
              }
              filter_ = input.readMessage(Filter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filter_);
                filter_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                tableLastPKs_ = new java.util.ArrayList<TableLastPK>();
                mutable_bitField0_ |= 0x00000020;
              }
              tableLastPKs_.add(
                  input.readMessage(TableLastPK.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          tableLastPKs_ = java.util.Collections.unmodifiableList(tableLastPKs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_VStreamRequest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_VStreamRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VStreamRequest.class, Builder.class);
    }

    private int bitField0_;
    public static final int EFFECTIVE_CALLER_ID_FIELD_NUMBER = 1;
    private io.vitess.proto.Vtrpc.CallerID effectiveCallerId_;
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    public boolean hasEffectiveCallerId() {
      return effectiveCallerId_ != null;
    }
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    public io.vitess.proto.Vtrpc.CallerID getEffectiveCallerId() {
      return effectiveCallerId_ == null ? io.vitess.proto.Vtrpc.CallerID.getDefaultInstance() : effectiveCallerId_;
    }
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    public io.vitess.proto.Vtrpc.CallerIDOrBuilder getEffectiveCallerIdOrBuilder() {
      return getEffectiveCallerId();
    }

    public static final int IMMEDIATE_CALLER_ID_FIELD_NUMBER = 2;
    private io.vitess.proto.Query.VTGateCallerID immediateCallerId_;
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    public boolean hasImmediateCallerId() {
      return immediateCallerId_ != null;
    }
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    public io.vitess.proto.Query.VTGateCallerID getImmediateCallerId() {
      return immediateCallerId_ == null ? io.vitess.proto.Query.VTGateCallerID.getDefaultInstance() : immediateCallerId_;
    }
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    public io.vitess.proto.Query.VTGateCallerIDOrBuilder getImmediateCallerIdOrBuilder() {
      return getImmediateCallerId();
    }

    public static final int TARGET_FIELD_NUMBER = 3;
    private io.vitess.proto.Query.Target target_;
    /**
     * <code>.query.Target target = 3;</code>
     */
    public boolean hasTarget() {
      return target_ != null;
    }
    /**
     * <code>.query.Target target = 3;</code>
     */
    public io.vitess.proto.Query.Target getTarget() {
      return target_ == null ? io.vitess.proto.Query.Target.getDefaultInstance() : target_;
    }
    /**
     * <code>.query.Target target = 3;</code>
     */
    public io.vitess.proto.Query.TargetOrBuilder getTargetOrBuilder() {
      return getTarget();
    }

    public static final int POSITION_FIELD_NUMBER = 4;
    private volatile Object position_;
    /**
     * <code>string position = 4;</code>
     */
    public String getPosition() {
      Object ref = position_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        position_ = s;
        return s;
      }
    }
    /**
     * <code>string position = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPositionBytes() {
      Object ref = position_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        position_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_FIELD_NUMBER = 5;
    private Filter filter_;
    /**
     * <code>.binlogdata.Filter filter = 5;</code>
     */
    public boolean hasFilter() {
      return filter_ != null;
    }
    /**
     * <code>.binlogdata.Filter filter = 5;</code>
     */
    public Filter getFilter() {
      return filter_ == null ? Filter.getDefaultInstance() : filter_;
    }
    /**
     * <code>.binlogdata.Filter filter = 5;</code>
     */
    public FilterOrBuilder getFilterOrBuilder() {
      return getFilter();
    }

    public static final int TABLE_LAST_P_KS_FIELD_NUMBER = 6;
    private java.util.List<TableLastPK> tableLastPKs_;
    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    public java.util.List<TableLastPK> getTableLastPKsList() {
      return tableLastPKs_;
    }
    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    public java.util.List<? extends TableLastPKOrBuilder>
        getTableLastPKsOrBuilderList() {
      return tableLastPKs_;
    }
    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    public int getTableLastPKsCount() {
      return tableLastPKs_.size();
    }
    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    public TableLastPK getTableLastPKs(int index) {
      return tableLastPKs_.get(index);
    }
    /**
     * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
     */
    public TableLastPKOrBuilder getTableLastPKsOrBuilder(
        int index) {
      return tableLastPKs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveCallerId_ != null) {
        output.writeMessage(1, getEffectiveCallerId());
      }
      if (immediateCallerId_ != null) {
        output.writeMessage(2, getImmediateCallerId());
      }
      if (target_ != null) {
        output.writeMessage(3, getTarget());
      }
      if (!getPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, position_);
      }
      if (filter_ != null) {
        output.writeMessage(5, getFilter());
      }
      for (int i = 0; i < tableLastPKs_.size(); i++) {
        output.writeMessage(6, tableLastPKs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveCallerId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveCallerId());
      }
      if (immediateCallerId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImmediateCallerId());
      }
      if (target_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTarget());
      }
      if (!getPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, position_);
      }
      if (filter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getFilter());
      }
      for (int i = 0; i < tableLastPKs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, tableLastPKs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VStreamRequest)) {
        return super.equals(obj);
      }
      VStreamRequest other = (VStreamRequest) obj;

      boolean result = true;
      result = result && (hasEffectiveCallerId() == other.hasEffectiveCallerId());
      if (hasEffectiveCallerId()) {
        result = result && getEffectiveCallerId()
            .equals(other.getEffectiveCallerId());
      }
      result = result && (hasImmediateCallerId() == other.hasImmediateCallerId());
      if (hasImmediateCallerId()) {
        result = result && getImmediateCallerId()
            .equals(other.getImmediateCallerId());
      }
      result = result && (hasTarget() == other.hasTarget());
      if (hasTarget()) {
        result = result && getTarget()
            .equals(other.getTarget());
      }
      result = result && getPosition()
          .equals(other.getPosition());
      result = result && (hasFilter() == other.hasFilter());
      if (hasFilter()) {
        result = result && getFilter()
            .equals(other.getFilter());
      }
      result = result && getTableLastPKsList()
          .equals(other.getTableLastPKsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveCallerId()) {
        hash = (37 * hash) + EFFECTIVE_CALLER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveCallerId().hashCode();
      }
      if (hasImmediateCallerId()) {
        hash = (37 * hash) + IMMEDIATE_CALLER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getImmediateCallerId().hashCode();
      }
      if (hasTarget()) {
        hash = (37 * hash) + TARGET_FIELD_NUMBER;
        hash = (53 * hash) + getTarget().hashCode();
      }
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition().hashCode();
      if (hasFilter()) {
        hash = (37 * hash) + FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getFilter().hashCode();
      }
      if (getTableLastPKsCount() > 0) {
        hash = (37 * hash) + TABLE_LAST_P_KS_FIELD_NUMBER;
        hash = (53 * hash) + getTableLastPKsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VStreamRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VStreamRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VStreamRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * VStreamRequest is the payload for VStreamer
     * </pre>
     *
     * Protobuf type {@code binlogdata.VStreamRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.VStreamRequest)
        VStreamRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_VStreamRequest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_VStreamRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VStreamRequest.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.VStreamRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTableLastPKsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerId_ = null;
        } else {
          effectiveCallerId_ = null;
          effectiveCallerIdBuilder_ = null;
        }
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerId_ = null;
        } else {
          immediateCallerId_ = null;
          immediateCallerIdBuilder_ = null;
        }
        if (targetBuilder_ == null) {
          target_ = null;
        } else {
          target_ = null;
          targetBuilder_ = null;
        }
        position_ = "";

        if (filterBuilder_ == null) {
          filter_ = null;
        } else {
          filter_ = null;
          filterBuilder_ = null;
        }
        if (tableLastPKsBuilder_ == null) {
          tableLastPKs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          tableLastPKsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_VStreamRequest_descriptor;
      }

      public VStreamRequest getDefaultInstanceForType() {
        return VStreamRequest.getDefaultInstance();
      }

      public VStreamRequest build() {
        VStreamRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VStreamRequest buildPartial() {
        VStreamRequest result = new VStreamRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (effectiveCallerIdBuilder_ == null) {
          result.effectiveCallerId_ = effectiveCallerId_;
        } else {
          result.effectiveCallerId_ = effectiveCallerIdBuilder_.build();
        }
        if (immediateCallerIdBuilder_ == null) {
          result.immediateCallerId_ = immediateCallerId_;
        } else {
          result.immediateCallerId_ = immediateCallerIdBuilder_.build();
        }
        if (targetBuilder_ == null) {
          result.target_ = target_;
        } else {
          result.target_ = targetBuilder_.build();
        }
        result.position_ = position_;
        if (filterBuilder_ == null) {
          result.filter_ = filter_;
        } else {
          result.filter_ = filterBuilder_.build();
        }
        if (tableLastPKsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            tableLastPKs_ = java.util.Collections.unmodifiableList(tableLastPKs_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.tableLastPKs_ = tableLastPKs_;
        } else {
          result.tableLastPKs_ = tableLastPKsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VStreamRequest) {
          return mergeFrom((VStreamRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VStreamRequest other) {
        if (other == VStreamRequest.getDefaultInstance()) return this;
        if (other.hasEffectiveCallerId()) {
          mergeEffectiveCallerId(other.getEffectiveCallerId());
        }
        if (other.hasImmediateCallerId()) {
          mergeImmediateCallerId(other.getImmediateCallerId());
        }
        if (other.hasTarget()) {
          mergeTarget(other.getTarget());
        }
        if (!other.getPosition().isEmpty()) {
          position_ = other.position_;
          onChanged();
        }
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        if (tableLastPKsBuilder_ == null) {
          if (!other.tableLastPKs_.isEmpty()) {
            if (tableLastPKs_.isEmpty()) {
              tableLastPKs_ = other.tableLastPKs_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureTableLastPKsIsMutable();
              tableLastPKs_.addAll(other.tableLastPKs_);
            }
            onChanged();
          }
        } else {
          if (!other.tableLastPKs_.isEmpty()) {
            if (tableLastPKsBuilder_.isEmpty()) {
              tableLastPKsBuilder_.dispose();
              tableLastPKsBuilder_ = null;
              tableLastPKs_ = other.tableLastPKs_;
              bitField0_ = (bitField0_ & ~0x00000020);
              tableLastPKsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTableLastPKsFieldBuilder() : null;
            } else {
              tableLastPKsBuilder_.addAllMessages(other.tableLastPKs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VStreamRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VStreamRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.vitess.proto.Vtrpc.CallerID effectiveCallerId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Vtrpc.CallerID, io.vitess.proto.Vtrpc.CallerID.Builder, io.vitess.proto.Vtrpc.CallerIDOrBuilder> effectiveCallerIdBuilder_;
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public boolean hasEffectiveCallerId() {
        return effectiveCallerIdBuilder_ != null || effectiveCallerId_ != null;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public io.vitess.proto.Vtrpc.CallerID getEffectiveCallerId() {
        if (effectiveCallerIdBuilder_ == null) {
          return effectiveCallerId_ == null ? io.vitess.proto.Vtrpc.CallerID.getDefaultInstance() : effectiveCallerId_;
        } else {
          return effectiveCallerIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder setEffectiveCallerId(io.vitess.proto.Vtrpc.CallerID value) {
        if (effectiveCallerIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveCallerId_ = value;
          onChanged();
        } else {
          effectiveCallerIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder setEffectiveCallerId(
          io.vitess.proto.Vtrpc.CallerID.Builder builderForValue) {
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerId_ = builderForValue.build();
          onChanged();
        } else {
          effectiveCallerIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder mergeEffectiveCallerId(io.vitess.proto.Vtrpc.CallerID value) {
        if (effectiveCallerIdBuilder_ == null) {
          if (effectiveCallerId_ != null) {
            effectiveCallerId_ =
              io.vitess.proto.Vtrpc.CallerID.newBuilder(effectiveCallerId_).mergeFrom(value).buildPartial();
          } else {
            effectiveCallerId_ = value;
          }
          onChanged();
        } else {
          effectiveCallerIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder clearEffectiveCallerId() {
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerId_ = null;
          onChanged();
        } else {
          effectiveCallerId_ = null;
          effectiveCallerIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public io.vitess.proto.Vtrpc.CallerID.Builder getEffectiveCallerIdBuilder() {
        
        onChanged();
        return getEffectiveCallerIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public io.vitess.proto.Vtrpc.CallerIDOrBuilder getEffectiveCallerIdOrBuilder() {
        if (effectiveCallerIdBuilder_ != null) {
          return effectiveCallerIdBuilder_.getMessageOrBuilder();
        } else {
          return effectiveCallerId_ == null ?
              io.vitess.proto.Vtrpc.CallerID.getDefaultInstance() : effectiveCallerId_;
        }
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Vtrpc.CallerID, io.vitess.proto.Vtrpc.CallerID.Builder, io.vitess.proto.Vtrpc.CallerIDOrBuilder> 
          getEffectiveCallerIdFieldBuilder() {
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Vtrpc.CallerID, io.vitess.proto.Vtrpc.CallerID.Builder, io.vitess.proto.Vtrpc.CallerIDOrBuilder>(
                  getEffectiveCallerId(),
                  getParentForChildren(),
                  isClean());
          effectiveCallerId_ = null;
        }
        return effectiveCallerIdBuilder_;
      }

      private io.vitess.proto.Query.VTGateCallerID immediateCallerId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.VTGateCallerID, io.vitess.proto.Query.VTGateCallerID.Builder, io.vitess.proto.Query.VTGateCallerIDOrBuilder> immediateCallerIdBuilder_;
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public boolean hasImmediateCallerId() {
        return immediateCallerIdBuilder_ != null || immediateCallerId_ != null;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public io.vitess.proto.Query.VTGateCallerID getImmediateCallerId() {
        if (immediateCallerIdBuilder_ == null) {
          return immediateCallerId_ == null ? io.vitess.proto.Query.VTGateCallerID.getDefaultInstance() : immediateCallerId_;
        } else {
          return immediateCallerIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder setImmediateCallerId(io.vitess.proto.Query.VTGateCallerID value) {
        if (immediateCallerIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          immediateCallerId_ = value;
          onChanged();
        } else {
          immediateCallerIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder setImmediateCallerId(
          io.vitess.proto.Query.VTGateCallerID.Builder builderForValue) {
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerId_ = builderForValue.build();
          onChanged();
        } else {
          immediateCallerIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder mergeImmediateCallerId(io.vitess.proto.Query.VTGateCallerID value) {
        if (immediateCallerIdBuilder_ == null) {
          if (immediateCallerId_ != null) {
            immediateCallerId_ =
              io.vitess.proto.Query.VTGateCallerID.newBuilder(immediateCallerId_).mergeFrom(value).buildPartial();
          } else {
            immediateCallerId_ = value;
          }
          onChanged();
        } else {
          immediateCallerIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder clearImmediateCallerId() {
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerId_ = null;
          onChanged();
        } else {
          immediateCallerId_ = null;
          immediateCallerIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public io.vitess.proto.Query.VTGateCallerID.Builder getImmediateCallerIdBuilder() {
        
        onChanged();
        return getImmediateCallerIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public io.vitess.proto.Query.VTGateCallerIDOrBuilder getImmediateCallerIdOrBuilder() {
        if (immediateCallerIdBuilder_ != null) {
          return immediateCallerIdBuilder_.getMessageOrBuilder();
        } else {
          return immediateCallerId_ == null ?
              io.vitess.proto.Query.VTGateCallerID.getDefaultInstance() : immediateCallerId_;
        }
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.VTGateCallerID, io.vitess.proto.Query.VTGateCallerID.Builder, io.vitess.proto.Query.VTGateCallerIDOrBuilder> 
          getImmediateCallerIdFieldBuilder() {
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.VTGateCallerID, io.vitess.proto.Query.VTGateCallerID.Builder, io.vitess.proto.Query.VTGateCallerIDOrBuilder>(
                  getImmediateCallerId(),
                  getParentForChildren(),
                  isClean());
          immediateCallerId_ = null;
        }
        return immediateCallerIdBuilder_;
      }

      private io.vitess.proto.Query.Target target_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Target, io.vitess.proto.Query.Target.Builder, io.vitess.proto.Query.TargetOrBuilder> targetBuilder_;
      /**
       * <code>.query.Target target = 3;</code>
       */
      public boolean hasTarget() {
        return targetBuilder_ != null || target_ != null;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public io.vitess.proto.Query.Target getTarget() {
        if (targetBuilder_ == null) {
          return target_ == null ? io.vitess.proto.Query.Target.getDefaultInstance() : target_;
        } else {
          return targetBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder setTarget(io.vitess.proto.Query.Target value) {
        if (targetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          targetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder setTarget(
          io.vitess.proto.Query.Target.Builder builderForValue) {
        if (targetBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          targetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder mergeTarget(io.vitess.proto.Query.Target value) {
        if (targetBuilder_ == null) {
          if (target_ != null) {
            target_ =
              io.vitess.proto.Query.Target.newBuilder(target_).mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          targetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder clearTarget() {
        if (targetBuilder_ == null) {
          target_ = null;
          onChanged();
        } else {
          target_ = null;
          targetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public io.vitess.proto.Query.Target.Builder getTargetBuilder() {
        
        onChanged();
        return getTargetFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public io.vitess.proto.Query.TargetOrBuilder getTargetOrBuilder() {
        if (targetBuilder_ != null) {
          return targetBuilder_.getMessageOrBuilder();
        } else {
          return target_ == null ?
              io.vitess.proto.Query.Target.getDefaultInstance() : target_;
        }
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Target, io.vitess.proto.Query.Target.Builder, io.vitess.proto.Query.TargetOrBuilder> 
          getTargetFieldBuilder() {
        if (targetBuilder_ == null) {
          targetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.Target, io.vitess.proto.Query.Target.Builder, io.vitess.proto.Query.TargetOrBuilder>(
                  getTarget(),
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        return targetBuilder_;
      }

      private Object position_ = "";
      /**
       * <code>string position = 4;</code>
       */
      public String getPosition() {
        Object ref = position_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          position_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string position = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPositionBytes() {
        Object ref = position_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          position_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string position = 4;</code>
       */
      public Builder setPosition(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string position = 4;</code>
       */
      public Builder clearPosition() {
        
        position_ = getDefaultInstance().getPosition();
        onChanged();
        return this;
      }
      /**
       * <code>string position = 4;</code>
       */
      public Builder setPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        position_ = value;
        onChanged();
        return this;
      }

      private Filter filter_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          Filter, Filter.Builder, FilterOrBuilder> filterBuilder_;
      /**
       * <code>.binlogdata.Filter filter = 5;</code>
       */
      public boolean hasFilter() {
        return filterBuilder_ != null || filter_ != null;
      }
      /**
       * <code>.binlogdata.Filter filter = 5;</code>
       */
      public Filter getFilter() {
        if (filterBuilder_ == null) {
          return filter_ == null ? Filter.getDefaultInstance() : filter_;
        } else {
          return filterBuilder_.getMessage();
        }
      }
      /**
       * <code>.binlogdata.Filter filter = 5;</code>
       */
      public Builder setFilter(Filter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filter_ = value;
          onChanged();
        } else {
          filterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.binlogdata.Filter filter = 5;</code>
       */
      public Builder setFilter(
          Filter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          filter_ = builderForValue.build();
          onChanged();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.binlogdata.Filter filter = 5;</code>
       */
      public Builder mergeFilter(Filter value) {
        if (filterBuilder_ == null) {
          if (filter_ != null) {
            filter_ =
              Filter.newBuilder(filter_).mergeFrom(value).buildPartial();
          } else {
            filter_ = value;
          }
          onChanged();
        } else {
          filterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.binlogdata.Filter filter = 5;</code>
       */
      public Builder clearFilter() {
        if (filterBuilder_ == null) {
          filter_ = null;
          onChanged();
        } else {
          filter_ = null;
          filterBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.binlogdata.Filter filter = 5;</code>
       */
      public Filter.Builder getFilterBuilder() {
        
        onChanged();
        return getFilterFieldBuilder().getBuilder();
      }
      /**
       * <code>.binlogdata.Filter filter = 5;</code>
       */
      public FilterOrBuilder getFilterOrBuilder() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          return filter_ == null ?
              Filter.getDefaultInstance() : filter_;
        }
      }
      /**
       * <code>.binlogdata.Filter filter = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Filter, Filter.Builder, FilterOrBuilder>
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Filter, Filter.Builder, FilterOrBuilder>(
                  getFilter(),
                  getParentForChildren(),
                  isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }

      private java.util.List<TableLastPK> tableLastPKs_ =
        java.util.Collections.emptyList();
      private void ensureTableLastPKsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          tableLastPKs_ = new java.util.ArrayList<TableLastPK>(tableLastPKs_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TableLastPK, TableLastPK.Builder, TableLastPKOrBuilder> tableLastPKsBuilder_;

      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public java.util.List<TableLastPK> getTableLastPKsList() {
        if (tableLastPKsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tableLastPKs_);
        } else {
          return tableLastPKsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public int getTableLastPKsCount() {
        if (tableLastPKsBuilder_ == null) {
          return tableLastPKs_.size();
        } else {
          return tableLastPKsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public TableLastPK getTableLastPKs(int index) {
        if (tableLastPKsBuilder_ == null) {
          return tableLastPKs_.get(index);
        } else {
          return tableLastPKsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public Builder setTableLastPKs(
          int index, TableLastPK value) {
        if (tableLastPKsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableLastPKsIsMutable();
          tableLastPKs_.set(index, value);
          onChanged();
        } else {
          tableLastPKsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public Builder setTableLastPKs(
          int index, TableLastPK.Builder builderForValue) {
        if (tableLastPKsBuilder_ == null) {
          ensureTableLastPKsIsMutable();
          tableLastPKs_.set(index, builderForValue.build());
          onChanged();
        } else {
          tableLastPKsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public Builder addTableLastPKs(TableLastPK value) {
        if (tableLastPKsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableLastPKsIsMutable();
          tableLastPKs_.add(value);
          onChanged();
        } else {
          tableLastPKsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public Builder addTableLastPKs(
          int index, TableLastPK value) {
        if (tableLastPKsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableLastPKsIsMutable();
          tableLastPKs_.add(index, value);
          onChanged();
        } else {
          tableLastPKsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public Builder addTableLastPKs(
          TableLastPK.Builder builderForValue) {
        if (tableLastPKsBuilder_ == null) {
          ensureTableLastPKsIsMutable();
          tableLastPKs_.add(builderForValue.build());
          onChanged();
        } else {
          tableLastPKsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public Builder addTableLastPKs(
          int index, TableLastPK.Builder builderForValue) {
        if (tableLastPKsBuilder_ == null) {
          ensureTableLastPKsIsMutable();
          tableLastPKs_.add(index, builderForValue.build());
          onChanged();
        } else {
          tableLastPKsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public Builder addAllTableLastPKs(
          Iterable<? extends TableLastPK> values) {
        if (tableLastPKsBuilder_ == null) {
          ensureTableLastPKsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tableLastPKs_);
          onChanged();
        } else {
          tableLastPKsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public Builder clearTableLastPKs() {
        if (tableLastPKsBuilder_ == null) {
          tableLastPKs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          tableLastPKsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public Builder removeTableLastPKs(int index) {
        if (tableLastPKsBuilder_ == null) {
          ensureTableLastPKsIsMutable();
          tableLastPKs_.remove(index);
          onChanged();
        } else {
          tableLastPKsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public TableLastPK.Builder getTableLastPKsBuilder(
          int index) {
        return getTableLastPKsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public TableLastPKOrBuilder getTableLastPKsOrBuilder(
          int index) {
        if (tableLastPKsBuilder_ == null) {
          return tableLastPKs_.get(index);  } else {
          return tableLastPKsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public java.util.List<? extends TableLastPKOrBuilder>
           getTableLastPKsOrBuilderList() {
        if (tableLastPKsBuilder_ != null) {
          return tableLastPKsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tableLastPKs_);
        }
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public TableLastPK.Builder addTableLastPKsBuilder() {
        return getTableLastPKsFieldBuilder().addBuilder(
            TableLastPK.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public TableLastPK.Builder addTableLastPKsBuilder(
          int index) {
        return getTableLastPKsFieldBuilder().addBuilder(
            index, TableLastPK.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.TableLastPK table_last_p_ks = 6;</code>
       */
      public java.util.List<TableLastPK.Builder>
           getTableLastPKsBuilderList() {
        return getTableLastPKsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TableLastPK, TableLastPK.Builder, TableLastPKOrBuilder>
          getTableLastPKsFieldBuilder() {
        if (tableLastPKsBuilder_ == null) {
          tableLastPKsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TableLastPK, TableLastPK.Builder, TableLastPKOrBuilder>(
                  tableLastPKs_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          tableLastPKs_ = null;
        }
        return tableLastPKsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.VStreamRequest)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.VStreamRequest)
    private static final VStreamRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VStreamRequest();
    }

    public static VStreamRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VStreamRequest>
        PARSER = new com.google.protobuf.AbstractParser<VStreamRequest>() {
      public VStreamRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VStreamRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VStreamRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VStreamRequest> getParserForType() {
      return PARSER;
    }

    public VStreamRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VStreamResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.VStreamResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    java.util.List<VEvent>
        getEventsList();
    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    VEvent getEvents(int index);
    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    int getEventsCount();
    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    java.util.List<? extends VEventOrBuilder>
        getEventsOrBuilderList();
    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    VEventOrBuilder getEventsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * VStreamResponse is the response from VStreamer
   * </pre>
   *
   * Protobuf type {@code binlogdata.VStreamResponse}
   */
  public  static final class VStreamResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.VStreamResponse)
      VStreamResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VStreamResponse.newBuilder() to construct.
    private VStreamResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VStreamResponse() {
      events_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VStreamResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                events_ = new java.util.ArrayList<VEvent>();
                mutable_bitField0_ |= 0x00000001;
              }
              events_.add(
                  input.readMessage(VEvent.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          events_ = java.util.Collections.unmodifiableList(events_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_VStreamResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_VStreamResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VStreamResponse.class, Builder.class);
    }

    public static final int EVENTS_FIELD_NUMBER = 1;
    private java.util.List<VEvent> events_;
    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    public java.util.List<VEvent> getEventsList() {
      return events_;
    }
    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    public java.util.List<? extends VEventOrBuilder>
        getEventsOrBuilderList() {
      return events_;
    }
    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    public VEvent getEvents(int index) {
      return events_.get(index);
    }
    /**
     * <code>repeated .binlogdata.VEvent events = 1;</code>
     */
    public VEventOrBuilder getEventsOrBuilder(
        int index) {
      return events_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < events_.size(); i++) {
        output.writeMessage(1, events_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < events_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, events_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VStreamResponse)) {
        return super.equals(obj);
      }
      VStreamResponse other = (VStreamResponse) obj;

      boolean result = true;
      result = result && getEventsList()
          .equals(other.getEventsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEventsCount() > 0) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEventsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VStreamResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VStreamResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VStreamResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * VStreamResponse is the response from VStreamer
     * </pre>
     *
     * Protobuf type {@code binlogdata.VStreamResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.VStreamResponse)
        VStreamResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_VStreamResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_VStreamResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VStreamResponse.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.VStreamResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEventsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_VStreamResponse_descriptor;
      }

      public VStreamResponse getDefaultInstanceForType() {
        return VStreamResponse.getDefaultInstance();
      }

      public VStreamResponse build() {
        VStreamResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VStreamResponse buildPartial() {
        VStreamResponse result = new VStreamResponse(this);
        int from_bitField0_ = bitField0_;
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            events_ = java.util.Collections.unmodifiableList(events_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VStreamResponse) {
          return mergeFrom((VStreamResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VStreamResponse other) {
        if (other == VStreamResponse.getDefaultInstance()) return this;
        if (eventsBuilder_ == null) {
          if (!other.events_.isEmpty()) {
            if (events_.isEmpty()) {
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEventsIsMutable();
              events_.addAll(other.events_);
            }
            onChanged();
          }
        } else {
          if (!other.events_.isEmpty()) {
            if (eventsBuilder_.isEmpty()) {
              eventsBuilder_.dispose();
              eventsBuilder_ = null;
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
              eventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventsFieldBuilder() : null;
            } else {
              eventsBuilder_.addAllMessages(other.events_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VStreamResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VStreamResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<VEvent> events_ =
        java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          events_ = new java.util.ArrayList<VEvent>(events_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          VEvent, VEvent.Builder, VEventOrBuilder> eventsBuilder_;

      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public java.util.List<VEvent> getEventsList() {
        if (eventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(events_);
        } else {
          return eventsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public int getEventsCount() {
        if (eventsBuilder_ == null) {
          return events_.size();
        } else {
          return eventsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public VEvent getEvents(int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);
        } else {
          return eventsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public Builder setEvents(
          int index, VEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.set(index, value);
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public Builder setEvents(
          int index, VEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public Builder addEvents(VEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public Builder addEvents(
          int index, VEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(index, value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public Builder addEvents(
          VEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public Builder addEvents(
          int index, VEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public Builder addAllEvents(
          Iterable<? extends VEvent> values) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, events_);
          onChanged();
        } else {
          eventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public Builder removeEvents(int index) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.remove(index);
          onChanged();
        } else {
          eventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public VEvent.Builder getEventsBuilder(
          int index) {
        return getEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public VEventOrBuilder getEventsOrBuilder(
          int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);  } else {
          return eventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public java.util.List<? extends VEventOrBuilder>
           getEventsOrBuilderList() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(events_);
        }
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public VEvent.Builder addEventsBuilder() {
        return getEventsFieldBuilder().addBuilder(
            VEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public VEvent.Builder addEventsBuilder(
          int index) {
        return getEventsFieldBuilder().addBuilder(
            index, VEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .binlogdata.VEvent events = 1;</code>
       */
      public java.util.List<VEvent.Builder>
           getEventsBuilderList() {
        return getEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          VEvent, VEvent.Builder, VEventOrBuilder>
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              VEvent, VEvent.Builder, VEventOrBuilder>(
                  events_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.VStreamResponse)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.VStreamResponse)
    private static final VStreamResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VStreamResponse();
    }

    public static VStreamResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VStreamResponse>
        PARSER = new com.google.protobuf.AbstractParser<VStreamResponse>() {
      public VStreamResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VStreamResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VStreamResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VStreamResponse> getParserForType() {
      return PARSER;
    }

    public VStreamResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VStreamRowsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.VStreamRowsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    boolean hasEffectiveCallerId();
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    io.vitess.proto.Vtrpc.CallerID getEffectiveCallerId();
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    io.vitess.proto.Vtrpc.CallerIDOrBuilder getEffectiveCallerIdOrBuilder();

    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    boolean hasImmediateCallerId();
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    io.vitess.proto.Query.VTGateCallerID getImmediateCallerId();
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    io.vitess.proto.Query.VTGateCallerIDOrBuilder getImmediateCallerIdOrBuilder();

    /**
     * <code>.query.Target target = 3;</code>
     */
    boolean hasTarget();
    /**
     * <code>.query.Target target = 3;</code>
     */
    io.vitess.proto.Query.Target getTarget();
    /**
     * <code>.query.Target target = 3;</code>
     */
    io.vitess.proto.Query.TargetOrBuilder getTargetOrBuilder();

    /**
     * <code>string query = 4;</code>
     */
    String getQuery();
    /**
     * <code>string query = 4;</code>
     */
    com.google.protobuf.ByteString
        getQueryBytes();

    /**
     * <code>.query.QueryResult lastpk = 5;</code>
     */
    boolean hasLastpk();
    /**
     * <code>.query.QueryResult lastpk = 5;</code>
     */
    io.vitess.proto.Query.QueryResult getLastpk();
    /**
     * <code>.query.QueryResult lastpk = 5;</code>
     */
    io.vitess.proto.Query.QueryResultOrBuilder getLastpkOrBuilder();
  }
  /**
   * <pre>
   * VStreamRowsRequest is the payload for VStreamRows
   * </pre>
   *
   * Protobuf type {@code binlogdata.VStreamRowsRequest}
   */
  public  static final class VStreamRowsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.VStreamRowsRequest)
      VStreamRowsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VStreamRowsRequest.newBuilder() to construct.
    private VStreamRowsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VStreamRowsRequest() {
      query_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VStreamRowsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.vitess.proto.Vtrpc.CallerID.Builder subBuilder = null;
              if (effectiveCallerId_ != null) {
                subBuilder = effectiveCallerId_.toBuilder();
              }
              effectiveCallerId_ = input.readMessage(io.vitess.proto.Vtrpc.CallerID.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveCallerId_);
                effectiveCallerId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.vitess.proto.Query.VTGateCallerID.Builder subBuilder = null;
              if (immediateCallerId_ != null) {
                subBuilder = immediateCallerId_.toBuilder();
              }
              immediateCallerId_ = input.readMessage(io.vitess.proto.Query.VTGateCallerID.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(immediateCallerId_);
                immediateCallerId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.vitess.proto.Query.Target.Builder subBuilder = null;
              if (target_ != null) {
                subBuilder = target_.toBuilder();
              }
              target_ = input.readMessage(io.vitess.proto.Query.Target.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(target_);
                target_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              query_ = s;
              break;
            }
            case 42: {
              io.vitess.proto.Query.QueryResult.Builder subBuilder = null;
              if (lastpk_ != null) {
                subBuilder = lastpk_.toBuilder();
              }
              lastpk_ = input.readMessage(io.vitess.proto.Query.QueryResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastpk_);
                lastpk_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_VStreamRowsRequest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_VStreamRowsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VStreamRowsRequest.class, Builder.class);
    }

    public static final int EFFECTIVE_CALLER_ID_FIELD_NUMBER = 1;
    private io.vitess.proto.Vtrpc.CallerID effectiveCallerId_;
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    public boolean hasEffectiveCallerId() {
      return effectiveCallerId_ != null;
    }
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    public io.vitess.proto.Vtrpc.CallerID getEffectiveCallerId() {
      return effectiveCallerId_ == null ? io.vitess.proto.Vtrpc.CallerID.getDefaultInstance() : effectiveCallerId_;
    }
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    public io.vitess.proto.Vtrpc.CallerIDOrBuilder getEffectiveCallerIdOrBuilder() {
      return getEffectiveCallerId();
    }

    public static final int IMMEDIATE_CALLER_ID_FIELD_NUMBER = 2;
    private io.vitess.proto.Query.VTGateCallerID immediateCallerId_;
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    public boolean hasImmediateCallerId() {
      return immediateCallerId_ != null;
    }
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    public io.vitess.proto.Query.VTGateCallerID getImmediateCallerId() {
      return immediateCallerId_ == null ? io.vitess.proto.Query.VTGateCallerID.getDefaultInstance() : immediateCallerId_;
    }
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    public io.vitess.proto.Query.VTGateCallerIDOrBuilder getImmediateCallerIdOrBuilder() {
      return getImmediateCallerId();
    }

    public static final int TARGET_FIELD_NUMBER = 3;
    private io.vitess.proto.Query.Target target_;
    /**
     * <code>.query.Target target = 3;</code>
     */
    public boolean hasTarget() {
      return target_ != null;
    }
    /**
     * <code>.query.Target target = 3;</code>
     */
    public io.vitess.proto.Query.Target getTarget() {
      return target_ == null ? io.vitess.proto.Query.Target.getDefaultInstance() : target_;
    }
    /**
     * <code>.query.Target target = 3;</code>
     */
    public io.vitess.proto.Query.TargetOrBuilder getTargetOrBuilder() {
      return getTarget();
    }

    public static final int QUERY_FIELD_NUMBER = 4;
    private volatile Object query_;
    /**
     * <code>string query = 4;</code>
     */
    public String getQuery() {
      Object ref = query_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        query_ = s;
        return s;
      }
    }
    /**
     * <code>string query = 4;</code>
     */
    public com.google.protobuf.ByteString
        getQueryBytes() {
      Object ref = query_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        query_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTPK_FIELD_NUMBER = 5;
    private io.vitess.proto.Query.QueryResult lastpk_;
    /**
     * <code>.query.QueryResult lastpk = 5;</code>
     */
    public boolean hasLastpk() {
      return lastpk_ != null;
    }
    /**
     * <code>.query.QueryResult lastpk = 5;</code>
     */
    public io.vitess.proto.Query.QueryResult getLastpk() {
      return lastpk_ == null ? io.vitess.proto.Query.QueryResult.getDefaultInstance() : lastpk_;
    }
    /**
     * <code>.query.QueryResult lastpk = 5;</code>
     */
    public io.vitess.proto.Query.QueryResultOrBuilder getLastpkOrBuilder() {
      return getLastpk();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveCallerId_ != null) {
        output.writeMessage(1, getEffectiveCallerId());
      }
      if (immediateCallerId_ != null) {
        output.writeMessage(2, getImmediateCallerId());
      }
      if (target_ != null) {
        output.writeMessage(3, getTarget());
      }
      if (!getQueryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, query_);
      }
      if (lastpk_ != null) {
        output.writeMessage(5, getLastpk());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveCallerId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveCallerId());
      }
      if (immediateCallerId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImmediateCallerId());
      }
      if (target_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTarget());
      }
      if (!getQueryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, query_);
      }
      if (lastpk_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLastpk());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VStreamRowsRequest)) {
        return super.equals(obj);
      }
      VStreamRowsRequest other = (VStreamRowsRequest) obj;

      boolean result = true;
      result = result && (hasEffectiveCallerId() == other.hasEffectiveCallerId());
      if (hasEffectiveCallerId()) {
        result = result && getEffectiveCallerId()
            .equals(other.getEffectiveCallerId());
      }
      result = result && (hasImmediateCallerId() == other.hasImmediateCallerId());
      if (hasImmediateCallerId()) {
        result = result && getImmediateCallerId()
            .equals(other.getImmediateCallerId());
      }
      result = result && (hasTarget() == other.hasTarget());
      if (hasTarget()) {
        result = result && getTarget()
            .equals(other.getTarget());
      }
      result = result && getQuery()
          .equals(other.getQuery());
      result = result && (hasLastpk() == other.hasLastpk());
      if (hasLastpk()) {
        result = result && getLastpk()
            .equals(other.getLastpk());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveCallerId()) {
        hash = (37 * hash) + EFFECTIVE_CALLER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveCallerId().hashCode();
      }
      if (hasImmediateCallerId()) {
        hash = (37 * hash) + IMMEDIATE_CALLER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getImmediateCallerId().hashCode();
      }
      if (hasTarget()) {
        hash = (37 * hash) + TARGET_FIELD_NUMBER;
        hash = (53 * hash) + getTarget().hashCode();
      }
      hash = (37 * hash) + QUERY_FIELD_NUMBER;
      hash = (53 * hash) + getQuery().hashCode();
      if (hasLastpk()) {
        hash = (37 * hash) + LASTPK_FIELD_NUMBER;
        hash = (53 * hash) + getLastpk().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VStreamRowsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamRowsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamRowsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamRowsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamRowsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamRowsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamRowsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamRowsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamRowsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VStreamRowsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamRowsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamRowsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VStreamRowsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * VStreamRowsRequest is the payload for VStreamRows
     * </pre>
     *
     * Protobuf type {@code binlogdata.VStreamRowsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.VStreamRowsRequest)
        VStreamRowsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_VStreamRowsRequest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_VStreamRowsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VStreamRowsRequest.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.VStreamRowsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerId_ = null;
        } else {
          effectiveCallerId_ = null;
          effectiveCallerIdBuilder_ = null;
        }
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerId_ = null;
        } else {
          immediateCallerId_ = null;
          immediateCallerIdBuilder_ = null;
        }
        if (targetBuilder_ == null) {
          target_ = null;
        } else {
          target_ = null;
          targetBuilder_ = null;
        }
        query_ = "";

        if (lastpkBuilder_ == null) {
          lastpk_ = null;
        } else {
          lastpk_ = null;
          lastpkBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_VStreamRowsRequest_descriptor;
      }

      public VStreamRowsRequest getDefaultInstanceForType() {
        return VStreamRowsRequest.getDefaultInstance();
      }

      public VStreamRowsRequest build() {
        VStreamRowsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VStreamRowsRequest buildPartial() {
        VStreamRowsRequest result = new VStreamRowsRequest(this);
        if (effectiveCallerIdBuilder_ == null) {
          result.effectiveCallerId_ = effectiveCallerId_;
        } else {
          result.effectiveCallerId_ = effectiveCallerIdBuilder_.build();
        }
        if (immediateCallerIdBuilder_ == null) {
          result.immediateCallerId_ = immediateCallerId_;
        } else {
          result.immediateCallerId_ = immediateCallerIdBuilder_.build();
        }
        if (targetBuilder_ == null) {
          result.target_ = target_;
        } else {
          result.target_ = targetBuilder_.build();
        }
        result.query_ = query_;
        if (lastpkBuilder_ == null) {
          result.lastpk_ = lastpk_;
        } else {
          result.lastpk_ = lastpkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VStreamRowsRequest) {
          return mergeFrom((VStreamRowsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VStreamRowsRequest other) {
        if (other == VStreamRowsRequest.getDefaultInstance()) return this;
        if (other.hasEffectiveCallerId()) {
          mergeEffectiveCallerId(other.getEffectiveCallerId());
        }
        if (other.hasImmediateCallerId()) {
          mergeImmediateCallerId(other.getImmediateCallerId());
        }
        if (other.hasTarget()) {
          mergeTarget(other.getTarget());
        }
        if (!other.getQuery().isEmpty()) {
          query_ = other.query_;
          onChanged();
        }
        if (other.hasLastpk()) {
          mergeLastpk(other.getLastpk());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VStreamRowsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VStreamRowsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.vitess.proto.Vtrpc.CallerID effectiveCallerId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Vtrpc.CallerID, io.vitess.proto.Vtrpc.CallerID.Builder, io.vitess.proto.Vtrpc.CallerIDOrBuilder> effectiveCallerIdBuilder_;
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public boolean hasEffectiveCallerId() {
        return effectiveCallerIdBuilder_ != null || effectiveCallerId_ != null;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public io.vitess.proto.Vtrpc.CallerID getEffectiveCallerId() {
        if (effectiveCallerIdBuilder_ == null) {
          return effectiveCallerId_ == null ? io.vitess.proto.Vtrpc.CallerID.getDefaultInstance() : effectiveCallerId_;
        } else {
          return effectiveCallerIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder setEffectiveCallerId(io.vitess.proto.Vtrpc.CallerID value) {
        if (effectiveCallerIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveCallerId_ = value;
          onChanged();
        } else {
          effectiveCallerIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder setEffectiveCallerId(
          io.vitess.proto.Vtrpc.CallerID.Builder builderForValue) {
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerId_ = builderForValue.build();
          onChanged();
        } else {
          effectiveCallerIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder mergeEffectiveCallerId(io.vitess.proto.Vtrpc.CallerID value) {
        if (effectiveCallerIdBuilder_ == null) {
          if (effectiveCallerId_ != null) {
            effectiveCallerId_ =
              io.vitess.proto.Vtrpc.CallerID.newBuilder(effectiveCallerId_).mergeFrom(value).buildPartial();
          } else {
            effectiveCallerId_ = value;
          }
          onChanged();
        } else {
          effectiveCallerIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder clearEffectiveCallerId() {
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerId_ = null;
          onChanged();
        } else {
          effectiveCallerId_ = null;
          effectiveCallerIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public io.vitess.proto.Vtrpc.CallerID.Builder getEffectiveCallerIdBuilder() {
        
        onChanged();
        return getEffectiveCallerIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public io.vitess.proto.Vtrpc.CallerIDOrBuilder getEffectiveCallerIdOrBuilder() {
        if (effectiveCallerIdBuilder_ != null) {
          return effectiveCallerIdBuilder_.getMessageOrBuilder();
        } else {
          return effectiveCallerId_ == null ?
              io.vitess.proto.Vtrpc.CallerID.getDefaultInstance() : effectiveCallerId_;
        }
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Vtrpc.CallerID, io.vitess.proto.Vtrpc.CallerID.Builder, io.vitess.proto.Vtrpc.CallerIDOrBuilder> 
          getEffectiveCallerIdFieldBuilder() {
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Vtrpc.CallerID, io.vitess.proto.Vtrpc.CallerID.Builder, io.vitess.proto.Vtrpc.CallerIDOrBuilder>(
                  getEffectiveCallerId(),
                  getParentForChildren(),
                  isClean());
          effectiveCallerId_ = null;
        }
        return effectiveCallerIdBuilder_;
      }

      private io.vitess.proto.Query.VTGateCallerID immediateCallerId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.VTGateCallerID, io.vitess.proto.Query.VTGateCallerID.Builder, io.vitess.proto.Query.VTGateCallerIDOrBuilder> immediateCallerIdBuilder_;
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public boolean hasImmediateCallerId() {
        return immediateCallerIdBuilder_ != null || immediateCallerId_ != null;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public io.vitess.proto.Query.VTGateCallerID getImmediateCallerId() {
        if (immediateCallerIdBuilder_ == null) {
          return immediateCallerId_ == null ? io.vitess.proto.Query.VTGateCallerID.getDefaultInstance() : immediateCallerId_;
        } else {
          return immediateCallerIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder setImmediateCallerId(io.vitess.proto.Query.VTGateCallerID value) {
        if (immediateCallerIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          immediateCallerId_ = value;
          onChanged();
        } else {
          immediateCallerIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder setImmediateCallerId(
          io.vitess.proto.Query.VTGateCallerID.Builder builderForValue) {
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerId_ = builderForValue.build();
          onChanged();
        } else {
          immediateCallerIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder mergeImmediateCallerId(io.vitess.proto.Query.VTGateCallerID value) {
        if (immediateCallerIdBuilder_ == null) {
          if (immediateCallerId_ != null) {
            immediateCallerId_ =
              io.vitess.proto.Query.VTGateCallerID.newBuilder(immediateCallerId_).mergeFrom(value).buildPartial();
          } else {
            immediateCallerId_ = value;
          }
          onChanged();
        } else {
          immediateCallerIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder clearImmediateCallerId() {
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerId_ = null;
          onChanged();
        } else {
          immediateCallerId_ = null;
          immediateCallerIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public io.vitess.proto.Query.VTGateCallerID.Builder getImmediateCallerIdBuilder() {
        
        onChanged();
        return getImmediateCallerIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public io.vitess.proto.Query.VTGateCallerIDOrBuilder getImmediateCallerIdOrBuilder() {
        if (immediateCallerIdBuilder_ != null) {
          return immediateCallerIdBuilder_.getMessageOrBuilder();
        } else {
          return immediateCallerId_ == null ?
              io.vitess.proto.Query.VTGateCallerID.getDefaultInstance() : immediateCallerId_;
        }
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.VTGateCallerID, io.vitess.proto.Query.VTGateCallerID.Builder, io.vitess.proto.Query.VTGateCallerIDOrBuilder> 
          getImmediateCallerIdFieldBuilder() {
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.VTGateCallerID, io.vitess.proto.Query.VTGateCallerID.Builder, io.vitess.proto.Query.VTGateCallerIDOrBuilder>(
                  getImmediateCallerId(),
                  getParentForChildren(),
                  isClean());
          immediateCallerId_ = null;
        }
        return immediateCallerIdBuilder_;
      }

      private io.vitess.proto.Query.Target target_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Target, io.vitess.proto.Query.Target.Builder, io.vitess.proto.Query.TargetOrBuilder> targetBuilder_;
      /**
       * <code>.query.Target target = 3;</code>
       */
      public boolean hasTarget() {
        return targetBuilder_ != null || target_ != null;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public io.vitess.proto.Query.Target getTarget() {
        if (targetBuilder_ == null) {
          return target_ == null ? io.vitess.proto.Query.Target.getDefaultInstance() : target_;
        } else {
          return targetBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder setTarget(io.vitess.proto.Query.Target value) {
        if (targetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          targetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder setTarget(
          io.vitess.proto.Query.Target.Builder builderForValue) {
        if (targetBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          targetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder mergeTarget(io.vitess.proto.Query.Target value) {
        if (targetBuilder_ == null) {
          if (target_ != null) {
            target_ =
              io.vitess.proto.Query.Target.newBuilder(target_).mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          targetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder clearTarget() {
        if (targetBuilder_ == null) {
          target_ = null;
          onChanged();
        } else {
          target_ = null;
          targetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public io.vitess.proto.Query.Target.Builder getTargetBuilder() {
        
        onChanged();
        return getTargetFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public io.vitess.proto.Query.TargetOrBuilder getTargetOrBuilder() {
        if (targetBuilder_ != null) {
          return targetBuilder_.getMessageOrBuilder();
        } else {
          return target_ == null ?
              io.vitess.proto.Query.Target.getDefaultInstance() : target_;
        }
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Target, io.vitess.proto.Query.Target.Builder, io.vitess.proto.Query.TargetOrBuilder> 
          getTargetFieldBuilder() {
        if (targetBuilder_ == null) {
          targetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.Target, io.vitess.proto.Query.Target.Builder, io.vitess.proto.Query.TargetOrBuilder>(
                  getTarget(),
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        return targetBuilder_;
      }

      private Object query_ = "";
      /**
       * <code>string query = 4;</code>
       */
      public String getQuery() {
        Object ref = query_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          query_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string query = 4;</code>
       */
      public com.google.protobuf.ByteString
          getQueryBytes() {
        Object ref = query_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          query_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string query = 4;</code>
       */
      public Builder setQuery(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        query_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string query = 4;</code>
       */
      public Builder clearQuery() {
        
        query_ = getDefaultInstance().getQuery();
        onChanged();
        return this;
      }
      /**
       * <code>string query = 4;</code>
       */
      public Builder setQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        query_ = value;
        onChanged();
        return this;
      }

      private io.vitess.proto.Query.QueryResult lastpk_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.QueryResult, io.vitess.proto.Query.QueryResult.Builder, io.vitess.proto.Query.QueryResultOrBuilder> lastpkBuilder_;
      /**
       * <code>.query.QueryResult lastpk = 5;</code>
       */
      public boolean hasLastpk() {
        return lastpkBuilder_ != null || lastpk_ != null;
      }
      /**
       * <code>.query.QueryResult lastpk = 5;</code>
       */
      public io.vitess.proto.Query.QueryResult getLastpk() {
        if (lastpkBuilder_ == null) {
          return lastpk_ == null ? io.vitess.proto.Query.QueryResult.getDefaultInstance() : lastpk_;
        } else {
          return lastpkBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.QueryResult lastpk = 5;</code>
       */
      public Builder setLastpk(io.vitess.proto.Query.QueryResult value) {
        if (lastpkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastpk_ = value;
          onChanged();
        } else {
          lastpkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.QueryResult lastpk = 5;</code>
       */
      public Builder setLastpk(
          io.vitess.proto.Query.QueryResult.Builder builderForValue) {
        if (lastpkBuilder_ == null) {
          lastpk_ = builderForValue.build();
          onChanged();
        } else {
          lastpkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.QueryResult lastpk = 5;</code>
       */
      public Builder mergeLastpk(io.vitess.proto.Query.QueryResult value) {
        if (lastpkBuilder_ == null) {
          if (lastpk_ != null) {
            lastpk_ =
              io.vitess.proto.Query.QueryResult.newBuilder(lastpk_).mergeFrom(value).buildPartial();
          } else {
            lastpk_ = value;
          }
          onChanged();
        } else {
          lastpkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.QueryResult lastpk = 5;</code>
       */
      public Builder clearLastpk() {
        if (lastpkBuilder_ == null) {
          lastpk_ = null;
          onChanged();
        } else {
          lastpk_ = null;
          lastpkBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.QueryResult lastpk = 5;</code>
       */
      public io.vitess.proto.Query.QueryResult.Builder getLastpkBuilder() {
        
        onChanged();
        return getLastpkFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.QueryResult lastpk = 5;</code>
       */
      public io.vitess.proto.Query.QueryResultOrBuilder getLastpkOrBuilder() {
        if (lastpkBuilder_ != null) {
          return lastpkBuilder_.getMessageOrBuilder();
        } else {
          return lastpk_ == null ?
              io.vitess.proto.Query.QueryResult.getDefaultInstance() : lastpk_;
        }
      }
      /**
       * <code>.query.QueryResult lastpk = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.QueryResult, io.vitess.proto.Query.QueryResult.Builder, io.vitess.proto.Query.QueryResultOrBuilder> 
          getLastpkFieldBuilder() {
        if (lastpkBuilder_ == null) {
          lastpkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.QueryResult, io.vitess.proto.Query.QueryResult.Builder, io.vitess.proto.Query.QueryResultOrBuilder>(
                  getLastpk(),
                  getParentForChildren(),
                  isClean());
          lastpk_ = null;
        }
        return lastpkBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.VStreamRowsRequest)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.VStreamRowsRequest)
    private static final VStreamRowsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VStreamRowsRequest();
    }

    public static VStreamRowsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VStreamRowsRequest>
        PARSER = new com.google.protobuf.AbstractParser<VStreamRowsRequest>() {
      public VStreamRowsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VStreamRowsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VStreamRowsRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VStreamRowsRequest> getParserForType() {
      return PARSER;
    }

    public VStreamRowsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VStreamRowsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.VStreamRowsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    java.util.List<io.vitess.proto.Query.Field> 
        getFieldsList();
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    io.vitess.proto.Query.Field getFields(int index);
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    java.util.List<io.vitess.proto.Query.Field> 
        getPkfieldsList();
    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    io.vitess.proto.Query.Field getPkfields(int index);
    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    int getPkfieldsCount();
    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getPkfieldsOrBuilderList();
    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    io.vitess.proto.Query.FieldOrBuilder getPkfieldsOrBuilder(
        int index);

    /**
     * <code>string gtid = 3;</code>
     */
    String getGtid();
    /**
     * <code>string gtid = 3;</code>
     */
    com.google.protobuf.ByteString
        getGtidBytes();

    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    java.util.List<io.vitess.proto.Query.Row> 
        getRowsList();
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    io.vitess.proto.Query.Row getRows(int index);
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    java.util.List<? extends io.vitess.proto.Query.RowOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    io.vitess.proto.Query.RowOrBuilder getRowsOrBuilder(
        int index);

    /**
     * <code>.query.Row lastpk = 5;</code>
     */
    boolean hasLastpk();
    /**
     * <code>.query.Row lastpk = 5;</code>
     */
    io.vitess.proto.Query.Row getLastpk();
    /**
     * <code>.query.Row lastpk = 5;</code>
     */
    io.vitess.proto.Query.RowOrBuilder getLastpkOrBuilder();
  }
  /**
   * <pre>
   * VStreamRowsResponse is the response from VStreamRows
   * </pre>
   *
   * Protobuf type {@code binlogdata.VStreamRowsResponse}
   */
  public  static final class VStreamRowsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.VStreamRowsResponse)
      VStreamRowsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VStreamRowsResponse.newBuilder() to construct.
    private VStreamRowsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VStreamRowsResponse() {
      fields_ = java.util.Collections.emptyList();
      pkfields_ = java.util.Collections.emptyList();
      gtid_ = "";
      rows_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VStreamRowsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>();
                mutable_bitField0_ |= 0x00000001;
              }
              fields_.add(
                  input.readMessage(io.vitess.proto.Query.Field.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                pkfields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>();
                mutable_bitField0_ |= 0x00000002;
              }
              pkfields_.add(
                  input.readMessage(io.vitess.proto.Query.Field.parser(), extensionRegistry));
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              gtid_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                rows_ = new java.util.ArrayList<io.vitess.proto.Query.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              rows_.add(
                  input.readMessage(io.vitess.proto.Query.Row.parser(), extensionRegistry));
              break;
            }
            case 42: {
              io.vitess.proto.Query.Row.Builder subBuilder = null;
              if (lastpk_ != null) {
                subBuilder = lastpk_.toBuilder();
              }
              lastpk_ = input.readMessage(io.vitess.proto.Query.Row.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastpk_);
                lastpk_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          pkfields_ = java.util.Collections.unmodifiableList(pkfields_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_VStreamRowsResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_VStreamRowsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VStreamRowsResponse.class, Builder.class);
    }

    private int bitField0_;
    public static final int FIELDS_FIELD_NUMBER = 1;
    private java.util.List<io.vitess.proto.Query.Field> fields_;
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public java.util.List<io.vitess.proto.Query.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public io.vitess.proto.Query.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int PKFIELDS_FIELD_NUMBER = 2;
    private java.util.List<io.vitess.proto.Query.Field> pkfields_;
    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    public java.util.List<io.vitess.proto.Query.Field> getPkfieldsList() {
      return pkfields_;
    }
    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getPkfieldsOrBuilderList() {
      return pkfields_;
    }
    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    public int getPkfieldsCount() {
      return pkfields_.size();
    }
    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    public io.vitess.proto.Query.Field getPkfields(int index) {
      return pkfields_.get(index);
    }
    /**
     * <code>repeated .query.Field pkfields = 2;</code>
     */
    public io.vitess.proto.Query.FieldOrBuilder getPkfieldsOrBuilder(
        int index) {
      return pkfields_.get(index);
    }

    public static final int GTID_FIELD_NUMBER = 3;
    private volatile Object gtid_;
    /**
     * <code>string gtid = 3;</code>
     */
    public String getGtid() {
      Object ref = gtid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        gtid_ = s;
        return s;
      }
    }
    /**
     * <code>string gtid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getGtidBytes() {
      Object ref = gtid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        gtid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROWS_FIELD_NUMBER = 4;
    private java.util.List<io.vitess.proto.Query.Row> rows_;
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public java.util.List<io.vitess.proto.Query.Row> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public java.util.List<? extends io.vitess.proto.Query.RowOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public io.vitess.proto.Query.Row getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public io.vitess.proto.Query.RowOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    public static final int LASTPK_FIELD_NUMBER = 5;
    private io.vitess.proto.Query.Row lastpk_;
    /**
     * <code>.query.Row lastpk = 5;</code>
     */
    public boolean hasLastpk() {
      return lastpk_ != null;
    }
    /**
     * <code>.query.Row lastpk = 5;</code>
     */
    public io.vitess.proto.Query.Row getLastpk() {
      return lastpk_ == null ? io.vitess.proto.Query.Row.getDefaultInstance() : lastpk_;
    }
    /**
     * <code>.query.Row lastpk = 5;</code>
     */
    public io.vitess.proto.Query.RowOrBuilder getLastpkOrBuilder() {
      return getLastpk();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(1, fields_.get(i));
      }
      for (int i = 0; i < pkfields_.size(); i++) {
        output.writeMessage(2, pkfields_.get(i));
      }
      if (!getGtidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, gtid_);
      }
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(4, rows_.get(i));
      }
      if (lastpk_ != null) {
        output.writeMessage(5, getLastpk());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fields_.get(i));
      }
      for (int i = 0; i < pkfields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pkfields_.get(i));
      }
      if (!getGtidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, gtid_);
      }
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rows_.get(i));
      }
      if (lastpk_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLastpk());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VStreamRowsResponse)) {
        return super.equals(obj);
      }
      VStreamRowsResponse other = (VStreamRowsResponse) obj;

      boolean result = true;
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && getPkfieldsList()
          .equals(other.getPkfieldsList());
      result = result && getGtid()
          .equals(other.getGtid());
      result = result && getRowsList()
          .equals(other.getRowsList());
      result = result && (hasLastpk() == other.hasLastpk());
      if (hasLastpk()) {
        result = result && getLastpk()
            .equals(other.getLastpk());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      if (getPkfieldsCount() > 0) {
        hash = (37 * hash) + PKFIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getPkfieldsList().hashCode();
      }
      hash = (37 * hash) + GTID_FIELD_NUMBER;
      hash = (53 * hash) + getGtid().hashCode();
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      if (hasLastpk()) {
        hash = (37 * hash) + LASTPK_FIELD_NUMBER;
        hash = (53 * hash) + getLastpk().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VStreamRowsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamRowsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamRowsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamRowsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamRowsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamRowsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamRowsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamRowsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamRowsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VStreamRowsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamRowsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamRowsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VStreamRowsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * VStreamRowsResponse is the response from VStreamRows
     * </pre>
     *
     * Protobuf type {@code binlogdata.VStreamRowsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.VStreamRowsResponse)
        VStreamRowsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_VStreamRowsResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_VStreamRowsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VStreamRowsResponse.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.VStreamRowsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
          getPkfieldsFieldBuilder();
          getRowsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldsBuilder_.clear();
        }
        if (pkfieldsBuilder_ == null) {
          pkfields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          pkfieldsBuilder_.clear();
        }
        gtid_ = "";

        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowsBuilder_.clear();
        }
        if (lastpkBuilder_ == null) {
          lastpk_ = null;
        } else {
          lastpk_ = null;
          lastpkBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_VStreamRowsResponse_descriptor;
      }

      public VStreamRowsResponse getDefaultInstanceForType() {
        return VStreamRowsResponse.getDefaultInstance();
      }

      public VStreamRowsResponse build() {
        VStreamRowsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VStreamRowsResponse buildPartial() {
        VStreamRowsResponse result = new VStreamRowsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        if (pkfieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            pkfields_ = java.util.Collections.unmodifiableList(pkfields_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.pkfields_ = pkfields_;
        } else {
          result.pkfields_ = pkfieldsBuilder_.build();
        }
        result.gtid_ = gtid_;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        if (lastpkBuilder_ == null) {
          result.lastpk_ = lastpk_;
        } else {
          result.lastpk_ = lastpkBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VStreamRowsResponse) {
          return mergeFrom((VStreamRowsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VStreamRowsResponse other) {
        if (other == VStreamRowsResponse.getDefaultInstance()) return this;
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (pkfieldsBuilder_ == null) {
          if (!other.pkfields_.isEmpty()) {
            if (pkfields_.isEmpty()) {
              pkfields_ = other.pkfields_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePkfieldsIsMutable();
              pkfields_.addAll(other.pkfields_);
            }
            onChanged();
          }
        } else {
          if (!other.pkfields_.isEmpty()) {
            if (pkfieldsBuilder_.isEmpty()) {
              pkfieldsBuilder_.dispose();
              pkfieldsBuilder_ = null;
              pkfields_ = other.pkfields_;
              bitField0_ = (bitField0_ & ~0x00000002);
              pkfieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPkfieldsFieldBuilder() : null;
            } else {
              pkfieldsBuilder_.addAllMessages(other.pkfields_);
            }
          }
        }
        if (!other.getGtid().isEmpty()) {
          gtid_ = other.gtid_;
          onChanged();
        }
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        if (other.hasLastpk()) {
          mergeLastpk(other.getLastpk());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VStreamRowsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VStreamRowsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.vitess.proto.Query.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>(fields_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder setFields(
          int index, io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder setFields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addFields(io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addFields(
          int index, io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addFields(
          io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addFields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addAllFields(
          Iterable<? extends io.vitess.proto.Query.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private java.util.List<io.vitess.proto.Query.Field> pkfields_ =
        java.util.Collections.emptyList();
      private void ensurePkfieldsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          pkfields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>(pkfields_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> pkfieldsBuilder_;

      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field> getPkfieldsList() {
        if (pkfieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pkfields_);
        } else {
          return pkfieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public int getPkfieldsCount() {
        if (pkfieldsBuilder_ == null) {
          return pkfields_.size();
        } else {
          return pkfieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public io.vitess.proto.Query.Field getPkfields(int index) {
        if (pkfieldsBuilder_ == null) {
          return pkfields_.get(index);
        } else {
          return pkfieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public Builder setPkfields(
          int index, io.vitess.proto.Query.Field value) {
        if (pkfieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePkfieldsIsMutable();
          pkfields_.set(index, value);
          onChanged();
        } else {
          pkfieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public Builder setPkfields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (pkfieldsBuilder_ == null) {
          ensurePkfieldsIsMutable();
          pkfields_.set(index, builderForValue.build());
          onChanged();
        } else {
          pkfieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public Builder addPkfields(io.vitess.proto.Query.Field value) {
        if (pkfieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePkfieldsIsMutable();
          pkfields_.add(value);
          onChanged();
        } else {
          pkfieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public Builder addPkfields(
          int index, io.vitess.proto.Query.Field value) {
        if (pkfieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePkfieldsIsMutable();
          pkfields_.add(index, value);
          onChanged();
        } else {
          pkfieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public Builder addPkfields(
          io.vitess.proto.Query.Field.Builder builderForValue) {
        if (pkfieldsBuilder_ == null) {
          ensurePkfieldsIsMutable();
          pkfields_.add(builderForValue.build());
          onChanged();
        } else {
          pkfieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public Builder addPkfields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (pkfieldsBuilder_ == null) {
          ensurePkfieldsIsMutable();
          pkfields_.add(index, builderForValue.build());
          onChanged();
        } else {
          pkfieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public Builder addAllPkfields(
          Iterable<? extends io.vitess.proto.Query.Field> values) {
        if (pkfieldsBuilder_ == null) {
          ensurePkfieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pkfields_);
          onChanged();
        } else {
          pkfieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public Builder clearPkfields() {
        if (pkfieldsBuilder_ == null) {
          pkfields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          pkfieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public Builder removePkfields(int index) {
        if (pkfieldsBuilder_ == null) {
          ensurePkfieldsIsMutable();
          pkfields_.remove(index);
          onChanged();
        } else {
          pkfieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public io.vitess.proto.Query.Field.Builder getPkfieldsBuilder(
          int index) {
        return getPkfieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public io.vitess.proto.Query.FieldOrBuilder getPkfieldsOrBuilder(
          int index) {
        if (pkfieldsBuilder_ == null) {
          return pkfields_.get(index);  } else {
          return pkfieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
           getPkfieldsOrBuilderList() {
        if (pkfieldsBuilder_ != null) {
          return pkfieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pkfields_);
        }
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public io.vitess.proto.Query.Field.Builder addPkfieldsBuilder() {
        return getPkfieldsFieldBuilder().addBuilder(
            io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public io.vitess.proto.Query.Field.Builder addPkfieldsBuilder(
          int index) {
        return getPkfieldsFieldBuilder().addBuilder(
            index, io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field pkfields = 2;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field.Builder> 
           getPkfieldsBuilderList() {
        return getPkfieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> 
          getPkfieldsFieldBuilder() {
        if (pkfieldsBuilder_ == null) {
          pkfieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder>(
                  pkfields_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          pkfields_ = null;
        }
        return pkfieldsBuilder_;
      }

      private Object gtid_ = "";
      /**
       * <code>string gtid = 3;</code>
       */
      public String getGtid() {
        Object ref = gtid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          gtid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getGtidBytes() {
        Object ref = gtid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          gtid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public Builder setGtid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gtid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public Builder clearGtid() {
        
        gtid_ = getDefaultInstance().getGtid();
        onChanged();
        return this;
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public Builder setGtidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gtid_ = value;
        onChanged();
        return this;
      }

      private java.util.List<io.vitess.proto.Query.Row> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          rows_ = new java.util.ArrayList<io.vitess.proto.Query.Row>(rows_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public java.util.List<io.vitess.proto.Query.Row> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.Row getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder setRows(
          int index, io.vitess.proto.Query.Row value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder setRows(
          int index, io.vitess.proto.Query.Row.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addRows(io.vitess.proto.Query.Row value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addRows(
          int index, io.vitess.proto.Query.Row value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addRows(
          io.vitess.proto.Query.Row.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addRows(
          int index, io.vitess.proto.Query.Row.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addAllRows(
          Iterable<? extends io.vitess.proto.Query.Row> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.Row.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.RowOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public java.util.List<? extends io.vitess.proto.Query.RowOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.Row.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            io.vitess.proto.Query.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.Row.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, io.vitess.proto.Query.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public java.util.List<io.vitess.proto.Query.Row.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }

      private io.vitess.proto.Query.Row lastpk_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> lastpkBuilder_;
      /**
       * <code>.query.Row lastpk = 5;</code>
       */
      public boolean hasLastpk() {
        return lastpkBuilder_ != null || lastpk_ != null;
      }
      /**
       * <code>.query.Row lastpk = 5;</code>
       */
      public io.vitess.proto.Query.Row getLastpk() {
        if (lastpkBuilder_ == null) {
          return lastpk_ == null ? io.vitess.proto.Query.Row.getDefaultInstance() : lastpk_;
        } else {
          return lastpkBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.Row lastpk = 5;</code>
       */
      public Builder setLastpk(io.vitess.proto.Query.Row value) {
        if (lastpkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastpk_ = value;
          onChanged();
        } else {
          lastpkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.Row lastpk = 5;</code>
       */
      public Builder setLastpk(
          io.vitess.proto.Query.Row.Builder builderForValue) {
        if (lastpkBuilder_ == null) {
          lastpk_ = builderForValue.build();
          onChanged();
        } else {
          lastpkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.Row lastpk = 5;</code>
       */
      public Builder mergeLastpk(io.vitess.proto.Query.Row value) {
        if (lastpkBuilder_ == null) {
          if (lastpk_ != null) {
            lastpk_ =
              io.vitess.proto.Query.Row.newBuilder(lastpk_).mergeFrom(value).buildPartial();
          } else {
            lastpk_ = value;
          }
          onChanged();
        } else {
          lastpkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.Row lastpk = 5;</code>
       */
      public Builder clearLastpk() {
        if (lastpkBuilder_ == null) {
          lastpk_ = null;
          onChanged();
        } else {
          lastpk_ = null;
          lastpkBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.Row lastpk = 5;</code>
       */
      public io.vitess.proto.Query.Row.Builder getLastpkBuilder() {
        
        onChanged();
        return getLastpkFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.Row lastpk = 5;</code>
       */
      public io.vitess.proto.Query.RowOrBuilder getLastpkOrBuilder() {
        if (lastpkBuilder_ != null) {
          return lastpkBuilder_.getMessageOrBuilder();
        } else {
          return lastpk_ == null ?
              io.vitess.proto.Query.Row.getDefaultInstance() : lastpk_;
        }
      }
      /**
       * <code>.query.Row lastpk = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> 
          getLastpkFieldBuilder() {
        if (lastpkBuilder_ == null) {
          lastpkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder>(
                  getLastpk(),
                  getParentForChildren(),
                  isClean());
          lastpk_ = null;
        }
        return lastpkBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.VStreamRowsResponse)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.VStreamRowsResponse)
    private static final VStreamRowsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VStreamRowsResponse();
    }

    public static VStreamRowsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VStreamRowsResponse>
        PARSER = new com.google.protobuf.AbstractParser<VStreamRowsResponse>() {
      public VStreamRowsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VStreamRowsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VStreamRowsResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VStreamRowsResponse> getParserForType() {
      return PARSER;
    }

    public VStreamRowsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LastPKEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.LastPKEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
     */
    boolean hasTableLastPK();
    /**
     * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
     */
    TableLastPK getTableLastPK();
    /**
     * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
     */
    TableLastPKOrBuilder getTableLastPKOrBuilder();

    /**
     * <code>bool completed = 2;</code>
     */
    boolean getCompleted();
  }
  /**
   * Protobuf type {@code binlogdata.LastPKEvent}
   */
  public  static final class LastPKEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.LastPKEvent)
      LastPKEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LastPKEvent.newBuilder() to construct.
    private LastPKEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LastPKEvent() {
      completed_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LastPKEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              TableLastPK.Builder subBuilder = null;
              if (tableLastPK_ != null) {
                subBuilder = tableLastPK_.toBuilder();
              }
              tableLastPK_ = input.readMessage(TableLastPK.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tableLastPK_);
                tableLastPK_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              completed_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_LastPKEvent_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_LastPKEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              LastPKEvent.class, Builder.class);
    }

    public static final int TABLE_LAST_P_K_FIELD_NUMBER = 1;
    private TableLastPK tableLastPK_;
    /**
     * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
     */
    public boolean hasTableLastPK() {
      return tableLastPK_ != null;
    }
    /**
     * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
     */
    public TableLastPK getTableLastPK() {
      return tableLastPK_ == null ? TableLastPK.getDefaultInstance() : tableLastPK_;
    }
    /**
     * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
     */
    public TableLastPKOrBuilder getTableLastPKOrBuilder() {
      return getTableLastPK();
    }

    public static final int COMPLETED_FIELD_NUMBER = 2;
    private boolean completed_;
    /**
     * <code>bool completed = 2;</code>
     */
    public boolean getCompleted() {
      return completed_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tableLastPK_ != null) {
        output.writeMessage(1, getTableLastPK());
      }
      if (completed_ != false) {
        output.writeBool(2, completed_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tableLastPK_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTableLastPK());
      }
      if (completed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, completed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof LastPKEvent)) {
        return super.equals(obj);
      }
      LastPKEvent other = (LastPKEvent) obj;

      boolean result = true;
      result = result && (hasTableLastPK() == other.hasTableLastPK());
      if (hasTableLastPK()) {
        result = result && getTableLastPK()
            .equals(other.getTableLastPK());
      }
      result = result && (getCompleted()
          == other.getCompleted());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTableLastPK()) {
        hash = (37 * hash) + TABLE_LAST_P_K_FIELD_NUMBER;
        hash = (53 * hash) + getTableLastPK().hashCode();
      }
      hash = (37 * hash) + COMPLETED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCompleted());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static LastPKEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LastPKEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LastPKEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LastPKEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LastPKEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LastPKEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LastPKEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static LastPKEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static LastPKEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static LastPKEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static LastPKEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static LastPKEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(LastPKEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code binlogdata.LastPKEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.LastPKEvent)
        LastPKEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_LastPKEvent_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_LastPKEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                LastPKEvent.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.LastPKEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (tableLastPKBuilder_ == null) {
          tableLastPK_ = null;
        } else {
          tableLastPK_ = null;
          tableLastPKBuilder_ = null;
        }
        completed_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_LastPKEvent_descriptor;
      }

      public LastPKEvent getDefaultInstanceForType() {
        return LastPKEvent.getDefaultInstance();
      }

      public LastPKEvent build() {
        LastPKEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public LastPKEvent buildPartial() {
        LastPKEvent result = new LastPKEvent(this);
        if (tableLastPKBuilder_ == null) {
          result.tableLastPK_ = tableLastPK_;
        } else {
          result.tableLastPK_ = tableLastPKBuilder_.build();
        }
        result.completed_ = completed_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof LastPKEvent) {
          return mergeFrom((LastPKEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(LastPKEvent other) {
        if (other == LastPKEvent.getDefaultInstance()) return this;
        if (other.hasTableLastPK()) {
          mergeTableLastPK(other.getTableLastPK());
        }
        if (other.getCompleted() != false) {
          setCompleted(other.getCompleted());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        LastPKEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (LastPKEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private TableLastPK tableLastPK_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          TableLastPK, TableLastPK.Builder, TableLastPKOrBuilder> tableLastPKBuilder_;
      /**
       * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
       */
      public boolean hasTableLastPK() {
        return tableLastPKBuilder_ != null || tableLastPK_ != null;
      }
      /**
       * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
       */
      public TableLastPK getTableLastPK() {
        if (tableLastPKBuilder_ == null) {
          return tableLastPK_ == null ? TableLastPK.getDefaultInstance() : tableLastPK_;
        } else {
          return tableLastPKBuilder_.getMessage();
        }
      }
      /**
       * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
       */
      public Builder setTableLastPK(TableLastPK value) {
        if (tableLastPKBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tableLastPK_ = value;
          onChanged();
        } else {
          tableLastPKBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
       */
      public Builder setTableLastPK(
          TableLastPK.Builder builderForValue) {
        if (tableLastPKBuilder_ == null) {
          tableLastPK_ = builderForValue.build();
          onChanged();
        } else {
          tableLastPKBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
       */
      public Builder mergeTableLastPK(TableLastPK value) {
        if (tableLastPKBuilder_ == null) {
          if (tableLastPK_ != null) {
            tableLastPK_ =
              TableLastPK.newBuilder(tableLastPK_).mergeFrom(value).buildPartial();
          } else {
            tableLastPK_ = value;
          }
          onChanged();
        } else {
          tableLastPKBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
       */
      public Builder clearTableLastPK() {
        if (tableLastPKBuilder_ == null) {
          tableLastPK_ = null;
          onChanged();
        } else {
          tableLastPK_ = null;
          tableLastPKBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
       */
      public TableLastPK.Builder getTableLastPKBuilder() {
        
        onChanged();
        return getTableLastPKFieldBuilder().getBuilder();
      }
      /**
       * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
       */
      public TableLastPKOrBuilder getTableLastPKOrBuilder() {
        if (tableLastPKBuilder_ != null) {
          return tableLastPKBuilder_.getMessageOrBuilder();
        } else {
          return tableLastPK_ == null ?
              TableLastPK.getDefaultInstance() : tableLastPK_;
        }
      }
      /**
       * <code>.binlogdata.TableLastPK table_last_p_k = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TableLastPK, TableLastPK.Builder, TableLastPKOrBuilder>
          getTableLastPKFieldBuilder() {
        if (tableLastPKBuilder_ == null) {
          tableLastPKBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TableLastPK, TableLastPK.Builder, TableLastPKOrBuilder>(
                  getTableLastPK(),
                  getParentForChildren(),
                  isClean());
          tableLastPK_ = null;
        }
        return tableLastPKBuilder_;
      }

      private boolean completed_ ;
      /**
       * <code>bool completed = 2;</code>
       */
      public boolean getCompleted() {
        return completed_;
      }
      /**
       * <code>bool completed = 2;</code>
       */
      public Builder setCompleted(boolean value) {
        
        completed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool completed = 2;</code>
       */
      public Builder clearCompleted() {
        
        completed_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.LastPKEvent)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.LastPKEvent)
    private static final LastPKEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LastPKEvent();
    }

    public static LastPKEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LastPKEvent>
        PARSER = new com.google.protobuf.AbstractParser<LastPKEvent>() {
      public LastPKEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LastPKEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LastPKEvent> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<LastPKEvent> getParserForType() {
      return PARSER;
    }

    public LastPKEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TableLastPKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.TableLastPK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string table_name = 1;</code>
     */
    String getTableName();
    /**
     * <code>string table_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getTableNameBytes();

    /**
     * <code>.query.QueryResult lastpk = 3;</code>
     */
    boolean hasLastpk();
    /**
     * <code>.query.QueryResult lastpk = 3;</code>
     */
    io.vitess.proto.Query.QueryResult getLastpk();
    /**
     * <code>.query.QueryResult lastpk = 3;</code>
     */
    io.vitess.proto.Query.QueryResultOrBuilder getLastpkOrBuilder();
  }
  /**
   * Protobuf type {@code binlogdata.TableLastPK}
   */
  public  static final class TableLastPK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.TableLastPK)
      TableLastPKOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TableLastPK.newBuilder() to construct.
    private TableLastPK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TableLastPK() {
      tableName_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TableLastPK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              tableName_ = s;
              break;
            }
            case 26: {
              io.vitess.proto.Query.QueryResult.Builder subBuilder = null;
              if (lastpk_ != null) {
                subBuilder = lastpk_.toBuilder();
              }
              lastpk_ = input.readMessage(io.vitess.proto.Query.QueryResult.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastpk_);
                lastpk_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_TableLastPK_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_TableLastPK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TableLastPK.class, Builder.class);
    }

    public static final int TABLE_NAME_FIELD_NUMBER = 1;
    private volatile Object tableName_;
    /**
     * <code>string table_name = 1;</code>
     */
    public String getTableName() {
      Object ref = tableName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      }
    }
    /**
     * <code>string table_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTPK_FIELD_NUMBER = 3;
    private io.vitess.proto.Query.QueryResult lastpk_;
    /**
     * <code>.query.QueryResult lastpk = 3;</code>
     */
    public boolean hasLastpk() {
      return lastpk_ != null;
    }
    /**
     * <code>.query.QueryResult lastpk = 3;</code>
     */
    public io.vitess.proto.Query.QueryResult getLastpk() {
      return lastpk_ == null ? io.vitess.proto.Query.QueryResult.getDefaultInstance() : lastpk_;
    }
    /**
     * <code>.query.QueryResult lastpk = 3;</code>
     */
    public io.vitess.proto.Query.QueryResultOrBuilder getLastpkOrBuilder() {
      return getLastpk();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTableNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
      }
      if (lastpk_ != null) {
        output.writeMessage(3, getLastpk());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTableNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
      }
      if (lastpk_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLastpk());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TableLastPK)) {
        return super.equals(obj);
      }
      TableLastPK other = (TableLastPK) obj;

      boolean result = true;
      result = result && getTableName()
          .equals(other.getTableName());
      result = result && (hasLastpk() == other.hasLastpk());
      if (hasLastpk()) {
        result = result && getLastpk()
            .equals(other.getLastpk());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTableName().hashCode();
      if (hasLastpk()) {
        hash = (37 * hash) + LASTPK_FIELD_NUMBER;
        hash = (53 * hash) + getLastpk().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TableLastPK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TableLastPK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TableLastPK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TableLastPK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TableLastPK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TableLastPK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TableLastPK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TableLastPK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TableLastPK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TableLastPK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TableLastPK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TableLastPK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TableLastPK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code binlogdata.TableLastPK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.TableLastPK)
        TableLastPKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_TableLastPK_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_TableLastPK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TableLastPK.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.TableLastPK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tableName_ = "";

        if (lastpkBuilder_ == null) {
          lastpk_ = null;
        } else {
          lastpk_ = null;
          lastpkBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_TableLastPK_descriptor;
      }

      public TableLastPK getDefaultInstanceForType() {
        return TableLastPK.getDefaultInstance();
      }

      public TableLastPK build() {
        TableLastPK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TableLastPK buildPartial() {
        TableLastPK result = new TableLastPK(this);
        result.tableName_ = tableName_;
        if (lastpkBuilder_ == null) {
          result.lastpk_ = lastpk_;
        } else {
          result.lastpk_ = lastpkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TableLastPK) {
          return mergeFrom((TableLastPK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TableLastPK other) {
        if (other == TableLastPK.getDefaultInstance()) return this;
        if (!other.getTableName().isEmpty()) {
          tableName_ = other.tableName_;
          onChanged();
        }
        if (other.hasLastpk()) {
          mergeLastpk(other.getLastpk());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TableLastPK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TableLastPK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object tableName_ = "";
      /**
       * <code>string table_name = 1;</code>
       */
      public String getTableName() {
        Object ref = tableName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          tableName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTableNameBytes() {
        Object ref = tableName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          tableName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public Builder setTableName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tableName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public Builder clearTableName() {
        
        tableName_ = getDefaultInstance().getTableName();
        onChanged();
        return this;
      }
      /**
       * <code>string table_name = 1;</code>
       */
      public Builder setTableNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tableName_ = value;
        onChanged();
        return this;
      }

      private io.vitess.proto.Query.QueryResult lastpk_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.QueryResult, io.vitess.proto.Query.QueryResult.Builder, io.vitess.proto.Query.QueryResultOrBuilder> lastpkBuilder_;
      /**
       * <code>.query.QueryResult lastpk = 3;</code>
       */
      public boolean hasLastpk() {
        return lastpkBuilder_ != null || lastpk_ != null;
      }
      /**
       * <code>.query.QueryResult lastpk = 3;</code>
       */
      public io.vitess.proto.Query.QueryResult getLastpk() {
        if (lastpkBuilder_ == null) {
          return lastpk_ == null ? io.vitess.proto.Query.QueryResult.getDefaultInstance() : lastpk_;
        } else {
          return lastpkBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.QueryResult lastpk = 3;</code>
       */
      public Builder setLastpk(io.vitess.proto.Query.QueryResult value) {
        if (lastpkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastpk_ = value;
          onChanged();
        } else {
          lastpkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.QueryResult lastpk = 3;</code>
       */
      public Builder setLastpk(
          io.vitess.proto.Query.QueryResult.Builder builderForValue) {
        if (lastpkBuilder_ == null) {
          lastpk_ = builderForValue.build();
          onChanged();
        } else {
          lastpkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.QueryResult lastpk = 3;</code>
       */
      public Builder mergeLastpk(io.vitess.proto.Query.QueryResult value) {
        if (lastpkBuilder_ == null) {
          if (lastpk_ != null) {
            lastpk_ =
              io.vitess.proto.Query.QueryResult.newBuilder(lastpk_).mergeFrom(value).buildPartial();
          } else {
            lastpk_ = value;
          }
          onChanged();
        } else {
          lastpkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.QueryResult lastpk = 3;</code>
       */
      public Builder clearLastpk() {
        if (lastpkBuilder_ == null) {
          lastpk_ = null;
          onChanged();
        } else {
          lastpk_ = null;
          lastpkBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.QueryResult lastpk = 3;</code>
       */
      public io.vitess.proto.Query.QueryResult.Builder getLastpkBuilder() {
        
        onChanged();
        return getLastpkFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.QueryResult lastpk = 3;</code>
       */
      public io.vitess.proto.Query.QueryResultOrBuilder getLastpkOrBuilder() {
        if (lastpkBuilder_ != null) {
          return lastpkBuilder_.getMessageOrBuilder();
        } else {
          return lastpk_ == null ?
              io.vitess.proto.Query.QueryResult.getDefaultInstance() : lastpk_;
        }
      }
      /**
       * <code>.query.QueryResult lastpk = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.QueryResult, io.vitess.proto.Query.QueryResult.Builder, io.vitess.proto.Query.QueryResultOrBuilder> 
          getLastpkFieldBuilder() {
        if (lastpkBuilder_ == null) {
          lastpkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.QueryResult, io.vitess.proto.Query.QueryResult.Builder, io.vitess.proto.Query.QueryResultOrBuilder>(
                  getLastpk(),
                  getParentForChildren(),
                  isClean());
          lastpk_ = null;
        }
        return lastpkBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.TableLastPK)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.TableLastPK)
    private static final TableLastPK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TableLastPK();
    }

    public static TableLastPK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TableLastPK>
        PARSER = new com.google.protobuf.AbstractParser<TableLastPK>() {
      public TableLastPK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableLastPK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TableLastPK> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TableLastPK> getParserForType() {
      return PARSER;
    }

    public TableLastPK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VStreamResultsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.VStreamResultsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    boolean hasEffectiveCallerId();
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    io.vitess.proto.Vtrpc.CallerID getEffectiveCallerId();
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    io.vitess.proto.Vtrpc.CallerIDOrBuilder getEffectiveCallerIdOrBuilder();

    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    boolean hasImmediateCallerId();
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    io.vitess.proto.Query.VTGateCallerID getImmediateCallerId();
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    io.vitess.proto.Query.VTGateCallerIDOrBuilder getImmediateCallerIdOrBuilder();

    /**
     * <code>.query.Target target = 3;</code>
     */
    boolean hasTarget();
    /**
     * <code>.query.Target target = 3;</code>
     */
    io.vitess.proto.Query.Target getTarget();
    /**
     * <code>.query.Target target = 3;</code>
     */
    io.vitess.proto.Query.TargetOrBuilder getTargetOrBuilder();

    /**
     * <code>string query = 4;</code>
     */
    String getQuery();
    /**
     * <code>string query = 4;</code>
     */
    com.google.protobuf.ByteString
        getQueryBytes();
  }
  /**
   * <pre>
   * VStreamResultsRequest is the payload for VStreamResults
   * The ids match VStreamRows, in case we decide to merge the two.
   * The ids match VStreamRows, in case we decide to merge the two.
   * </pre>
   *
   * Protobuf type {@code binlogdata.VStreamResultsRequest}
   */
  public  static final class VStreamResultsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.VStreamResultsRequest)
      VStreamResultsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VStreamResultsRequest.newBuilder() to construct.
    private VStreamResultsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VStreamResultsRequest() {
      query_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VStreamResultsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.vitess.proto.Vtrpc.CallerID.Builder subBuilder = null;
              if (effectiveCallerId_ != null) {
                subBuilder = effectiveCallerId_.toBuilder();
              }
              effectiveCallerId_ = input.readMessage(io.vitess.proto.Vtrpc.CallerID.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveCallerId_);
                effectiveCallerId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.vitess.proto.Query.VTGateCallerID.Builder subBuilder = null;
              if (immediateCallerId_ != null) {
                subBuilder = immediateCallerId_.toBuilder();
              }
              immediateCallerId_ = input.readMessage(io.vitess.proto.Query.VTGateCallerID.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(immediateCallerId_);
                immediateCallerId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.vitess.proto.Query.Target.Builder subBuilder = null;
              if (target_ != null) {
                subBuilder = target_.toBuilder();
              }
              target_ = input.readMessage(io.vitess.proto.Query.Target.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(target_);
                target_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              query_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_VStreamResultsRequest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_VStreamResultsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VStreamResultsRequest.class, Builder.class);
    }

    public static final int EFFECTIVE_CALLER_ID_FIELD_NUMBER = 1;
    private io.vitess.proto.Vtrpc.CallerID effectiveCallerId_;
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    public boolean hasEffectiveCallerId() {
      return effectiveCallerId_ != null;
    }
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    public io.vitess.proto.Vtrpc.CallerID getEffectiveCallerId() {
      return effectiveCallerId_ == null ? io.vitess.proto.Vtrpc.CallerID.getDefaultInstance() : effectiveCallerId_;
    }
    /**
     * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
     */
    public io.vitess.proto.Vtrpc.CallerIDOrBuilder getEffectiveCallerIdOrBuilder() {
      return getEffectiveCallerId();
    }

    public static final int IMMEDIATE_CALLER_ID_FIELD_NUMBER = 2;
    private io.vitess.proto.Query.VTGateCallerID immediateCallerId_;
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    public boolean hasImmediateCallerId() {
      return immediateCallerId_ != null;
    }
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    public io.vitess.proto.Query.VTGateCallerID getImmediateCallerId() {
      return immediateCallerId_ == null ? io.vitess.proto.Query.VTGateCallerID.getDefaultInstance() : immediateCallerId_;
    }
    /**
     * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
     */
    public io.vitess.proto.Query.VTGateCallerIDOrBuilder getImmediateCallerIdOrBuilder() {
      return getImmediateCallerId();
    }

    public static final int TARGET_FIELD_NUMBER = 3;
    private io.vitess.proto.Query.Target target_;
    /**
     * <code>.query.Target target = 3;</code>
     */
    public boolean hasTarget() {
      return target_ != null;
    }
    /**
     * <code>.query.Target target = 3;</code>
     */
    public io.vitess.proto.Query.Target getTarget() {
      return target_ == null ? io.vitess.proto.Query.Target.getDefaultInstance() : target_;
    }
    /**
     * <code>.query.Target target = 3;</code>
     */
    public io.vitess.proto.Query.TargetOrBuilder getTargetOrBuilder() {
      return getTarget();
    }

    public static final int QUERY_FIELD_NUMBER = 4;
    private volatile Object query_;
    /**
     * <code>string query = 4;</code>
     */
    public String getQuery() {
      Object ref = query_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        query_ = s;
        return s;
      }
    }
    /**
     * <code>string query = 4;</code>
     */
    public com.google.protobuf.ByteString
        getQueryBytes() {
      Object ref = query_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        query_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveCallerId_ != null) {
        output.writeMessage(1, getEffectiveCallerId());
      }
      if (immediateCallerId_ != null) {
        output.writeMessage(2, getImmediateCallerId());
      }
      if (target_ != null) {
        output.writeMessage(3, getTarget());
      }
      if (!getQueryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, query_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveCallerId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveCallerId());
      }
      if (immediateCallerId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImmediateCallerId());
      }
      if (target_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTarget());
      }
      if (!getQueryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, query_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VStreamResultsRequest)) {
        return super.equals(obj);
      }
      VStreamResultsRequest other = (VStreamResultsRequest) obj;

      boolean result = true;
      result = result && (hasEffectiveCallerId() == other.hasEffectiveCallerId());
      if (hasEffectiveCallerId()) {
        result = result && getEffectiveCallerId()
            .equals(other.getEffectiveCallerId());
      }
      result = result && (hasImmediateCallerId() == other.hasImmediateCallerId());
      if (hasImmediateCallerId()) {
        result = result && getImmediateCallerId()
            .equals(other.getImmediateCallerId());
      }
      result = result && (hasTarget() == other.hasTarget());
      if (hasTarget()) {
        result = result && getTarget()
            .equals(other.getTarget());
      }
      result = result && getQuery()
          .equals(other.getQuery());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveCallerId()) {
        hash = (37 * hash) + EFFECTIVE_CALLER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveCallerId().hashCode();
      }
      if (hasImmediateCallerId()) {
        hash = (37 * hash) + IMMEDIATE_CALLER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getImmediateCallerId().hashCode();
      }
      if (hasTarget()) {
        hash = (37 * hash) + TARGET_FIELD_NUMBER;
        hash = (53 * hash) + getTarget().hashCode();
      }
      hash = (37 * hash) + QUERY_FIELD_NUMBER;
      hash = (53 * hash) + getQuery().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VStreamResultsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamResultsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamResultsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamResultsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamResultsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamResultsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamResultsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamResultsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamResultsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VStreamResultsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamResultsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamResultsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VStreamResultsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * VStreamResultsRequest is the payload for VStreamResults
     * The ids match VStreamRows, in case we decide to merge the two.
     * The ids match VStreamRows, in case we decide to merge the two.
     * </pre>
     *
     * Protobuf type {@code binlogdata.VStreamResultsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.VStreamResultsRequest)
        VStreamResultsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_VStreamResultsRequest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_VStreamResultsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VStreamResultsRequest.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.VStreamResultsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerId_ = null;
        } else {
          effectiveCallerId_ = null;
          effectiveCallerIdBuilder_ = null;
        }
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerId_ = null;
        } else {
          immediateCallerId_ = null;
          immediateCallerIdBuilder_ = null;
        }
        if (targetBuilder_ == null) {
          target_ = null;
        } else {
          target_ = null;
          targetBuilder_ = null;
        }
        query_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_VStreamResultsRequest_descriptor;
      }

      public VStreamResultsRequest getDefaultInstanceForType() {
        return VStreamResultsRequest.getDefaultInstance();
      }

      public VStreamResultsRequest build() {
        VStreamResultsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VStreamResultsRequest buildPartial() {
        VStreamResultsRequest result = new VStreamResultsRequest(this);
        if (effectiveCallerIdBuilder_ == null) {
          result.effectiveCallerId_ = effectiveCallerId_;
        } else {
          result.effectiveCallerId_ = effectiveCallerIdBuilder_.build();
        }
        if (immediateCallerIdBuilder_ == null) {
          result.immediateCallerId_ = immediateCallerId_;
        } else {
          result.immediateCallerId_ = immediateCallerIdBuilder_.build();
        }
        if (targetBuilder_ == null) {
          result.target_ = target_;
        } else {
          result.target_ = targetBuilder_.build();
        }
        result.query_ = query_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VStreamResultsRequest) {
          return mergeFrom((VStreamResultsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VStreamResultsRequest other) {
        if (other == VStreamResultsRequest.getDefaultInstance()) return this;
        if (other.hasEffectiveCallerId()) {
          mergeEffectiveCallerId(other.getEffectiveCallerId());
        }
        if (other.hasImmediateCallerId()) {
          mergeImmediateCallerId(other.getImmediateCallerId());
        }
        if (other.hasTarget()) {
          mergeTarget(other.getTarget());
        }
        if (!other.getQuery().isEmpty()) {
          query_ = other.query_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VStreamResultsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VStreamResultsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.vitess.proto.Vtrpc.CallerID effectiveCallerId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Vtrpc.CallerID, io.vitess.proto.Vtrpc.CallerID.Builder, io.vitess.proto.Vtrpc.CallerIDOrBuilder> effectiveCallerIdBuilder_;
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public boolean hasEffectiveCallerId() {
        return effectiveCallerIdBuilder_ != null || effectiveCallerId_ != null;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public io.vitess.proto.Vtrpc.CallerID getEffectiveCallerId() {
        if (effectiveCallerIdBuilder_ == null) {
          return effectiveCallerId_ == null ? io.vitess.proto.Vtrpc.CallerID.getDefaultInstance() : effectiveCallerId_;
        } else {
          return effectiveCallerIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder setEffectiveCallerId(io.vitess.proto.Vtrpc.CallerID value) {
        if (effectiveCallerIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveCallerId_ = value;
          onChanged();
        } else {
          effectiveCallerIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder setEffectiveCallerId(
          io.vitess.proto.Vtrpc.CallerID.Builder builderForValue) {
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerId_ = builderForValue.build();
          onChanged();
        } else {
          effectiveCallerIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder mergeEffectiveCallerId(io.vitess.proto.Vtrpc.CallerID value) {
        if (effectiveCallerIdBuilder_ == null) {
          if (effectiveCallerId_ != null) {
            effectiveCallerId_ =
              io.vitess.proto.Vtrpc.CallerID.newBuilder(effectiveCallerId_).mergeFrom(value).buildPartial();
          } else {
            effectiveCallerId_ = value;
          }
          onChanged();
        } else {
          effectiveCallerIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public Builder clearEffectiveCallerId() {
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerId_ = null;
          onChanged();
        } else {
          effectiveCallerId_ = null;
          effectiveCallerIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public io.vitess.proto.Vtrpc.CallerID.Builder getEffectiveCallerIdBuilder() {
        
        onChanged();
        return getEffectiveCallerIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      public io.vitess.proto.Vtrpc.CallerIDOrBuilder getEffectiveCallerIdOrBuilder() {
        if (effectiveCallerIdBuilder_ != null) {
          return effectiveCallerIdBuilder_.getMessageOrBuilder();
        } else {
          return effectiveCallerId_ == null ?
              io.vitess.proto.Vtrpc.CallerID.getDefaultInstance() : effectiveCallerId_;
        }
      }
      /**
       * <code>.vtrpc.CallerID effective_caller_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Vtrpc.CallerID, io.vitess.proto.Vtrpc.CallerID.Builder, io.vitess.proto.Vtrpc.CallerIDOrBuilder> 
          getEffectiveCallerIdFieldBuilder() {
        if (effectiveCallerIdBuilder_ == null) {
          effectiveCallerIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Vtrpc.CallerID, io.vitess.proto.Vtrpc.CallerID.Builder, io.vitess.proto.Vtrpc.CallerIDOrBuilder>(
                  getEffectiveCallerId(),
                  getParentForChildren(),
                  isClean());
          effectiveCallerId_ = null;
        }
        return effectiveCallerIdBuilder_;
      }

      private io.vitess.proto.Query.VTGateCallerID immediateCallerId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.VTGateCallerID, io.vitess.proto.Query.VTGateCallerID.Builder, io.vitess.proto.Query.VTGateCallerIDOrBuilder> immediateCallerIdBuilder_;
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public boolean hasImmediateCallerId() {
        return immediateCallerIdBuilder_ != null || immediateCallerId_ != null;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public io.vitess.proto.Query.VTGateCallerID getImmediateCallerId() {
        if (immediateCallerIdBuilder_ == null) {
          return immediateCallerId_ == null ? io.vitess.proto.Query.VTGateCallerID.getDefaultInstance() : immediateCallerId_;
        } else {
          return immediateCallerIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder setImmediateCallerId(io.vitess.proto.Query.VTGateCallerID value) {
        if (immediateCallerIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          immediateCallerId_ = value;
          onChanged();
        } else {
          immediateCallerIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder setImmediateCallerId(
          io.vitess.proto.Query.VTGateCallerID.Builder builderForValue) {
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerId_ = builderForValue.build();
          onChanged();
        } else {
          immediateCallerIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder mergeImmediateCallerId(io.vitess.proto.Query.VTGateCallerID value) {
        if (immediateCallerIdBuilder_ == null) {
          if (immediateCallerId_ != null) {
            immediateCallerId_ =
              io.vitess.proto.Query.VTGateCallerID.newBuilder(immediateCallerId_).mergeFrom(value).buildPartial();
          } else {
            immediateCallerId_ = value;
          }
          onChanged();
        } else {
          immediateCallerIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public Builder clearImmediateCallerId() {
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerId_ = null;
          onChanged();
        } else {
          immediateCallerId_ = null;
          immediateCallerIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public io.vitess.proto.Query.VTGateCallerID.Builder getImmediateCallerIdBuilder() {
        
        onChanged();
        return getImmediateCallerIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      public io.vitess.proto.Query.VTGateCallerIDOrBuilder getImmediateCallerIdOrBuilder() {
        if (immediateCallerIdBuilder_ != null) {
          return immediateCallerIdBuilder_.getMessageOrBuilder();
        } else {
          return immediateCallerId_ == null ?
              io.vitess.proto.Query.VTGateCallerID.getDefaultInstance() : immediateCallerId_;
        }
      }
      /**
       * <code>.query.VTGateCallerID immediate_caller_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.VTGateCallerID, io.vitess.proto.Query.VTGateCallerID.Builder, io.vitess.proto.Query.VTGateCallerIDOrBuilder> 
          getImmediateCallerIdFieldBuilder() {
        if (immediateCallerIdBuilder_ == null) {
          immediateCallerIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.VTGateCallerID, io.vitess.proto.Query.VTGateCallerID.Builder, io.vitess.proto.Query.VTGateCallerIDOrBuilder>(
                  getImmediateCallerId(),
                  getParentForChildren(),
                  isClean());
          immediateCallerId_ = null;
        }
        return immediateCallerIdBuilder_;
      }

      private io.vitess.proto.Query.Target target_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Target, io.vitess.proto.Query.Target.Builder, io.vitess.proto.Query.TargetOrBuilder> targetBuilder_;
      /**
       * <code>.query.Target target = 3;</code>
       */
      public boolean hasTarget() {
        return targetBuilder_ != null || target_ != null;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public io.vitess.proto.Query.Target getTarget() {
        if (targetBuilder_ == null) {
          return target_ == null ? io.vitess.proto.Query.Target.getDefaultInstance() : target_;
        } else {
          return targetBuilder_.getMessage();
        }
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder setTarget(io.vitess.proto.Query.Target value) {
        if (targetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          targetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder setTarget(
          io.vitess.proto.Query.Target.Builder builderForValue) {
        if (targetBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          targetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder mergeTarget(io.vitess.proto.Query.Target value) {
        if (targetBuilder_ == null) {
          if (target_ != null) {
            target_ =
              io.vitess.proto.Query.Target.newBuilder(target_).mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          targetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public Builder clearTarget() {
        if (targetBuilder_ == null) {
          target_ = null;
          onChanged();
        } else {
          target_ = null;
          targetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public io.vitess.proto.Query.Target.Builder getTargetBuilder() {
        
        onChanged();
        return getTargetFieldBuilder().getBuilder();
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      public io.vitess.proto.Query.TargetOrBuilder getTargetOrBuilder() {
        if (targetBuilder_ != null) {
          return targetBuilder_.getMessageOrBuilder();
        } else {
          return target_ == null ?
              io.vitess.proto.Query.Target.getDefaultInstance() : target_;
        }
      }
      /**
       * <code>.query.Target target = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.vitess.proto.Query.Target, io.vitess.proto.Query.Target.Builder, io.vitess.proto.Query.TargetOrBuilder> 
          getTargetFieldBuilder() {
        if (targetBuilder_ == null) {
          targetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.vitess.proto.Query.Target, io.vitess.proto.Query.Target.Builder, io.vitess.proto.Query.TargetOrBuilder>(
                  getTarget(),
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        return targetBuilder_;
      }

      private Object query_ = "";
      /**
       * <code>string query = 4;</code>
       */
      public String getQuery() {
        Object ref = query_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          query_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string query = 4;</code>
       */
      public com.google.protobuf.ByteString
          getQueryBytes() {
        Object ref = query_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          query_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string query = 4;</code>
       */
      public Builder setQuery(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        query_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string query = 4;</code>
       */
      public Builder clearQuery() {
        
        query_ = getDefaultInstance().getQuery();
        onChanged();
        return this;
      }
      /**
       * <code>string query = 4;</code>
       */
      public Builder setQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        query_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.VStreamResultsRequest)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.VStreamResultsRequest)
    private static final VStreamResultsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VStreamResultsRequest();
    }

    public static VStreamResultsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VStreamResultsRequest>
        PARSER = new com.google.protobuf.AbstractParser<VStreamResultsRequest>() {
      public VStreamResultsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VStreamResultsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VStreamResultsRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VStreamResultsRequest> getParserForType() {
      return PARSER;
    }

    public VStreamResultsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VStreamResultsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:binlogdata.VStreamResultsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    java.util.List<io.vitess.proto.Query.Field> 
        getFieldsList();
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    io.vitess.proto.Query.Field getFields(int index);
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <code>string gtid = 3;</code>
     */
    String getGtid();
    /**
     * <code>string gtid = 3;</code>
     */
    com.google.protobuf.ByteString
        getGtidBytes();

    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    java.util.List<io.vitess.proto.Query.Row> 
        getRowsList();
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    io.vitess.proto.Query.Row getRows(int index);
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    java.util.List<? extends io.vitess.proto.Query.RowOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    io.vitess.proto.Query.RowOrBuilder getRowsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * VStreamResultsResponse is the response from VStreamResults
   * The ids match VStreamRows, in case we decide to merge the two.
   * </pre>
   *
   * Protobuf type {@code binlogdata.VStreamResultsResponse}
   */
  public  static final class VStreamResultsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:binlogdata.VStreamResultsResponse)
      VStreamResultsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VStreamResultsResponse.newBuilder() to construct.
    private VStreamResultsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VStreamResultsResponse() {
      fields_ = java.util.Collections.emptyList();
      gtid_ = "";
      rows_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VStreamResultsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>();
                mutable_bitField0_ |= 0x00000001;
              }
              fields_.add(
                  input.readMessage(io.vitess.proto.Query.Field.parser(), extensionRegistry));
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              gtid_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                rows_ = new java.util.ArrayList<io.vitess.proto.Query.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              rows_.add(
                  input.readMessage(io.vitess.proto.Query.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Binlogdata.internal_static_binlogdata_VStreamResultsResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Binlogdata.internal_static_binlogdata_VStreamResultsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VStreamResultsResponse.class, Builder.class);
    }

    private int bitField0_;
    public static final int FIELDS_FIELD_NUMBER = 1;
    private java.util.List<io.vitess.proto.Query.Field> fields_;
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public java.util.List<io.vitess.proto.Query.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public io.vitess.proto.Query.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .query.Field fields = 1;</code>
     */
    public io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int GTID_FIELD_NUMBER = 3;
    private volatile Object gtid_;
    /**
     * <code>string gtid = 3;</code>
     */
    public String getGtid() {
      Object ref = gtid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        gtid_ = s;
        return s;
      }
    }
    /**
     * <code>string gtid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getGtidBytes() {
      Object ref = gtid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        gtid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROWS_FIELD_NUMBER = 4;
    private java.util.List<io.vitess.proto.Query.Row> rows_;
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public java.util.List<io.vitess.proto.Query.Row> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public java.util.List<? extends io.vitess.proto.Query.RowOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public io.vitess.proto.Query.Row getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .query.Row rows = 4;</code>
     */
    public io.vitess.proto.Query.RowOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(1, fields_.get(i));
      }
      if (!getGtidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, gtid_);
      }
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(4, rows_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fields_.get(i));
      }
      if (!getGtidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, gtid_);
      }
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rows_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VStreamResultsResponse)) {
        return super.equals(obj);
      }
      VStreamResultsResponse other = (VStreamResultsResponse) obj;

      boolean result = true;
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && getGtid()
          .equals(other.getGtid());
      result = result && getRowsList()
          .equals(other.getRowsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (37 * hash) + GTID_FIELD_NUMBER;
      hash = (53 * hash) + getGtid().hashCode();
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VStreamResultsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamResultsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamResultsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamResultsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamResultsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VStreamResultsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VStreamResultsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamResultsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamResultsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VStreamResultsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VStreamResultsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VStreamResultsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VStreamResultsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * VStreamResultsResponse is the response from VStreamResults
     * The ids match VStreamRows, in case we decide to merge the two.
     * </pre>
     *
     * Protobuf type {@code binlogdata.VStreamResultsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:binlogdata.VStreamResultsResponse)
        VStreamResultsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Binlogdata.internal_static_binlogdata_VStreamResultsResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Binlogdata.internal_static_binlogdata_VStreamResultsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VStreamResultsResponse.class, Builder.class);
      }

      // Construct using binlogdata.Binlogdata.VStreamResultsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
          getRowsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldsBuilder_.clear();
        }
        gtid_ = "";

        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Binlogdata.internal_static_binlogdata_VStreamResultsResponse_descriptor;
      }

      public VStreamResultsResponse getDefaultInstanceForType() {
        return VStreamResultsResponse.getDefaultInstance();
      }

      public VStreamResultsResponse build() {
        VStreamResultsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VStreamResultsResponse buildPartial() {
        VStreamResultsResponse result = new VStreamResultsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.gtid_ = gtid_;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VStreamResultsResponse) {
          return mergeFrom((VStreamResultsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VStreamResultsResponse other) {
        if (other == VStreamResultsResponse.getDefaultInstance()) return this;
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (!other.getGtid().isEmpty()) {
          gtid_ = other.gtid_;
          onChanged();
        }
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VStreamResultsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VStreamResultsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.vitess.proto.Query.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fields_ = new java.util.ArrayList<io.vitess.proto.Query.Field>(fields_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder setFields(
          int index, io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder setFields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addFields(io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addFields(
          int index, io.vitess.proto.Query.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addFields(
          io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addFields(
          int index, io.vitess.proto.Query.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder addAllFields(
          Iterable<? extends io.vitess.proto.Query.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public java.util.List<? extends io.vitess.proto.Query.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public io.vitess.proto.Query.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, io.vitess.proto.Query.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Field fields = 1;</code>
       */
      public java.util.List<io.vitess.proto.Query.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.vitess.proto.Query.Field, io.vitess.proto.Query.Field.Builder, io.vitess.proto.Query.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private Object gtid_ = "";
      /**
       * <code>string gtid = 3;</code>
       */
      public String getGtid() {
        Object ref = gtid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          gtid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getGtidBytes() {
        Object ref = gtid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          gtid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public Builder setGtid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gtid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public Builder clearGtid() {
        
        gtid_ = getDefaultInstance().getGtid();
        onChanged();
        return this;
      }
      /**
       * <code>string gtid = 3;</code>
       */
      public Builder setGtidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gtid_ = value;
        onChanged();
        return this;
      }

      private java.util.List<io.vitess.proto.Query.Row> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          rows_ = new java.util.ArrayList<io.vitess.proto.Query.Row>(rows_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public java.util.List<io.vitess.proto.Query.Row> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.Row getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder setRows(
          int index, io.vitess.proto.Query.Row value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder setRows(
          int index, io.vitess.proto.Query.Row.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addRows(io.vitess.proto.Query.Row value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addRows(
          int index, io.vitess.proto.Query.Row value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addRows(
          io.vitess.proto.Query.Row.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addRows(
          int index, io.vitess.proto.Query.Row.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder addAllRows(
          Iterable<? extends io.vitess.proto.Query.Row> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.Row.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.RowOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public java.util.List<? extends io.vitess.proto.Query.RowOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.Row.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            io.vitess.proto.Query.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public io.vitess.proto.Query.Row.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, io.vitess.proto.Query.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .query.Row rows = 4;</code>
       */
      public java.util.List<io.vitess.proto.Query.Row.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.vitess.proto.Query.Row, io.vitess.proto.Query.Row.Builder, io.vitess.proto.Query.RowOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:binlogdata.VStreamResultsResponse)
    }

    // @@protoc_insertion_point(class_scope:binlogdata.VStreamResultsResponse)
    private static final VStreamResultsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VStreamResultsResponse();
    }

    public static VStreamResultsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VStreamResultsResponse>
        PARSER = new com.google.protobuf.AbstractParser<VStreamResultsResponse>() {
      public VStreamResultsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VStreamResultsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VStreamResultsResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VStreamResultsResponse> getParserForType() {
      return PARSER;
    }

    public VStreamResultsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_Charset_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_Charset_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_BinlogTransaction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_BinlogTransaction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_BinlogTransaction_Statement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_BinlogTransaction_Statement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_StreamKeyRangeRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_StreamKeyRangeRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_StreamKeyRangeResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_StreamKeyRangeResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_StreamTablesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_StreamTablesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_StreamTablesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_StreamTablesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_Rule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_Rule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_Filter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_Filter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_BinlogSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_BinlogSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_RowChange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_RowChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_RowEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_RowEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_FieldEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_FieldEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_ShardGtid_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_ShardGtid_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_VGtid_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_VGtid_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_KeyspaceShard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_KeyspaceShard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_Journal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_Journal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_VEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_VEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_MinimalTable_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_MinimalTable_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_MinimalSchema_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_MinimalSchema_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_VStreamRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_VStreamRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_VStreamResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_VStreamResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_VStreamRowsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_VStreamRowsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_VStreamRowsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_VStreamRowsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_LastPKEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_LastPKEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_TableLastPK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_TableLastPK_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_VStreamResultsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_VStreamResultsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_binlogdata_VStreamResultsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_binlogdata_VStreamResultsResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020binlogdata.proto\022\nbinlogdata\032\013vtrpc.pr" +
      "oto\032\013query.proto\032\016topodata.proto\"7\n\007Char" +
      "set\022\016\n\006client\030\001 \001(\005\022\014\n\004conn\030\002 \001(\005\022\016\n\006ser" +
      "ver\030\003 \001(\005\"\265\003\n\021BinlogTransaction\022;\n\nstate" +
      "ments\030\001 \003(\0132\'.binlogdata.BinlogTransacti" +
      "on.Statement\022&\n\013event_token\030\004 \001(\0132\021.quer" +
      "y.EventToken\032\256\002\n\tStatement\022B\n\010category\030\001" +
      " \001(\01620.binlogdata.BinlogTransaction.Stat" +
      "ement.Category\022$\n\007charset\030\002 \001(\0132\023.binlog" +
      "data.Charset\022\013\n\003sql\030\003 \001(\014\"\251\001\n\010Category\022\023" +
      "\n\017BL_UNRECOGNIZED\020\000\022\014\n\010BL_BEGIN\020\001\022\r\n\tBL_" +
      "COMMIT\020\002\022\017\n\013BL_ROLLBACK\020\003\022\025\n\021BL_DML_DEPR" +
      "ECATED\020\004\022\n\n\006BL_DDL\020\005\022\n\n\006BL_SET\020\006\022\r\n\tBL_I" +
      "NSERT\020\007\022\r\n\tBL_UPDATE\020\010\022\r\n\tBL_DELETE\020\tJ\004\010" +
      "\002\020\003J\004\010\003\020\004\"v\n\025StreamKeyRangeRequest\022\020\n\010po" +
      "sition\030\001 \001(\t\022%\n\tkey_range\030\002 \001(\0132\022.topoda" +
      "ta.KeyRange\022$\n\007charset\030\003 \001(\0132\023.binlogdat" +
      "a.Charset\"S\n\026StreamKeyRangeResponse\0229\n\022b" +
      "inlog_transaction\030\001 \001(\0132\035.binlogdata.Bin" +
      "logTransaction\"]\n\023StreamTablesRequest\022\020\n" +
      "\010position\030\001 \001(\t\022\016\n\006tables\030\002 \003(\t\022$\n\007chars" +
      "et\030\003 \001(\0132\023.binlogdata.Charset\"Q\n\024StreamT" +
      "ablesResponse\0229\n\022binlog_transaction\030\001 \001(" +
      "\0132\035.binlogdata.BinlogTransaction\"%\n\004Rule" +
      "\022\r\n\005match\030\001 \001(\t\022\016\n\006filter\030\002 \001(\t\"\234\001\n\006Filt" +
      "er\022\037\n\005rules\030\001 \003(\0132\020.binlogdata.Rule\0229\n\016f" +
      "ieldEventMode\030\002 \001(\0162!.binlogdata.Filter." +
      "FieldEventMode\"6\n\016FieldEventMode\022\023\n\017ERR_" +
      "ON_MISMATCH\020\000\022\017\n\013BEST_EFFORT\020\001\"\217\002\n\014Binlo" +
      "gSource\022\020\n\010keyspace\030\001 \001(\t\022\r\n\005shard\030\002 \001(\t" +
      "\022)\n\013tablet_type\030\003 \001(\0162\024.topodata.TabletT" +
      "ype\022%\n\tkey_range\030\004 \001(\0132\022.topodata.KeyRan" +
      "ge\022\016\n\006tables\030\005 \003(\t\022\"\n\006filter\030\006 \001(\0132\022.bin" +
      "logdata.Filter\022\'\n\006on_ddl\030\007 \001(\0162\027.binlogd" +
      "ata.OnDDLAction\022\026\n\016external_mysql\030\010 \001(\t\022" +
      "\027\n\017stop_after_copy\030\t \001(\010\"B\n\tRowChange\022\032\n" +
      "\006before\030\001 \001(\0132\n.query.Row\022\031\n\005after\030\002 \001(\013" +
      "2\n.query.Row\"J\n\010RowEvent\022\022\n\ntable_name\030\001" +
      " \001(\t\022*\n\013row_changes\030\002 \003(\0132\025.binlogdata.R" +
      "owChange\">\n\nFieldEvent\022\022\n\ntable_name\030\001 \001" +
      "(\t\022\034\n\006fields\030\002 \003(\0132\014.query.Field\"g\n\tShar" +
      "dGtid\022\020\n\010keyspace\030\001 \001(\t\022\r\n\005shard\030\002 \001(\t\022\014" +
      "\n\004gtid\030\003 \001(\t\022+\n\ntable_p_ks\030\004 \003(\0132\027.binlo" +
      "gdata.TableLastPK\"3\n\005VGtid\022*\n\013shard_gtid" +
      "s\030\001 \003(\0132\025.binlogdata.ShardGtid\"0\n\rKeyspa" +
      "ceShard\022\020\n\010keyspace\030\001 \001(\t\022\r\n\005shard\030\002 \001(\t" +
      "\"\347\001\n\007Journal\022\n\n\002id\030\001 \001(\003\0221\n\016migration_ty" +
      "pe\030\002 \001(\0162\031.binlogdata.MigrationType\022\016\n\006t" +
      "ables\030\003 \003(\t\022\026\n\016local_position\030\004 \001(\t\022*\n\013s" +
      "hard_gtids\030\005 \003(\0132\025.binlogdata.ShardGtid\022" +
      "/\n\014participants\030\006 \003(\0132\031.binlogdata.Keysp" +
      "aceShard\022\030\n\020source_workflows\030\007 \003(\t\"\324\002\n\006V" +
      "Event\022$\n\004type\030\001 \001(\0162\026.binlogdata.VEventT" +
      "ype\022\021\n\ttimestamp\030\002 \001(\003\022\014\n\004gtid\030\003 \001(\t\022\021\n\t" +
      "statement\030\004 \001(\t\022\'\n\trow_event\030\005 \001(\0132\024.bin" +
      "logdata.RowEvent\022+\n\013field_event\030\006 \001(\0132\026." +
      "binlogdata.FieldEvent\022 \n\005vgtid\030\007 \001(\0132\021.b" +
      "inlogdata.VGtid\022$\n\007journal\030\010 \001(\0132\023.binlo" +
      "gdata.Journal\022\013\n\003dml\030\t \001(\t\022\024\n\014current_ti" +
      "me\030\024 \001(\003\022/\n\016last_p_k_event\030\025 \001(\0132\027.binlo" +
      "gdata.LastPKEvent\"O\n\014MinimalTable\022\014\n\004nam" +
      "e\030\001 \001(\t\022\034\n\006fields\030\002 \003(\0132\014.query.Field\022\023\n" +
      "\013p_k_columns\030\003 \003(\003\"9\n\rMinimalSchema\022(\n\006t" +
      "ables\030\001 \003(\0132\030.binlogdata.MinimalTable\"\371\001" +
      "\n\016VStreamRequest\022,\n\023effective_caller_id\030" +
      "\001 \001(\0132\017.vtrpc.CallerID\0222\n\023immediate_call" +
      "er_id\030\002 \001(\0132\025.query.VTGateCallerID\022\035\n\006ta" +
      "rget\030\003 \001(\0132\r.query.Target\022\020\n\010position\030\004 " +
      "\001(\t\022\"\n\006filter\030\005 \001(\0132\022.binlogdata.Filter\022" +
      "0\n\017table_last_p_ks\030\006 \003(\0132\027.binlogdata.Ta" +
      "bleLastPK\"5\n\017VStreamResponse\022\"\n\006events\030\001" +
      " \003(\0132\022.binlogdata.VEvent\"\310\001\n\022VStreamRows" +
      "Request\022,\n\023effective_caller_id\030\001 \001(\0132\017.v" +
      "trpc.CallerID\0222\n\023immediate_caller_id\030\002 \001" +
      "(\0132\025.query.VTGateCallerID\022\035\n\006target\030\003 \001(" +
      "\0132\r.query.Target\022\r\n\005query\030\004 \001(\t\022\"\n\006lastp" +
      "k\030\005 \001(\0132\022.query.QueryResult\"\227\001\n\023VStreamR" +
      "owsResponse\022\034\n\006fields\030\001 \003(\0132\014.query.Fiel" +
      "d\022\036\n\010pkfields\030\002 \003(\0132\014.query.Field\022\014\n\004gti" +
      "d\030\003 \001(\t\022\030\n\004rows\030\004 \003(\0132\n.query.Row\022\032\n\006las" +
      "tpk\030\005 \001(\0132\n.query.Row\"Q\n\013LastPKEvent\022/\n\016" +
      "table_last_p_k\030\001 \001(\0132\027.binlogdata.TableL" +
      "astPK\022\021\n\tcompleted\030\002 \001(\010\"E\n\013TableLastPK\022" +
      "\022\n\ntable_name\030\001 \001(\t\022\"\n\006lastpk\030\003 \001(\0132\022.qu" +
      "ery.QueryResult\"\247\001\n\025VStreamResultsReques" +
      "t\022,\n\023effective_caller_id\030\001 \001(\0132\017.vtrpc.C" +
      "allerID\0222\n\023immediate_caller_id\030\002 \001(\0132\025.q" +
      "uery.VTGateCallerID\022\035\n\006target\030\003 \001(\0132\r.qu" +
      "ery.Target\022\r\n\005query\030\004 \001(\t\"^\n\026VStreamResu" +
      "ltsResponse\022\034\n\006fields\030\001 \003(\0132\014.query.Fiel" +
      "d\022\014\n\004gtid\030\003 \001(\t\022\030\n\004rows\030\004 \003(\0132\n.query.Ro" +
      "w*>\n\013OnDDLAction\022\n\n\006IGNORE\020\000\022\010\n\004STOP\020\001\022\010" +
      "\n\004EXEC\020\002\022\017\n\013EXEC_IGNORE\020\003*\371\001\n\nVEventType" +
      "\022\013\n\007UNKNOWN\020\000\022\010\n\004GTID\020\001\022\t\n\005BEGIN\020\002\022\n\n\006CO" +
      "MMIT\020\003\022\014\n\010ROLLBACK\020\004\022\007\n\003DDL\020\005\022\n\n\006INSERT\020" +
      "\006\022\013\n\007REPLACE\020\007\022\n\n\006UPDATE\020\010\022\n\n\006DELETE\020\t\022\007" +
      "\n\003SET\020\n\022\t\n\005OTHER\020\013\022\007\n\003ROW\020\014\022\t\n\005FIELD\020\r\022\r" +
      "\n\tHEARTBEAT\020\016\022\t\n\005VGTID\020\017\022\013\n\007JOURNAL\020\020\022\013\n" +
      "\007VERSION\020\021\022\n\n\006LASTPK\020\022\022\r\n\tSAVEPOINT\020\023*\'\n" +
      "\rMigrationType\022\n\n\006TABLES\020\000\022\n\n\006SHARDS\020\001B)" +
      "Z\'vitess.io/vitess/go/vt/proto/binlogdat" +
      "ab\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.vitess.proto.Vtrpc.getDescriptor(),
          io.vitess.proto.Query.getDescriptor(),
          io.vitess.proto.Topodata.getDescriptor(),
        }, assigner);
    internal_static_binlogdata_Charset_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_binlogdata_Charset_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_Charset_descriptor,
        new String[] { "Client", "Conn", "Server", });
    internal_static_binlogdata_BinlogTransaction_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_binlogdata_BinlogTransaction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_BinlogTransaction_descriptor,
        new String[] { "Statements", "EventToken", });
    internal_static_binlogdata_BinlogTransaction_Statement_descriptor =
      internal_static_binlogdata_BinlogTransaction_descriptor.getNestedTypes().get(0);
    internal_static_binlogdata_BinlogTransaction_Statement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_BinlogTransaction_Statement_descriptor,
        new String[] { "Category", "Charset", "Sql", });
    internal_static_binlogdata_StreamKeyRangeRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_binlogdata_StreamKeyRangeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_StreamKeyRangeRequest_descriptor,
        new String[] { "Position", "KeyRange", "Charset", });
    internal_static_binlogdata_StreamKeyRangeResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_binlogdata_StreamKeyRangeResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_StreamKeyRangeResponse_descriptor,
        new String[] { "BinlogTransaction", });
    internal_static_binlogdata_StreamTablesRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_binlogdata_StreamTablesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_StreamTablesRequest_descriptor,
        new String[] { "Position", "Tables", "Charset", });
    internal_static_binlogdata_StreamTablesResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_binlogdata_StreamTablesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_StreamTablesResponse_descriptor,
        new String[] { "BinlogTransaction", });
    internal_static_binlogdata_Rule_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_binlogdata_Rule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_Rule_descriptor,
        new String[] { "Match", "Filter", });
    internal_static_binlogdata_Filter_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_binlogdata_Filter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_Filter_descriptor,
        new String[] { "Rules", "FieldEventMode", });
    internal_static_binlogdata_BinlogSource_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_binlogdata_BinlogSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_BinlogSource_descriptor,
        new String[] { "Keyspace", "Shard", "TabletType", "KeyRange", "Tables", "Filter", "OnDdl", "ExternalMysql", "StopAfterCopy", });
    internal_static_binlogdata_RowChange_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_binlogdata_RowChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_RowChange_descriptor,
        new String[] { "Before", "After", });
    internal_static_binlogdata_RowEvent_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_binlogdata_RowEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_RowEvent_descriptor,
        new String[] { "TableName", "RowChanges", });
    internal_static_binlogdata_FieldEvent_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_binlogdata_FieldEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_FieldEvent_descriptor,
        new String[] { "TableName", "Fields", });
    internal_static_binlogdata_ShardGtid_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_binlogdata_ShardGtid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_ShardGtid_descriptor,
        new String[] { "Keyspace", "Shard", "Gtid", "TablePKs", });
    internal_static_binlogdata_VGtid_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_binlogdata_VGtid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_VGtid_descriptor,
        new String[] { "ShardGtids", });
    internal_static_binlogdata_KeyspaceShard_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_binlogdata_KeyspaceShard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_KeyspaceShard_descriptor,
        new String[] { "Keyspace", "Shard", });
    internal_static_binlogdata_Journal_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_binlogdata_Journal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_Journal_descriptor,
        new String[] { "Id", "MigrationType", "Tables", "LocalPosition", "ShardGtids", "Participants", "SourceWorkflows", });
    internal_static_binlogdata_VEvent_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_binlogdata_VEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_VEvent_descriptor,
        new String[] { "Type", "Timestamp", "Gtid", "Statement", "RowEvent", "FieldEvent", "Vgtid", "Journal", "Dml", "CurrentTime", "LastPKEvent", });
    internal_static_binlogdata_MinimalTable_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_binlogdata_MinimalTable_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_MinimalTable_descriptor,
        new String[] { "Name", "Fields", "PKColumns", });
    internal_static_binlogdata_MinimalSchema_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_binlogdata_MinimalSchema_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_MinimalSchema_descriptor,
        new String[] { "Tables", });
    internal_static_binlogdata_VStreamRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_binlogdata_VStreamRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_VStreamRequest_descriptor,
        new String[] { "EffectiveCallerId", "ImmediateCallerId", "Target", "Position", "Filter", "TableLastPKs", });
    internal_static_binlogdata_VStreamResponse_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_binlogdata_VStreamResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_VStreamResponse_descriptor,
        new String[] { "Events", });
    internal_static_binlogdata_VStreamRowsRequest_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_binlogdata_VStreamRowsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_VStreamRowsRequest_descriptor,
        new String[] { "EffectiveCallerId", "ImmediateCallerId", "Target", "Query", "Lastpk", });
    internal_static_binlogdata_VStreamRowsResponse_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_binlogdata_VStreamRowsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_VStreamRowsResponse_descriptor,
        new String[] { "Fields", "Pkfields", "Gtid", "Rows", "Lastpk", });
    internal_static_binlogdata_LastPKEvent_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_binlogdata_LastPKEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_LastPKEvent_descriptor,
        new String[] { "TableLastPK", "Completed", });
    internal_static_binlogdata_TableLastPK_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_binlogdata_TableLastPK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_TableLastPK_descriptor,
        new String[] { "TableName", "Lastpk", });
    internal_static_binlogdata_VStreamResultsRequest_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_binlogdata_VStreamResultsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_VStreamResultsRequest_descriptor,
        new String[] { "EffectiveCallerId", "ImmediateCallerId", "Target", "Query", });
    internal_static_binlogdata_VStreamResultsResponse_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_binlogdata_VStreamResultsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_binlogdata_VStreamResultsResponse_descriptor,
        new String[] { "Fields", "Gtid", "Rows", });
    io.vitess.proto.Vtrpc.getDescriptor();
    io.vitess.proto.Query.getDescriptor();
    io.vitess.proto.Topodata.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
