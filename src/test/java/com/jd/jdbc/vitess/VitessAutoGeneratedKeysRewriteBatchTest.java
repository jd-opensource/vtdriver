/*
Copyright 2021 JD Project Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package com.jd.jdbc.vitess;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import static org.junit.Assert.assertEquals;
import testsuite.internal.TestSuiteShardSpec;

public class VitessAutoGeneratedKeysRewriteBatchTest extends VitessAutoGeneratedKeysTest {
    @Override
    protected void getConn() throws SQLException {
        String url = getConnectionUrl(Driver.of(TestSuiteShardSpec.TWO_SHARDS)) + "&rewriteBatchedStatements=true";
        conn = DriverManager.getConnection(url);
    }

    public void test25InsertDuplicateKeyUseExecuteBatch() throws Exception {
        clean();
        int[] expectedRc = {1, 1, 2};
        int[] expectedGeneratedKeys = {100, 123, 123};

        try (Statement stmt = conn.createStatement()) {
            stmt.addBatch(sql100);
            stmt.addBatch(sql123);
            stmt.addBatch(insertDuplicate);
            int[] rc = stmt.executeBatch();

            for (int i = 0; i < rc.length; i++) {
                assertEquals(expectedRc[i], rc[i]);
            }
            ResultSet generatedKeys = stmt.getGeneratedKeys();
            checkGeneratedKeysMetaData(generatedKeys);
            for (int i = 0; i < rc.length; i++) {
                generatedKeys.next();
                assertEquals(expectedGeneratedKeys[i], generatedKeys.getInt(1));
            }
            // last_insert_id is 0
            ResultSet selectResult = stmt.executeQuery(selete123);
            while (selectResult.next()) {
                assertEquals(123, selectResult.getLong(1));
                assertEquals("zz", selectResult.getString(3));
            }
        }
    }
}
