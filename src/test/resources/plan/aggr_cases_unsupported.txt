# Reason: multiple keyspace
# aggregate on RHS subquery (tests symbol table merge)
"select user.a, t.b from user join (select count(*) b from unsharded) as t"
{
  "QueryType": "SELECT",
  "Original": "select user.a, t.b from user join (select count(*) b from unsharded) as t",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0,R:0",
    "TableName": "`user`_unsharded",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select `user`.a from user where 1 != 1",
        "Query": "select `user`.a from user",
        "Table": "user"
      },
      {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select t.b from (select count(*) as b from unsharded where 1 != 1) as t where 1 != 1",
        "Query": "select t.b from (select count(*) as b from unsharded) as t",
        "Table": "unsharded"
      }
    ]
  }
}
Gen4 plan same as above

# Reason: routing rules
# routing rules for aggregates
"select id, count(*) from route2 group by id"
{
  "QueryType": "SELECT",
  "Original": "select id, count(*) from route2 group by id",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "Unsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select id, count(*) from unsharded as route2 where 1 != 1 group by id",
    "Query": "select id, count(*) from unsharded as route2 group by id",
    "Table": "unsharded"
  }
}
Gen4 plan same as above

# Reason: reference table
# order by on a reference table
"select col from ref order by col"
{
  "QueryType": "SELECT",
  "Original": "select col from ref order by col",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "Reference",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select col from ref where 1 != 1",
    "Query": "select col from ref order by col asc",
    "Table": "ref"
  }
}
Gen4 plan same as above

# aggregation filtering by having on a route with no group by with non-unique vindex filter
"select 1 from user having count(id) = 10 and name = 'a'"
{
  "QueryType": "SELECT",
  "Original": "select 1 from user having count(id) = 10 and name = 'a'",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select 1 from user where 1 != 1",
    "Query": "select 1 from user having count(id) = 10 and name = 'a'",
    "Table": "user",
    "Values": [
      "VARCHAR(\"a\")"
    ],
    "Vindex": "name_user_map"
  }
}
{
  "QueryType": "SELECT",
  "Original": "select 1 from user having count(id) = 10 and name = 'a'",
  "Instructions": {
    "OperatorType": "SimpleProjection",
    "Columns": [
      0
    ],
    "Inputs": [
      {
        "OperatorType": "Filter",
        "Predicate": "OFFSET(1, 'count(id)') = 10",
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Scalar",
            "Aggregates": "random(0) AS 1, sum_count(1) AS count(id)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Equal",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1, count(id) from user where 1 != 1",
                "Query": "select 1, count(id) from user where `name` = 'a'",
                "Table": "user",
                "Values": [
                  "VARCHAR(\"a\")"
                ],
                "Vindex": "name_user_map"
              }
            ]
          }
        ]
      }
    ]
  }
}

# order by inside and outside parenthesis select
"(select id from user order by 1 desc) order by 1 asc limit 2"
{
  "QueryType": "SELECT",
  "Original": "(select id from user order by 1 desc) order by 1 asc limit 2",
  "Instructions": {
    "OperatorType": "Limit",
    "Count": "INT64(2)",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id, weight_string(id) from user where 1 != 1",
        "OrderBy": "(0|1) ASC",
        "Query": "select id, weight_string(id) from user order by 1 asc limit :__upper_limit",
        "ResultColumns": 1,
        "Table": "user"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "(select id from user order by 1 desc) order by 1 asc limit 2",
  "Instructions": {
    "OperatorType": "Limit",
    "Count": "INT64(2)",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id, weight_string(id) from user where 1 != 1",
        "OrderBy": "(0|1) ASC",
        "Query": "select id, weight_string(id) from user order by id asc limit :__upper_limit",
        "ResultColumns": 1,
        "Table": "user"
      }
    ]
  }
}