# Single table sharded scatter
"select col from user"
{
  "QueryType": "SELECT",
  "Original": "select col from user",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select col from user where 1 != 1",
    "Query": "select col from user",
    "Table": "user"
  }
}

# Single table unsharded
"select col from unsharded"
{
  "QueryType": "SELECT",
  "Original": "select col from unsharded",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select col from unsharded where 1 != 1",
    "Query": "select col from unsharded",
    "Table": "unsharded"
  }
}

# Single table unsharded and no metadata
"select col from unsharded_no_metadata"
{
  "QueryType": "SELECT",
  "Original": "select col from unsharded_no_metadata",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select col from unsharded_no_metadata where 1 != 1",
    "Query": "select col from unsharded_no_metadata",
    "Table": "unsharded_no_metadata"
  }
}

# implicit table reference for unsharded keyspace
"select main.foo.col from main.foo"
{
  "QueryType": "SELECT",
  "Original": "select main.foo.col from main.foo",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select foo.col from foo where 1 != 1",
    "Query": "select foo.col from foo",
    "Table": "foo"
  }
}

# Single information_schema query
"select col from information_schema.foo"
{
  "QueryType": "SELECT",
  "Original": "select col from information_schema.foo",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectDBA",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select col from information_schema.foo where 1 != 1",
    "Query": "select col from information_schema.foo"
  }
}

# access to unqualified column names in information_schema
"select * from information_schema.a where b=10"
{
  "QueryType": "SELECT",
  "Original": "select * from information_schema.a where b=10",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectDBA",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select * from information_schema.a where 1 != 1",
    "Query": "select * from information_schema.a where b = 10"
  }
}

# access to qualified column names in information_schema
"select * from information_schema.a where information_schema.a.b=10"
{
  "QueryType": "SELECT",
  "Original": "select * from information_schema.a where information_schema.a.b=10",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectDBA",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select * from information_schema.a where 1 != 1",
    "Query": "select * from information_schema.a where information_schema.a.b = 10"
  }
}

# Multi-table unsharded
"select m1.col from unsharded as m1 join unsharded as m2"
{
  "QueryType": "SELECT",
  "Original": "select m1.col from unsharded as m1 join unsharded as m2",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select m1.col from unsharded as m1 join unsharded as m2 where 1 != 1",
    "Query": "select m1.col from unsharded as m1 join unsharded as m2",
    "Table": "unsharded"
  }
}

# ',' join unsharded
"select u1.a, u2.a from unsharded u1, unsharded u2"
{
  "QueryType": "SELECT",
  "Original": "select u1.a, u2.a from unsharded u1, unsharded u2",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select u1.a, u2.a from unsharded as u1, unsharded as u2 where 1 != 1",
    "Query": "select u1.a, u2.a from unsharded as u1, unsharded as u2",
    "Table": "unsharded"
  }
}

# ',' join information_schema
"select * from information_schema.a, information_schema.b"
{
  "QueryType": "SELECT",
  "Original": "select * from information_schema.a, information_schema.b",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectDBA",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select * from information_schema.a, information_schema.b where 1 != 1",
    "Query": "select * from information_schema.a, information_schema.b"
  }
}

# ',' 3-way join unsharded
"select u1.a, u2.a from unsharded u1, unsharded u2, unsharded u3"
{
  "QueryType": "SELECT",
  "Original": "select u1.a, u2.a from unsharded u1, unsharded u2, unsharded u3",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select u1.a, u2.a from unsharded as u1, unsharded as u2, unsharded as u3 where 1 != 1",
    "Query": "select u1.a, u2.a from unsharded as u1, unsharded as u2, unsharded as u3",
    "Table": "unsharded"
  }
}

# Left join, single chunk
"select m1.col from unsharded as m1 left join unsharded as m2 on m1.a=m2.b"
{
  "QueryType": "SELECT",
  "Original": "select m1.col from unsharded as m1 left join unsharded as m2 on m1.a=m2.b",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select m1.col from unsharded as m1 left join unsharded as m2 on m1.a = m2.b where 1 != 1",
    "Query": "select m1.col from unsharded as m1 left join unsharded as m2 on m1.a = m2.b",
    "Table": "unsharded"
  }
}

# Right join
"select m1.col from unsharded as m1 right join unsharded as m2 on m1.a=m2.b"
{
  "QueryType": "SELECT",
  "Original": "select m1.col from unsharded as m1 right join unsharded as m2 on m1.a=m2.b",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select m1.col from unsharded as m2 left join unsharded as m1 on m1.a = m2.b where 1 != 1",
    "Query": "select m1.col from unsharded as m2 left join unsharded as m1 on m1.a = m2.b",
    "Table": "unsharded"
  }
}

# Right join with a join LHS
"select m1.col from unsharded as m1 join unsharded as m2 right join unsharded as m3 on m1.a=m2.b"
{
  "QueryType": "SELECT",
  "Original": "select m1.col from unsharded as m1 join unsharded as m2 right join unsharded as m3 on m1.a=m2.b",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select m1.col from unsharded as m3 left join (unsharded as m1 join unsharded as m2) on m1.a = m2.b where 1 != 1",
    "Query": "select m1.col from unsharded as m3 left join (unsharded as m1 join unsharded as m2) on m1.a = m2.b",
    "Table": "unsharded"
  }
}

# Straight-join
"select m1.col from unsharded as m1 straight_join unsharded as m2"
{
  "QueryType": "SELECT",
  "Original": "select m1.col from unsharded as m1 straight_join unsharded as m2",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select m1.col from unsharded as m1 straight_join unsharded as m2 where 1 != 1",
    "Query": "select m1.col from unsharded as m1 straight_join unsharded as m2",
    "Table": "unsharded"
  }
}

# Multi-table, multi-chunk
"select music.col from user join music"
{
  "QueryType": "SELECT",
  "Original": "select music.col from user join music",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": [1],
    "TableName": "user_music",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from user where 1 != 1",
        "Query": "select 1 from user",
        "Table": "user"
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select music.col from music where 1 != 1",
        "Query": "select music.col from music",
        "Table": "music"
      }
    ]
  }
}

# ',' join
"select music.col from user, music"
{
  "QueryType": "SELECT",
  "Original": "select music.col from user, music",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": [1],
    "TableName": "user_music",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from user where 1 != 1",
        "Query": "select 1 from user",
        "Table": "user"
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select music.col from music where 1 != 1",
        "Query": "select music.col from music",
        "Table": "music"
      }
    ]
  }
}

# mergeable sharded join on unique vindex
"select user.col from user join user_extra on user.name = user_extra.user_id"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on user.name = user_extra.user_id",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select user.col from user join user_extra on user.name = user_extra.user_id where 1 != 1",
    "Query": "select user.col from user join user_extra on user.name = user_extra.user_id",
    "Table": "user"
  }
}

# mergeable sharded join on unique vindex (parenthesized ON clause)
"select user.col from user join user_extra on (user.name = user_extra.user_id)"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on (user.name = user_extra.user_id)",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select user.col from user join user_extra on user.name = user_extra.user_id where 1 != 1",
    "Query": "select user.col from user join user_extra on user.name = user_extra.user_id",
    "Table": "user"
  }
}

# mergeable sharded join on unique vindex, with a stray condition
"select user.col from user join user_extra on user.col between 1 and 2 and user.name = user_extra.user_id"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on user.col between 1 and 2 and user.name = user_extra.user_id",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select user.col from user join user_extra on user.col between 1 and 2 and user.name = user_extra.user_id where 1 != 1",
    "Query": "select user.col from user join user_extra on user.col between 1 and 2 and user.name = user_extra.user_id",
    "Table": "user"
  }
}

# mergeable sharded join on unique vindex, swapped operands
"select user.col from user join user_extra on user_extra.user_id = user.name"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on user_extra.user_id = user.name",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select user.col from user join user_extra on user_extra.user_id = user.name where 1 != 1",
    "Query": "select user.col from user join user_extra on user_extra.user_id = user.name",
    "Table": "user"
  }
}

# mergeable sharded join on unique vindex, and condition
"select user.col from user join user_extra on user.name = 5 and user.name = user_extra.user_id"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on user.name = 5 and user.name = user_extra.user_id",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select user.col from user join user_extra on user.name = 5 and user.name = user_extra.user_id where 1 != 1",
    "Query": "select user.col from user join user_extra on user.name = 5 and user.name = user_extra.user_id",
    "Table": "user",
    "Values": [
      "INT64(5)"
    ],
    "Vindex": "user_index"
  }
}

# sharded join on unique vindex, inequality
"select user.col from user join user_extra on user.name < user_extra.user_id"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on user.name \u003c user_extra.user_id",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": [-1],
    "TableName": "user_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user.col, user.name from user where 1 != 1",
        "Query": "select user.col, user.name from user",
        "Table": "user"
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from user_extra where 1 != 1",
        "Query": "select 1 from user_extra where :user_name \u003c user_extra.user_id",
        "Table": "user_extra"
      }
    ]
  }
}

# sharded join, non-col reference RHS
"select user.col from user join user_extra on user.name = 5"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on user.name = 5",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": [-1],
    "TableName": "user_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectEqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user.col from user where 1 != 1",
        "Query": "select user.col from user where user.name = 5",
        "Table": "user",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "hash"
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from user_extra where 1 != 1",
        "Query": "select 1 from user_extra",
        "Table": "user_extra"
      }
    ]
  }
}

# sharded join, non-col reference LHS
"select user.col from user join user_extra on 5 = user.name"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on 5 = user.name",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": [-1],
    "TableName": "user_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectEqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user.col from user where 1 != 1",
        "Query": "select user.col from user where user.name = 5",
        "Table": "user",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "hash"
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from user_extra where 1 != 1",
        "Query": "select 1 from user_extra",
        "Table": "user_extra"
      }
    ]
  }
}

# sharded join, non-vindex col
"select user.col from user join user_extra on user.id = user_extra.col"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on user.id = user_extra.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": [-1],
    "TableName": "user_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user.col, user.id from user where 1 != 1",
        "Query": "select user.col, user.id from user",
        "Table": "user"
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from user_extra where 1 != 1",
        "Query": "select 1 from user_extra where user_extra.col = :user_id",
        "Table": "user_extra"
      }
    ]
  }
}

# col refs should be case-insensitive
"select user.col from user join user_extra on user.NAME = user_extra.User_Id"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user join user_extra on user.NAME = user_extra.User_Id",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select user.col from user join user_extra on user.NAME = user_extra.User_Id where 1 != 1",
    "Query": "select user.col from user join user_extra on user.NAME = user_extra.User_Id",
    "Table": "user"
  }
}

# database call in ON clause.
# The on clause is weird because the substitution must even for root expressions.
"select u1.a from unsharded u1 join unsharded u2 on DATABASE()"
{
  "QueryType": "SELECT",
  "Original": "select u1.a from unsharded u1 join unsharded u2 on DATABASE()",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectUnsharded",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "FieldQuery": "select u1.a from unsharded as u1 join unsharded as u2 on DATABASE() where 1 != 1",
    "Query": "select u1.a from unsharded as u1 join unsharded as u2 on DATABASE()",
    "Table": "unsharded"
  }
}

# index hints, make sure they are not stripped.
"select user.col from user use index(a)"
{
  "QueryType": "SELECT",
  "Original": "select user.col from user use index(a)",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select user.col from user use index (a) where 1 != 1",
    "Query": "select user.col from user use index (a)",
    "Table": "user"
  }
}

# subquery
"select id from (select id, col from user where name = 5) as t"
{
  "QueryType": "SELECT",
  "Original": "select id from (select id, col from user where name = 5) as t",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select id from ( select id, col from user where 1 != 1 ) t where 1 != 1",
    "Query": "select id from ( select id, col from user where name = 5 ) t",
    "Table": "user",
    "Values": [
      "INT64(5)"
    ],
    "Vindex": "hash"
  }
}

# subquery with join
"select t.name from ( select name from user where name = 5 ) as t join user_extra on t.name = user_extra.user_id"
{
  "QueryType": "SELECT",
  "Original": "select t.name from ( select name from user where name = 5 ) as t join user_extra on t.name = user_extra.user_id",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select t.name from ( select name from user where 1 != 1 ) t join user_extra on t.name = user_extra.user_id where 1 != 1",
    "Query": "select t.name from ( select name from user where name = 5 ) t join user_extra on t.name = user_extra.user_id",
    "Table": "user",
    "Values": [
      "INT64(5)"
    ],
    "Vindex": "hash"
  }
}

# subquery with join, and aliased references
"select t.name from ( select user.name from user where user.name = 5 ) as t join user_extra on t.name = user_extra.user_id"
{
  "QueryType": "SELECT",
  "Original": "select t.name from ( select user.name from user where user.name = 5 ) as t join user_extra on t.name = user_extra.user_id",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select t.name from ( select user.name from user where 1 != 1 ) t join user_extra on t.name = user_extra.user_id where 1 != 1",
    "Query": "select t.name from ( select user.name from user where user.name = 5 ) t join user_extra on t.name = user_extra.user_id",
    "Table": "user",
    "Values": [
      "INT64(5)"
    ],
    "Vindex": "user_index"
  }
}

# subquery with join, duplicate columns
"select t.name from (select user.name, name from user where user.name = 5) as t join user_extra on t.name = user_extra.user_id"
"duplicate column aliases: name"

# subquery in RHS of join
"select t.name from user_extra join ( select name from user where name = 5 ) as t on t.name = user_extra.user_id"
{
  "QueryType": "SELECT",
  "Original": "select t.name from user_extra join ( select name from user where name = 5 ) as t on t.name = user_extra.user_id",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select t.name from user_extra join ( select name from user where 1 != 1 ) t on t.name = user_extra.user_id where 1 != 1",
    "Query": "select t.name from user_extra join ( select name from user where name = 5 ) t on t.name = user_extra.user_id",
    "Table": "user_extra"
  }
}

# subquery in FROM with cross-shard join
"select t.name from ( select name from user where name = 5 ) as t join user_extra on t.name = user_extra.col"
{
  "QueryType": "SELECT",
  "Original": "select t.name from ( select name from user where name = 5 ) as t join user_extra on t.name = user_extra.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": [-1],
    "TableName": "user_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectEqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select t.name from ( select name from user where 1 != 1 ) t where 1 != 1",
        "Query": "select t.name from ( select name from user where name = 5 ) t",
        "Table": "user",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from user_extra where 1 != 1",
        "Query": "select 1 from user_extra where user_extra.col = :t_name",
        "Table": "user_extra"
      }
    ]
  }
}

# merge subqueries with single-shard routes
"select u.col, e.col from ( select col from user where name = 5 ) as u join ( select col from user_extra where user_id = 5 ) as e"
{
  "QueryType": "SELECT",
  "Original": "select u.col, e.col from ( select col from user where name = 5 ) as u join ( select col from user_extra where user_id = 5 ) as e",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select u.col, e.col from ( select col from user where 1 != 1 ) u join ( select col from user_extra where 1 != 1 ) e where 1 != 1",
    "Query": "select u.col, e.col from ( select col from user where name = 5 ) u join ( select col from user_extra where user_id = 5 ) e",
    "Table": "user",
    "Values": [
      "INT64(5)"
    ],
    "Vindex": "hash"
  }
}

# join of information_schema with normal table
"select unsharded.foo from information_schema.a join unsharded"
{
  "QueryType": "SELECT",
  "Original": "select unsharded.foo from information_schema.a join unsharded",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": [1],
    "TableName": "_unsharded",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectDBA",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select 1 from information_schema.a where 1 != 1",
        "Query": "select 1 from information_schema.a"
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectUnsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select unsharded.foo from unsharded where 1 != 1",
        "Query": "select unsharded.foo from unsharded",
        "Table": "unsharded"
      }
    ]
  }
}

# join of normal table with information_schema
"select unsharded.foo from unsharded join information_schema.a"
{
  "QueryType": "SELECT",
  "Original": "select unsharded.foo from unsharded join information_schema.a",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": [-1],
    "TableName": "unsharded_",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectUnsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select unsharded.foo from unsharded where 1 != 1",
        "Query": "select unsharded.foo from unsharded",
        "Table": "unsharded"
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectDBA",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select 1 from information_schema.a where 1 != 1",
        "Query": "select 1 from information_schema.a"
      }
    ]
  }
}

# wire-up on within cross-shard subquery
"select t.id from ( select user.id, user.col1 from user join user_extra on user_extra.col = user.col ) as t"
{
  "QueryType": "SELECT",
  "Original": "select t.id from ( select user.id, user.col1 from user join user_extra on user_extra.col = user.col ) as t",
  "Instructions": {
    "OperatorType": "Subquery",
    "Columns": [
      0
    ],
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": [-1,-2],
        "TableName": "user_user_extra",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user.id, user.col1, user.col from user where 1 != 1",
            "Query": "select user.id, user.col1, user.col from user",
            "Table": "user"
          },
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from user_extra where 1 != 1",
            "Query": "select 1 from user_extra where user_extra.col = :user_col",
            "Table": "user_extra"
          }
        ]
      }
    ]
  }
}

# subquery with join primitive (FROM)
"select id, t.id from ( select user.id from user join user_extra ) as t"
{
  "QueryType": "SELECT",
  "Original": "select id, t.id from ( select user.id from user join user_extra ) as t",
  "Instructions": {
    "OperatorType": "Subquery",
    "Columns": [
      0,
      0
    ],
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": [-1],
        "TableName": "user_user_extra",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user.id from user where 1 != 1",
            "Query": "select user.id from user",
            "Table": "user"
          },
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from user_extra where 1 != 1",
            "Query": "select 1 from user_extra",
            "Table": "user_extra"
          }
        ]
      }
    ]
  }
}

# first expression fails for ',' join (code coverage: ensure error is returned)
"select user.foo.col from user.foo, user"
"table foo not found"

# duplicate symbols
"select user.id from user join user"
"duplicate symbol: user"

# duplicate symbols for merging routes
"select user.id from user join user_extra user on user.id = user.user_id"
"duplicate symbol: user"

# non-existent table on left of join
"select c from t join user"
"table t not found"

# non-existent table on right of join
"select c from user join t"
"table t not found"

# non-existent table
# success when t in sharded keyspace
"select c from t"
"table t not found"
